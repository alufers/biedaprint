/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.1
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */

// source: curaslicer.i

package curaslicer

/*
#define intgo swig_intgo
typedef void *swig_voidp;

#include <stdint.h>


typedef long long intgo;
typedef unsigned long long uintgo;



typedef struct { char *p; intgo n; } _gostring_;
typedef struct { void* array; intgo len; intgo cap; } _goslice_;


typedef _gostring_ swig_type_1;
typedef _gostring_ swig_type_2;
typedef _gostring_ swig_type_3;
typedef _gostring_ swig_type_4;
extern void _wrap_Swig_free_curaslicer_10dd3d3907799d3c(uintptr_t arg1);
extern uintptr_t _wrap_Swig_malloc_curaslicer_10dd3d3907799d3c(swig_intgo arg1);
extern uintptr_t _wrap_new_CuraInterface_curaslicer_10dd3d3907799d3c(void);
extern swig_type_1 _wrap_CuraInterface_getAllSettingsString_curaslicer_10dd3d3907799d3c(uintptr_t arg1);
extern void _wrap_CuraInterface_addGlobalSetting_curaslicer_10dd3d3907799d3c(uintptr_t arg1, swig_type_2 arg2, swig_type_3 arg3);
extern void _wrap_CuraInterface_addExtruder_curaslicer_10dd3d3907799d3c(uintptr_t arg1);
extern swig_intgo _wrap_CuraInterface_loadModelIntoMeshGroup_curaslicer_10dd3d3907799d3c(uintptr_t arg1, swig_type_4 arg2);
extern void _wrap_CuraInterface_performSlice_curaslicer_10dd3d3907799d3c(uintptr_t arg1);
extern void _wrap_delete_CuraInterface_curaslicer_10dd3d3907799d3c(uintptr_t arg1);
#undef intgo
*/
import "C"

import "unsafe"
import _ "runtime/cgo"
import "sync"


type _ unsafe.Pointer



var Swig_escape_always_false bool
var Swig_escape_val interface{}


type _swig_fnptr *byte
type _swig_memberptr *byte


type _ sync.Mutex


type swig_gostring struct { p uintptr; n int }
func swigCopyString(s string) string {
  p := *(*swig_gostring)(unsafe.Pointer(&s))
  r := string((*[0x7fffffff]byte)(unsafe.Pointer(p.p))[:p.n])
  Swig_free(p.p)
  return r
}

func Swig_free(arg1 uintptr) {
	_swig_i_0 := arg1
	C._wrap_Swig_free_curaslicer_10dd3d3907799d3c(C.uintptr_t(_swig_i_0))
}

func Swig_malloc(arg1 int) (_swig_ret uintptr) {
	var swig_r uintptr
	_swig_i_0 := arg1
	swig_r = (uintptr)(C._wrap_Swig_malloc_curaslicer_10dd3d3907799d3c(C.swig_intgo(_swig_i_0)))
	return swig_r
}

type SwigcptrCuraInterface uintptr

func (p SwigcptrCuraInterface) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrCuraInterface) SwigIsCuraInterface() {
}

func NewCuraInterface() (_swig_ret CuraInterface) {
	var swig_r CuraInterface
	swig_r = (CuraInterface)(SwigcptrCuraInterface(C._wrap_new_CuraInterface_curaslicer_10dd3d3907799d3c()))
	return swig_r
}

func (arg1 SwigcptrCuraInterface) GetAllSettingsString() (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_CuraInterface_getAllSettingsString_curaslicer_10dd3d3907799d3c(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func (arg1 SwigcptrCuraInterface) AddGlobalSetting(arg2 string, arg3 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	C._wrap_CuraInterface_addGlobalSetting_curaslicer_10dd3d3907799d3c(C.uintptr_t(_swig_i_0), *(*C.swig_type_2)(unsafe.Pointer(&_swig_i_1)), *(*C.swig_type_3)(unsafe.Pointer(&_swig_i_2)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
}

func (arg1 SwigcptrCuraInterface) AddExtruder() {
	_swig_i_0 := arg1
	C._wrap_CuraInterface_addExtruder_curaslicer_10dd3d3907799d3c(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrCuraInterface) LoadModelIntoMeshGroup(arg2 string) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (int)(C._wrap_CuraInterface_loadModelIntoMeshGroup_curaslicer_10dd3d3907799d3c(C.uintptr_t(_swig_i_0), *(*C.swig_type_4)(unsafe.Pointer(&_swig_i_1))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func (arg1 SwigcptrCuraInterface) PerformSlice() {
	_swig_i_0 := arg1
	C._wrap_CuraInterface_performSlice_curaslicer_10dd3d3907799d3c(C.uintptr_t(_swig_i_0))
}

func DeleteCuraInterface(arg1 CuraInterface) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_CuraInterface_curaslicer_10dd3d3907799d3c(C.uintptr_t(_swig_i_0))
}

type CuraInterface interface {
	Swigcptr() uintptr
	SwigIsCuraInterface()
	GetAllSettingsString() (_swig_ret string)
	AddGlobalSetting(arg2 string, arg3 string)
	AddExtruder()
	LoadModelIntoMeshGroup(arg2 string) (_swig_ret int)
	PerformSlice()
}




var swigDirectorTrack struct {
	sync.Mutex
	m map[int]interface{}
	c int
}

func swigDirectorAdd(v interface{}) int {
	swigDirectorTrack.Lock()
	defer swigDirectorTrack.Unlock()
	if swigDirectorTrack.m == nil {
		swigDirectorTrack.m = make(map[int]interface{})
	}
	swigDirectorTrack.c++
	ret := swigDirectorTrack.c
	swigDirectorTrack.m[ret] = v
	return ret
}

func swigDirectorLookup(c int) interface{} {
	swigDirectorTrack.Lock()
	defer swigDirectorTrack.Unlock()
	ret := swigDirectorTrack.m[c]
	if ret == nil {
		panic("C++ director pointer not found (possible	use-after-free)")
	}
	return ret
}

func swigDirectorDelete(c int) {
	swigDirectorTrack.Lock()
	defer swigDirectorTrack.Unlock()
	if swigDirectorTrack.m[c] == nil {
		if c > swigDirectorTrack.c {
			panic("C++ director pointer invalid (possible memory corruption")
		} else {
			panic("C++ director pointer not found (possible use-after-free)")
		}
	}
	delete(swigDirectorTrack.m, c)
}


