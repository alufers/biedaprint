{"G0":{"author":"thinkyhead","base":"G000-G001","brief":"Add a straight line movement to the planner","codes":["G0","G1"],"devnotes":"- Developers: Keep using `G0` for non-print moves. It makes G-code more adaptable to lasers, engravers, etc.\n","examples":[{"code":["G0 X12   ; move to 12mm on the X axis","G0 F1500 ; set the feedrate to 1500mm/minute","G1 X90.6 Y13.8 ; move to 90.6mm on the X axis and 13.8mm on the Y axis"],"pre":"The most basic move sets a feedrate and moves the tool to the given position."},{"code":["G1 F1500 ; set the feedrate to 1500mm/minute","G92 E0","G1 X50 Y25.3 E22.4 ; move while extruding"],"post":"In the above example the feedrate is set to 1500mm/minute, then the tool is moved 50mm on the X axis and 25.3mm on the Y axis while extruding 22.4mm of filament between the two points.","pre":"There are some caveats related with feedrates. Consider the following\u0026#x3A;"},{"code":["G1 F1500","G92 E0","G1 X50 Y25.3 E22.4 F3000"],"post":"However, in the above example, we set a feedrate of 1500 mm/minute on line 1 then do the move described above, accelerating to a feedrate of 3000 mm/minute (if possible). The extrusion will accelerate along with the X and Y movement, so everything stays synchronized."}],"experimental":false,"group":"planner","long":"The `G0` and `G1` commands add a linear move to the queue to be performed after all previous moves are completed. These commands yield control back to the command parser as soon as the move is queued, but they may delay the command parser while awaiting a slot in the queue.\n\nA linear move traces a straight line from one point to another, ensuring that the specified axes will arrive simultaneously at the given coordinates (by linear interpolation). The speed may change over time following an acceleration curve, according to the acceleration and jerk settings of the given axes.\n\nA command like `G1 F1000` sets the feedrate for all subsequent moves.\n\nBy convention, most G-code generators use `G0` for non-extrusion movements (those without the E axis) and `G1` for moves that include extrusion. This is meant to allow a kinematic system to, optionally, do a more rapid uninterpolated movement requiring much less calculation.\n\nFor Cartesians and Deltas the `G0` (rapid linear movement) command is (and must be) a direct alias for `G1` (rapid movement). On SCARA machines `G0` does a fast non-linear move. Marlin 2.0 introduces an option to maintain a separate default feedrate for `G0`. *Note: Slicers tend to override firmware feedrates!*\n","notes":"- Coordinates are given in millimeters by default. Units may be set to inches by `G20`.\n- In Relative Mode (`G91`) all coordinates are interpreted as relative, adding onto the previous position.\n- A single linear move may generate several smaller moves to the planner due to kinematics and bed leveling compensation. Printing performance can be tuned by adjusting segments-per-second.\n","parameters":[{"description":"A coordinate on the X axis","optional":true,"tag":"X","values":[{"tag":"pos","type":"float"}]},{"description":"A coordinate on the Y axis","optional":true,"tag":true,"values":[{"tag":"pos","type":"float"}]},{"description":"A coordinate on the Z axis","optional":true,"tag":"Z","values":[{"tag":"pos","type":"float"}]},{"description":"The length of filament to feed into the extruder between the start and end point","optional":true,"tag":"E","values":[{"tag":"pos","type":"float"}]},{"description":"The maximum movement rate of the move between the start and end point. The feedrate set here applies to subsequent moves that omit this parameter.","optional":true,"tag":"F","values":[{"tag":"rate","type":"float"}]}],"since":"1.0.0-beta","tag":"g00","title":"Linear Move"},"G10":{"author":"thinkyhead","base":"G010","brief":"Retract the filament","codes":["G10"],"example":[{"code":["G10 ; retract"]}],"experimental":false,"group":"planner","long":["Retract the filament according to settings of [`M207`](/docs/gcode/M207.html).","Firmware retraction allows you to tune retraction at the machine level and can significantly reduce the size of G-code files.","Multiple consecutive `G10` or `G10 S1` commands without a corresponding `G11` or `G11 S1` will be ignored.","Performs two moves: a retract move at the retract feedrate/acceleration, and an optional Z lift at the maximum Z feedrate (travel acceleration)."],"notes":["Requires `FWRETRACT`.","See related codes [`G11`](/docs/gcode/G011.html), [`M207`](/docs/gcode/M207.html), [`M208`](/docs/gcode/M208.html), and [`M209`](/docs/gcode/M209.html)."],"parameters":[{"description":"Use `G10 S1` to do a swap retraction, before changing extruders. The subsequent `G11` (after tool change) will do a swap recover. (Requires `EXTRUDERS` \u003e 1)","optional":true,"tag":"S","values":[{"tag":"flag","type":"bool"}]}],"requires":"FWRETRACT","since":"1.0.0-beta","tag":"g10","title":"Retract"},"G11":{"author":"thinkyhead","base":"G011","brief":"Recover the filament with firmware-based retract.","codes":["G11"],"example":[{"code":["G11 ; recover"]}],"experimental":false,"group":"planner","long":["Unretract (i.e., recover, prime) the filament according to settings of [`M208`](/docs/gcode/M208.html).","Multiple consecutive `G11` or `G11 S1` commands without a corresponding `G10` or `G10 S1` will be ignored.","Performs two moves: An optional Z lower at the maximum Z feedrate (travel acceleration), and a recovery move at the recover feedrate (retract acceleration)."],"notes":["Requires `FWRETRACT`.","See related codes [`G10`](/docs/gcode/G010.html), [`M207`](/docs/gcode/M207.html), [`M208`](/docs/gcode/M208.html), and [`M209`](/docs/gcode/M209.html)."],"requires":"FWRETRACT","since":"1.0.0-beta","tag":"g11","title":"Recover"},"G12":{"base":"G012","brief":"Perform the nozzle cleaning procedure.","codes":["G12"],"examples":[{"code":"G12 ; stroke pattern (default)","pre":"The most basic example is to use the command without any arguments, this will default to a stroke based pattern which will be stroked `NOZZLE_CLEAN_STROKES` times."},{"code":"G12 P1 S1 T3 ; zig-zag pattern with 3 triangles","pre":"To generate a three triangle zig-zag pattern which will be stroked one time use the following command."},{"code":"G12 P2 S1 R10 ; 10mm circle","pre":"To generate a 10mm radius circle which will be stroked one time use the following command."}],"experimental":true,"group":"nozzle","long":"Start the nozzle cleaning process. Three types of cleaning patterns are supported: straight strokes, zigzags and circles. This feature requires a dedicated cleaning area on or outside the bed, but within reach of the nozzle. The pattern may be repeated as many times as desired.\n","notes":["Default behavior is defined by `NOZZLE_CLEAN_STROKES`, `NOZZLE_CLEAN_START_POINT`, `NOZZLE_CLEAN_END_POINT`, `NOZZLE_CLEAN_TRIANGLES`, `NOZZLE_CLEAN_CIRCLE_MIDDLE`, `NOZZLE_CLEAN_CIRCLE_RADIUS` and `NOZZLE_CLEAN_GOBACK`.","With `NOZZLE_CLEAN_GOBACK` enabled, the nozzle automatically returns to the XYZ position before `G12`."],"parameters":[{"description":"Pattern style selection","optional":true,"tag":"P","values":[{"description":"Stroke straight back and forth","tag":0},{"description":"Move in a zigzag pattern","tag":1},{"description":"Move in a circular pattern","tag":2}]},{"description":"Radius of nozzle cleaning circle","optional":true,"tag":"R","values":[{"tag":"radius","type":"float"}]},{"description":"Number of repetitions of the pattern","optional":true,"tag":"S","values":[{"tag":"count","type":"int"}]},{"description":"Number of triangles in the zigzag pattern","optional":true,"tag":"T","type":"int","values":[{"tag":"count","type":"int"}]}],"requires":"NOZZLE_CLEAN_FEATURE","since":"1.1.0","tag":"g12","title":"Clean the Nozzle"},"G2":{"author":"thinkyhead","base":"G002-G003","brief":"Add an arc movement to the planner","codes":["G2","G3"],"examples":[{"code":"G2 X125 Y32 I10.5 J10.5","pre":"Move in a clockwise arc from the current position to (125, 32) with the center offset from the current position by (10.5, 10.5)."},{"code":"G3 X125 Y32 I10.5 J10.5","pre":"Move in a counter-clockwise arc from the current position to (125, 32) with the center offset from the current position by (10.5, 10.5)."},{"code":"G2 I20 J20","pre":"Move in a complete clockwise circle with the center offset from the current position by 20, 20."}],"experimental":false,"group":"planner","long":"`G2` adds a clockwise arc move to the planner; `G3` adds a counter-clockwise arc. An arc move starts at the current position and ends at the given XYZ, pivoting around a center-point offset given by `I` and `J` or `R`.\n\nThis command has two forms:\n#### I J Form\n\n - `I` specifies an X offset. `J` specifies a Y offset.\n - At least one of the `I` `J` parameters is required.\n - `X` and `Y` can be omitted to do a complete circle.\n - The given `X` `Y` is not error-checked.\n   The arc ends based on the angle of the destination.\n - Mixing `I` or `J` with `R` will throw an error.\n\n#### R Form\n - `R` specifies the radius. `X` or `Y` is required.\n - Omitting both `X` and `Y` will throw an error.\n - `X` or `Y` must differ from the current XY position.\n - Mixing `R` with `I` or `J` will throw an error.\n\nArc moves actually generate several short straight-line moves, the length of which are determined by the configuration option `MM_PER_ARC_SEGMENT` (default 1mm). Any change in the Z position is linearly interpolated over the whole arc.\n","parameters":[{"description":"A coordinate on the X axis","optional":true,"tag":"X","values":[{"tag":"pos","type":"float"}]},{"description":"A coordinate on the Y axis","optional":true,"tag":true,"values":[{"tag":"pos","type":"float"}]},{"description":"A coordinate on the Z axis","optional":true,"tag":"Z","values":[{"tag":"pos","type":"float"}]},{"description":"An offset from the current X position to use as the arc center","optional":false,"tag":"I","type":"float","values":[{"tag":"offset","type":"float"}]},{"description":"An offset from the current Y position to use as the arc center","optional":false,"tag":"J","type":"float","values":[{"tag":"offset","type":"float"}]},{"description":"A radius from the current XY position to use as the arc center","optional":false,"tag":"R","type":"float","values":[{"tag":"radius","type":"float"}]},{"description":"The amount to extrude between the start point and end point","optional":true,"tag":"E","type":"float","values":[{"tag":"pos","type":"float"}]},{"description":"The maximum rate of the move between the start and end point","optional":true,"tag":"F","values":[{"optional":false,"tag":"rate","type":"float"}]}],"since":"1.0.0-beta","tag":"g02","title":"Controlled Arc Move"},"G20":{"author":"thinkyhead","base":"G020","brief":"Set Units to Inches.","codes":["G20"],"example":[{"code":["G20 ; set units to inches"]}],"experimental":false,"group":"units","long":["Set units to inches. In this mode, all positions, offsets, rates, accelerations, etc., specified in G-code parameters are interpreted as inches."],"requires":"INCH_MODE_SUPPORT","since":"1.1.0","tag":"g20","title":"Inch Units"},"G21":{"author":"thinkyhead","base":"G021","brief":"Set Units to Millimeters.","codes":["G21"],"example":[{"code":["G21 ; set units to millimeters"]}],"experimental":false,"group":"units","long":"Set units to millimeters. In this mode, all positions, offsets, rates, accelerations, etc., specified in GCode parameters are interpreted as millimeters.","requires":"INCH_MODE_SUPPORT","since":"1.1.0","tag":"g21","title":"Millimeter Units"},"G26":{"base":"G026","brief":"Test the mesh and adjust.","codes":["G26"],"examples":null,"experimental":true,"group":"calibration","long":["`G26` Mesh Validation Pattern is designed to be used in conjunction with mesh-based leveling to test the accuracy of the probed mesh.\n\nThe `G26` command prints a single-layer pattern over the entire print bed, giving a clear indication of how accurately every mesh point is defined. `G26` can be used to determine which areas of the mesh are less-than-perfect and how much to adjust each mesh point.\n"],"notes":"- Before 1.1.6 requires `UBL_G26_MESH_VALIDATION` and `AUTO_BED_LEVELING_UBL`.\n- Since 1.1.7 requires `G26_MESH_VALIDATION` and `HAS_MESH` (`AUTO_BED_LEVELING_UBL`, `MESH_BED_LEVELING`, or `AUTO_BED_LEVELING_BILINEAR`).\n","parameters":[{"description":"Bed temperature (otherwise 60°C) to use for the test print.","optional":true,"tag":"B","values":[{"tag":"temp","type":"int"}]},{"description":"Continue with the closest point (otherwise, don't)","optional":true,"tag":"C","values":[{"type":"bool"}]},{"description":"Disable leveling compensation (otherwise, enable)","optional":true,"tag":"D","values":[{"type":"bool"}]},{"description":"Filament diameter (otherwise 1.75mm)","optional":true,"tag":"F","values":[{"tag":"linear","type":"float"}]},{"description":"Hot end temperature (otherwise 205°C) to use for the test print.","optional":true,"tag":"H","values":[{"tag":"linear","type":"float"}]},{"description":"Keep heaters on when done","optional":true,"tag":"K","values":[{"type":"bool"}]},{"description":"Layer height to use for the test","optional":true,"tag":"L","values":[{"tag":"linear","type":"float"}]},{"description":"Ooze amount (otherwise 0.3mm). Emitted at the start of the test.","optional":true,"tag":"O","values":[{"tag":"linear","type":"float"}]},{"description":"Prime Length","optional":true,"tag":"P","values":[{"tag":"linear","type":"float"}]},{"description":"Retraction multiplier (otherwise 1.0)","optional":true,"tag":"Q","values":[{"type":"float"}]},{"description":"Number of `G26` Repetitions (otherwise 999)","optional":true,"tag":"R","values":[{"type":"int"}]},{"description":"Nozzle size (otherwise 0.4mm)","optional":true,"tag":"S","values":[{"type":"float"}]},{"description":"Random deviation. (`U` with no value, 50).","optional":true,"tag":"U","values":[{"tag":"linear","type":"float"}]},{"description":"X position (otherwise, current X position)","optional":true,"tag":"X","values":[{"tag":"linear","type":"float"}]},{"description":"Y position (otherwise, current Y position)","optional":true,"tag":true,"values":[{"tag":"linear","type":"float"}]}],"requires":"HAS_MESH,G26_MESH_VALIDATION","since":"1.1.0","tag":"g26","title":"Mesh Validation Pattern"},"G27":{"base":"G027","brief":"Park the toolhead","codes":["G27"],"examples":[{"code":"G27 ; Raise Z if lower","pre":"The most basic example is to use the command without any arguments, which raises Z by the default distance and moves to the parking position."},{"code":"G27 P2 ; Always raise Z","pre":"This one is useful as an end script, simply raising Z and parking."}],"experimental":true,"group":"nozzle","long":"Park the nozzle at a predefined XYZ position.","notes":["Requires `NOZZLE_PARK_FEATURE`.","The park position is defined by `NOZZLE_PARK_POINT`."],"parameters":[{"description":"Z axis action","optional":true,"tag":"P","values":[{"description":"If current Z-pos is lower than Z-park then the nozzle will be raised to reach Z-park height","tag":0},{"description":"No matter the current Z-pos, the nozzle will be raised/lowered to reach Z-park height","tag":1},{"description":"The nozzle height will be raised by Z-park amount but never going over the machine's limit of `Z_MAX_POS`","tag":2}]}],"requires":"NOZZLE_PARK_FEATURE","since":"1.1.0","tag":"g27","title":"Park toolhead"},"G28":{"author":"thinkyhead","base":"G028","brief":"Auto home one or more axes.","codes":["G28"],"examples":[{"code":["G28 ; Go to origin on all axes"],"post":["With no arguments to `G28`, Marlin homes according to the `Z_SAFE_HOMING`, `QUICK_HOME` and `HOME_Y_BEFORE_X` settings."],"pre":["The most-used form of this command is to home all axes:"]},{"code":["G28 X Z ; Home the X and Z axes"]}],"experimental":false,"group":"calibration","long":["Auto-home one or more axes, moving them towards their endstops until triggered. Each axis is backed off and re-bumped according to the `[XYZ]_HOME_BUMP_MM` and `HOMING_BUMP_DIVISOR` settings."],"notes":["Homing is required before `G29`, `M48`, and some other procedures.","If homing is needed the LCD will blink the X Y Z indicators.","`G28` disables bed leveling. Follow with `M420 S` to turn leveling on, or use `RESTORE_LEVELING_AFTER_G28` to automatically keep leveling on after `G28`."],"parameters":[{"description":"Optional. If the position is known then exit without homing. (1.1.9)","optional":true,"tag":"O","type":"bool"},{"description":"Raise before homing distance (1.1.9)","optional":true,"tag":"R","type":"float"},{"description":"Flag to go back to the X axis origin","optional":true,"tag":"X","type":"bool"},{"description":"Flag to go back to the Y axis origin","optional":true,"tag":true,"type":"bool"},{"description":"Flag to go back to the Z axis origin","optional":true,"tag":"Z","type":"bool"}],"tag":"g28","title":"Auto Home"},"G29":{"base":"G029-ubl","brief":"Probe the bed and enable leveling compensation.","codes":["G29"],"examples":[{"code":"M502          ; Reset settings to configuration defaults...\nM500          ; ...and Save to EEPROM. Use this on a new install.\nM501          ; Read back in the saved EEPROM.  \n\nM190 S65      ; Not required, but having the printer at temperature helps accuracy\nM104 S210     ; Not required, but having the printer at temperature helps accuracy\n\nG28           ; Home XYZ.\nG29 P1        ; Do automated probing of the bed.\nG29 P2 B T    ; Manual probing of locations. USUALLY NOT NEEDED!\nG29 P3 T      ; Repeat until all mesh points are filled in.\n\nG29 T         ; View the Z compensation values.\nG29 S1        ; Save UBL mesh points to EEPROM.\nG29 F 10.0    ; Set Fade Height for correction at 10.0 mm.\nG29 A         ; Activate the UBL System.\nM500          ; Save current setup. WARNING - UBL will be active at power up, before any G28.\n","pre":"This is a minimal 'quick-start' sequence for set-up and initial probing of a UBL mesh on a machine that includes a display and z-probe"},{"code":"G26 C P T3.0  ; Produce mesh validation pattern with primed nozzle.\n    ; NOTE - PLA temperatures are assumed unless you specify - e.g. - B 105 H 225 for ABS Plastic\nG29 P4 T      ; Move nozzle to 'bad' areas and fine tune the values if needed.\n    ; Repeat G26 and G29 P4 T  commands as needed.\nG29 S1        ; Save UBL mesh values to EEPROM.\nM500          ; Resave UBL's state information.\n","pre":"Use `G26` and `G29` commands to fine-tune a measured mesh"},{"code":"G29 L1        ; Load the mesh stored in slot 1 (from G29 S1)\nG29 J         ; No size specified on the J option tells G29 to probe the specified 3 points and tilt the mesh according to what it finds.","pre":"Use 3-point probe to 'tilt' a stored mesh; e.g. in your startup script"}],"experimental":true,"group":"calibration","long":["The Unified Bed Leveling System (UBL) provides a comprehensive set of resources to produce the best bed leveling results possible.","See the full [Unified Bed Leveling](/docs/features/unified_bed_leveling.html) documentation for more details. (Examples below.)"],"notes":["Requires `AUTO_BED_LEVELING_UBL`.","`G28` disables bed leveling. Follow with `M420 S` to turn leveling on, or use `RESTORE_LEVELING_AFTER_G28` to automatically keep leveling on after `G28`.","It's highly recommended to enable EEPROM. With EEPROM storage enabled, UBL is limited to 3-Point (`G29 P0 T`) and Grid (`G29 P0 G`) Leveling.","When you do a `G28` and then a `G29 P1` to automatically build your first mesh, you'll notice that UBL probes increasingly far from the starting location. (The starting location defaults to the center of the bed.) Other grid leveling systems start in the corner and probe in a zigzag. UBL's pattern is better for Delta machines, allowing for the center of the Mesh to be populated (and edited) more quickly. You can then do a small test print to check the mesh early in the process. You don't need to populate the entire mesh to use it. You don't want to spend a lot of time generating a mesh only to realize that the the resolution or `M851 Z` probe offset is off. UBL mesh generation gathers points closest the nozzle unless you specify an (X,Y) coordinate pair.","UBL requires a decent amount of EEPROM to store its mesh data. And it takes some effort to get this Mesh data correct for a given machine. To keep this data from being destroyed when the EEPROM version changes the Mesh data is stored at the high end of the EEPROM. (Happily, no developers seem to mind.)","This system is built around Edward Patel's \"Mesh Bed Leveling\" system. A big \"Thanks!\" to him and to the creators of 3-Point and Grid Based leveling. Combining their contributions we now have the functionality and features of all three systems combined."],"parameters":[{"description":"**Activate**\nUnified Bed Leveling (i.e., `M420 S1`)\n","optional":true,"tag":"A","values":[{"type":"bool"}]},{"description":"**Business Card** mode (`P2` only)\n- Use the 'Business Card' mode of the Manual Probe subsystem with `P2`.\n- In this mode of `G29 P2`, use a shim that the nozzle can grab onto as it is lowered.\n  In principle, the nozzle-bed distance is the same when the same resistance is felt in\n  the shim. You can omit the numerical value on first invocation of `G29 P2 B` to measure\n  shim thickness. Subsequent use of `B` will apply the previously-measured thickness by default.\n- Note: A non-compressible Spark Gap feeler gauge is recommended over a business card.\n","optional":true,"tag":"B","values":[{"type":"bool"}]},{"description":"- `G29 P1 C` Continue:\n  Continues the generation of a partially-constructed Mesh without invalidating\n  previous measurements.\n- `G29 P2 C` Constant: specifies a Constant and tells the Manual Probe subsystem to use the current\n  location in its search for the closest unmeasured Mesh Point.\n- `G29 P3 C` Constant: specifies the Constant for the fill. Otherwise, uses a \"reasonable\" value.\n- `G29 Z C` Current:\n   Use the Current location (instead of bed center or nearest edge).\n","optional":true,"tag":"C","values":[{"tag":"bool/float","type":"value"}]},{"description":"Disable Unified Bed Leveling (i.e., `M420 S0`).","optional":true,"tag":"D","values":[{"type":"bool"}]},{"description":"Stow probe after probing `E`ach point (`P1` only).","optional":true,"tag":"E","values":[{"type":"bool"}]},{"description":"**Fade** height. (UBL only! For others use `M420 Z`)\n\nFade the amount of Mesh Based Compensation over a specified height. At the\nspecified height, no correction is applied and natural printer kenimatics take over. If no\nnumber is specified for the command, 10mm is assumed to be reasonable.\n","optional":true,"tag":"F","values":[{"type":"float","unit":"linear"}]},{"description":"**Height**:\n- `G29 P2 H`: Height for Manual Probe raise (`P2` only).\n  Specify the Height to raise the nozzle after each manual probe of the bed.\n  If omitted, the nozzle will raise by `Z_CLEARANCE_BETWEEN_PROBES`.\n- `G29 P4 H` : Offset above the mesh height to place the nozzle.\n  If omitted, `Z_CLEARANCE_BETWEEN_PROBES` will be used.\n","optional":true,"tag":"H","values":[{"type":"float","unit":"linear"}]},{"description":"**Invalidate**\na number of mesh points (default 1).\n- Invalidate Mesh Points near the given `X Y` (Default: nozzle position)\n- If no `I` value is given, only the point nearest to the given position is invalidated.\n  Use `T` to produce a map afterward. This command is useful to invalidate a portion of\n  the Mesh so it can be adjusted using other UBL tools. When attempting to invalidate an\n  isolated bad mesh point, the `T` option shows the nozzle position in the Mesh with (#).\n- You can move the nozzle around and use this feature to select the center of the area\n  (or cell) to invalidate.\n","optional":true,"tag":"I","values":[{"type":"int"}]},{"description":"**Grid** (or 3-Point) leveling:\n- These options calculate a plane and adjust the existing mesh to the bed tilt.\n- If a value is provided, probe a grid with the given number of points, squared.\n- With no value, probe 3 points to find the plane of the bed.\n","optional":true,"tag":"J","values":[{"type":"int"}]},{"description":"**Kompare**: Subtract (diff) the stored mesh with the given index from the current mesh. This\noperates on the mesh in-memory, so it will probably make the active mesh unsuitable\nfor printing.\n","optional":true,"tag":"K","values":[{"type":"int","unit":"index"}]},{"description":"**Load** a mesh. If no index is given, load the previously-activated mesh.\nThe given mesh index will be used for subsequent Load and Store operations.\n","optional":true,"tag":"L","values":[{"type":"int","unit":"index"}]},{"description":"**Phase**:\nThe `P`hase commands are used for the bulk of the work to setup a Mesh. In general, you'll start\nby initializing with a `G29 P0` or a `G29 P1` then do further refinement with additional Phases.\n","optional":true,"tag":"P","values":[{"description":"**Zero Mesh Data** and turn off the Mesh Compensation System. This reverts the\nmachine to the same state it was in before UBL Compensation was enabled. Setting\nthe entire Mesh to Zero is a special case to allow a subsequent `G` or `T`\nleveling operation for backward-compatibility.\n","tag":0},{"description":"**Automatic Probing** invalidates the mesh and continues automatic probing using the probe.\n- In most cases the probe can't reach all areas that the nozzle can due to the offsets\n  specified by `X_PROBE_OFFSET_FROM_EXTRUDER` and `Y_PROBE_OFFSET_FROM_EXTRUDER`.\n  Deltabots can only probe within the area where `DELTA_PROBEABLE_RADIUS` and\n  `DELTA_PRINTABLE_RADIUS` overlap.\n- Unreachable points can be filled in later with the `P2` and `P3` phases.\n- Use `C` to leave the previous mesh intact and automatically probe needed points. This allows you\n  to invalidate parts of the mesh but still use Automatic Probing.\n- The `X` and `Y` parameters prioritize where to try and measure points. If omitted, the current\n  probe position is used.\n- Use `T` (Topology) in this phase to report the probing results.\n- `P1` will suspend mesh generation if the controller button is held down. Note that you may need\n  to press and hold the switch for several seconds if moves are underway.\n","tag":1},{"description":"**Probe Areas** of the mesh that can't be automatically handled.\n- Use `H` to set the height between mesh points. If omitted, Z_CLEARANCE_BETWEEN_PROBES is used.\n  Smaller values will be quicker. Move the nozzle down till it barely touches the bed. Make sure the\n  nozzle is clean and unobstructed. Use caution and move slowly. This can damage your printer!\n  (Uses SIZE_OF_LITTLE_RAISE mm if the nozzle is moving less than BIG_RAISE_NOT_NEEDED mm.)\n- The `H` value can be negative if the mesh dips in a large area. Press and hold the\n  controller button to terminate the current Phase 2 command. You can then re-issue `G29 P 2`\n  with an `H` parameter more suitable for the area you're manually probing. Note that the command\n  tries to start in a corner of the bed where movement will be predictable. Override the distance\n  calculation location with the `X` and `Y` parameters. You can print a mesh Map (`G29 T`) to see\n  where the mesh is invalidated and where the nozzle needs to move to complete the command. Use `C`\n  to indicate that the search should be based on the current position.\n- The `B` parameter for this command is described above. It places the manual probe subsystem into\n  Business Card mode where the thickness of a business card is measured and then used to accurately\n  set the nozzle height in all manual probing for the duration of the command. A Business card can\n  be used, but you'll get better results with a flexible Shim that doesn't compress. This makes it\n  easier to produce similar amounts of force and get more accurate measurements. Google if you're\n  not sure how to use a shim.\n- The `T` (Map) parameter helps track mesh building progress.\n- NOTE: `P2` requires an LCD controller!\n","tag":2},{"description":"**Fill Unpopulated** regions of the mesh with a fixed value (`C`) or use 'smart fill' to extrapolate\nfrom already probed points (`no argument`).\n- With a `C` constant, the closest invalid mesh points to the nozzle will be filled, and then a repeat\n  count can also be specified with `R`.\n- Without `C` it does a **Smart Fill**, which scans the mesh from the edges inward looking for\n  invalid mesh points. Adjacent points are used to determine the bed slope. If the bed is sloped\n  upward from the invalid point, it takes the value of the nearest point. If sloped downward, it's\n  replaced by a value that puts all three points in a line. This version of `G29 P3` is a quick, easy\n  and (usually) safe way to populate unprobed mesh regions before continuing to `G26` Mesh Validation\n  Pattern. Note that this populates the mesh with unverified values. Pay attention and use caution.\n","tag":3},{"description":"**Fine Tune** the Mesh. Generally used in the form `G29 P4 Rnn Xxxx Yyyy`.\n- This phase requires an LCD Panel. To fine-tune the mesh without a controller, use `G42` and `M421`.\n- Phase 4 is meant to be used with `G26` Mesh Validation to fine tune the mesh by direct editing\n  of Mesh Points. Raise and lower points to fine tune the mesh until it gives consistently reliable\n  adhesion.\n- `P4` moves to the closest Mesh Point (and/or the given `X` `Y`), raises the nozzle above the mesh height\n  by the given `H` offset (or default Z_CLEARANCE_BETWEEN_PROBES), and waits while the controller is\n  used to adjust the nozzle height. On click the displayed height is saved in the mesh.\n- Start Phase 4 at a specific location with `X` and `Y`. Adjust a specific number of Mesh Points with\n  the `R` (Repeat) parameter. (If `R` is left out, the whole matrix is assumed.) This command can be\n  terminated early (e.g., after editing the area of interest) by pressing and holding the encoder button.\n- The general form is `G29 P4 [R points] [X position] [Y position]`.\n- The `H[offset]`` parameter is useful if a shim is used to fine-tune the mesh. For a 0.4mm shim the\n  command would be `G29 P4 H0.4`. The nozzle is moved to the shim height, you adjust height to the shim,\n  and on click the height minus the shim thickness is saved in the mesh.\n- _USE WITH CAUTION, as a bad mesh can cause the nozzle to crash into the bed!_\n","tag":4},{"description":"**Find Mean** Mesh Height and Standard Deviation.\n- Typically, it is easier to use and work with the Mesh if it is Mean-Adjusted. You can specify a `C`\n  parameter to Correct the Mesh to a 0.00 Mean Height. With a `C` parameter this will automatically\n  execute a `G29 P6 C[mean height]`.\n","tag":5},{"description":"**Shift Mesh** height by the `C` value.\n- The entire Mesh's height is adjusted by the height specified by the `C` parameter. It's useful to be\n  able to adjust the height of a mesh. It can be used to compensate for a poorly-calibrated probe or other\n  errors. Ideally, you should have the Mesh adjusted for a Mean Height of 0.00 and the Z-Probe measuring\n  0.0 at the Z homing position.\n","tag":6}]},{"description":"Test Pattern.\nLoad the specified Test Pattern to check for correct operation. This command is intended for developers and is\nnot required for everyday bed leveling.\n","optional":true,"tag":"Q","values":[{"type":"int","unit":"index"}]},{"description":"Repeat count. (Default `GRID_MAX_POINTS_X * GRID_MAX_POINTS_Y`).\n- `P3` Example: `G29 P3 R4 C0` will set the 4 points closest to the nozzle to `0`.\n- `P4` Example: `G29 P4 R3 X80 Y80` will allow you to adjust the 3 points closest to X80 Y80.\n- This parameter does not apply to Phase 1! `P1` will always attempt to probe the full grid.\n","optional":true,"tag":"R","values":[{"type":"int"}]},{"description":"**Save** the mesh to EEPROM in the given slot.\n- If no slot number is given, save to the last-activated slot.\n- Use `S-1` for G-code output that can be used to restore the mesh anytime.\n- Note that this command also saves the current UBL state (enabled or disabled).\n","optional":true,"tag":"S","values":[{"tag":"slot","type":"int"}]},{"description":"**Topology**: Include a Topology Map in the output.\n- This parameter can be used alone (`G29 T`) or in combination with most of the other commands.\n- This option works with all Phase commands (e.g., `G29 P4 R 5 T X 50 Y100 C-0.1 O`)\n- A map type can also be specified:\n  - `T0`: Human-readable (the default)\n  - `T1`: Delimited. Suitable to paste into a spreadsheet to obtain a 3D graph of the mesh.\n","optional":true,"tag":"T","values":[{"tag":0},{"tag":1}]},{"description":"**Unlevel**: Probe the outer perimeter to assist bed tramming. (Use with `G29 P1 O`)\n- Only used with `G29 P1 T U`. This speeds up the probing of the edge of the bed. This option is\n  useful when the entire bed doesn't need to be probed because it will be physically adjusted (tramming).\n","optional":true,"tag":"U","values":[{"type":"bool"}]},{"description":"Verbosity Level (0-4)","optional":true,"tag":"V","values":[{"tag":0},{"tag":1},{"tag":2},{"tag":3},{"tag":4}]},{"description":"**_What?_**: Display valuable UBL data.\n","optional":true,"tag":"W","values":[{"type":"bool"}]},{"description":"**X position** for all phases and commands (Default: current X)\n","optional":true,"tag":"X","values":[{"type":"float","unit":"linear"}]},{"description":"**Y position** for all phases and commands (Default: current Y)\n","optional":true,"tag":true,"values":[{"type":"float","unit":"linear"}]}],"requires":"AUTO_BED_LEVELING_UBL","tag":"g29c","title":"Bed Leveling (Unified)"},"G30":{"author":"thinkyhead","base":"G030","brief":"Probe bed at current XY location","codes":["G30"],"experimental":false,"group":"calibration","long":"Do a single Z probe at a specified position. By default probe in the current position.","notes":null,"parameters":[{"description":"X probe position","optional":true,"tag":"X","values":[{"tag":"pos","type":"float"}]},{"description":"Y probe position","optional":true,"tag":true,"values":[{"tag":"pos","type":"float"}]},{"description":"Engage the probe for each point.","optional":true,"tag":"E","values":[{"type":"bool"},{"default":0}]}],"requires":"HAS_BED_PROBE","since":"1.0.0-beta","tag":"g30","title":"Single Z-Probe"},"G31":{"author":"thinkyhead","base":"G031","brief":"Dock the Z probe sled.","codes":["G31"],"example":[{"code":"G31","pre":"Dock the sled"}],"experimental":false,"group":"planner","long":"Dock the Z probe sled.","notes":"Requires `Z_PROBE_SLED`.","requires":"Z_PROBE_SLED","since":"1.0.0-beta","tag":"g31","title":"Dock Sled"},"G32":{"author":"thinkyhead","base":"G032","brief":"Undock the Z probe sled.","codes":["G32"],"example":[{"code":"G32","pre":"Undock the sled"}],"experimental":false,"group":"planner","long":"Undock the Z probe sled.","notes":null,"requires":"Z_PROBE_SLED","since":"1.0.0-beta","tag":"g32","title":"Undock Sled"},"G33":{"author":"LVD-AC","base":"G033","brief":"Calibrate various Delta parameters","codes":["G33"],"contrib":"thinkyhead","examples":[{"code":"G33\n\n\u003e G33 Auto Calibrate\n\u003e Checking... AC\n\u003e .Height:295.00    Ex:+0.00  Ey:+0.00  Ez:+0.00    Radius:100.00\n\u003e .Tower angle :    Tx:+0.00  Ty:+0.00  Tz:+0.00\n\u003e Iteration : 01                                    std dev:2.665\n\u003e .Height:297.85    Ex:-0.18  Ey:-0.13  Ez:+0.00    Radius:100.68\n\u003e .Tower angle :    Tx:-0.05  Ty:+0.08  Tz:+0.00\n\u003e Iteration : 02                                    std dev:0.128\n\u003e .Height:297.77    Ex:-0.19  Ey:-0.09  Ez:+0.00    Radius:100.80\n\u003e .Tower angle :    Tx:-0.07  Ty:+0.15  Tz:+0.00\n\u003e Iteration : 03                                    std dev:0.025\n\u003e .Height:297.78    Ex:-0.17  Ey:-0.09  Ez:+0.00    Radius:100.78\n\u003e .Tower angle :    Tx:-0.09  Ty:+0.20  Tz:+0.00\n\u003e Iteration : 04                                    std dev:0.022\n\u003e .Height:297.80    Ex:-0.14  Ey:-0.07  Ez:+0.00    Radius:100.79\n\u003e .Tower angle :    Tx:-0.10  Ty:+0.22  Tz:+0.00\n\u003e Iteration : 05                                    std dev:0.019\n\u003e .Height:297.81    Ex:-0.13  Ey:-0.06  Ez:+0.00    Radius:100.80\n\u003e .Tower angle :    Tx:-0.10  Ty:+0.25  Tz:+0.00\n\u003e Calibration OK                                    rolling back.\n\u003e .Height:297.80    Ex:-0.14  Ey:-0.07  Ez:+0.00    Radius:100.79\n\u003e .Tower angle :    Tx:-0.10  Ty:+0.22  Tz:+0.00\n\u003e Save with M500 and/or copy to Configuration.h\n","pre":"Default (Verbose 1)"},{"code":"G33 V2\n\n\u003e G33 Auto Calibrate\n\u003e Checking... AC\n\u003e .Height:297.80    Ex:-0.14  Ey:-0.07  Ez:+0.00    Radius:100.79\n\u003e .Tower angle :    Tx:-0.10  Ty:+0.22  Tz:+0.00\n\u003e .      c:+0.01     x:+0.06   y:+0.04   z:+0.01\n\u003e .                 yz:-0.02  zx:-0.01  xy:+0.01\n\u003e Iteration : 01                                    std dev:0.028\n\u003e .Height:297.81    Ex:-0.10  Ey:-0.04  Ez:+0.00    Radius:100.81\n\u003e .Tower angle :    Tx:-0.10  Ty:+0.24  Tz:+0.00\n\u003e .      c:-0.03     x:-0.01   y:-0.02   z:-0.03\n\u003e .                 yz:-0.05  zx:-0.05  xy:-0.06\n\u003e Calibration OK                                    rolling back.\n\u003e .Height:297.80    Ex:-0.14  Ey:-0.07  Ez:+0.00    Radius:100.79\n\u003e .Tower angle :    Tx:-0.10  Ty:+0.22  Tz:+0.00\n\u003e Save with M500 and/or copy to Configuration.h\n","pre":"Verbose 2"},{"code":"G33 V0\n\n\u003e G33 Auto Calibrate\n\u003e Checking... AC (DRY-RUN)\n\u003e .Height:295.00    Ex:+0.00  Ey:+0.00  Ez:+0.00    Radius:100.00\n\u003e .Tower angle :    Tx:+0.00  Ty:+0.00  Tz:+0.00\n\u003e .      c:-2.86     x:-2.68   y:-2.62   z:-2.56\n\u003e .                 yz:-2.55  zx:-2.61  xy:-2.78\n\u003e End DRY-RUN                                       std dev:2.668\n","pre":"Using `V0` for Dry Run with no calibration."},{"code":"G33 T\n\n\u003e G33 Auto Calibrate\n\u003e Checking... AC\n\u003e .Height:297.79    Ex:-0.13  Ey:-0.06  Ez:+0.00    Radius:100.83\n\u003e Iteration : 01                                    std dev:0.024\n\u003e .Height:297.82    Ex:-0.09  Ey:-0.05  Ez:+0.00    Radius:100.82\n\u003e Calibration OK                                    rolling back.\n\u003e .Height:297.79    Ex:-0.13  Ey:-0.06  Ez:+0.00    Radius:100.83\n\u003e Save with M500 and/or copy to Configuration.h\n","pre":"Using the `T` flag for no tower angles."},{"code":"G33 P1\n\n\u003e G33 Auto Calibrate\n\u003e Checking... AC\n\u003e .Height:297.79\n\u003e Calibration OK\n\u003e .Height:297.80\n\u003e Save with M500 and/or copy to Configuration.h","pre":"Use a single point (`P1`) to check the height."}],"experimental":false,"group":"calibration","long":"With the `G33` command you can:\n- Probe a circular grid of points,\n- Calibrate Delta Height,\n- Calibrate endstops,\n- Calibrate Delta Radius, and\n- Calibrate Tower Angles.\n","notes":null,"parameters":[{"optional":true,"tag":"P","values":[{"description":"Normalize end-stops and tower angle corrections only (no probing).","tag":0},{"description":"Probe center and set height only.","tag":1},{"description":"Probe center and towers. Set height, endstops, and delta radius.","tag":2},{"description":"Probe all positions - center, towers and opposite towers. Set all.","tag":3},{"description":"Probe all positions with intermediate locations, averaging them.","tag":"4-10"}]},{"description":"Disable tower angle corrections calibration (`P3`-`P7`)","optional":true,"tag":"T","values":[{"type":"bool"},{"default":0}]},{"description":"If omitted iterations stop at best achievable precision; if set force iterations to stop at the set precision.","optional":true,"tag":"C","values":"mm"},{"description":"Force to run at least n iterations and take the best result.","optional":true,"tag":"F","values":"1-30"},{"description":"Set the verbose level","optional":true,"tag":"V","values":[{"description":"Dry run, no calibration","tag":0},{"description":"Report settings","tag":1},{"description":"Report settings and probe results","tag":2},{"default":1}]},{"description":"Engage the probe for each point.","optional":true,"tag":"E","values":[{"type":"bool"},{"default":0}]}],"requires":"DELTA_AUTO_CALIBRATION","since":"1.1.0","tag":"g33","title":"Delta Auto Calibration"},"G38.2":{"author":"thinkyhead","base":"G038","brief":"Probe towards a workpiece and stop on contact.","codes":["G38.2","G38.3"],"examples":null,"experimental":false,"group":"calibration","long":["The Probe Target commands are used to probe towards a workpiece and determine its precise position. The Z endstop doubles as the probe for these commands. You might, for example, use a grounded metal workpiece, with a metal probe spliced into the Z endstop circuit.\n\n- `G38.2` probes towards a target and stops on contact, signaling an error if it reaches the target position without triggering the Z endstop.\n- `G38.3` probes towards a target and stops on contact. No error is given if it fails to trigger the Z endstop.\n\nThese commands use the current homing feedrate, by default.\n"],"notes":["\nThese commands require `G38_PROBE_TARGET`.\n"],"parameters":[{"description":"Target X","optional":true,"tag":"X","values":[{"tag":"pos","type":"float"}]},{"description":"Target Y","optional":true,"tag":true,"values":[{"tag":"pos","type":"float"}]},{"description":"Target Z","optional":true,"tag":"Z","values":[{"tag":"pos","type":"float"}]},{"description":"Feedrate for the move","optional":true,"tag":"F","values":[{"tag":"rate","type":"float"}]}],"requires":"G38_PROBE_TARGET","since":"1.1.0","tag":"g38","title":"Probe target"},"G4":{"author":"thinkyhead","base":"G004","brief":"Pause the planner","codes":["G4"],"example":[{"code":["G4 P500 ; Dwell for 1/2 second"]}],"experimental":false,"group":"planner","long":["Dwell pauses the command queue and waits for a period of time."],"notes":["If both `S` and `P` are included, `S` takes precedence.","`M0`/`M1` provides an interruptible \"dwell\" (Marlin 1.1.0 and up).","`G4` with no arguments is effectively the same as `M400`."],"parameters":[{"description":"Amount of time to dwell","optional":true,"tag":"S","values":[{"tag":"time","type":"int","unit":"sec"}]},{"description":"Amount of time to dwell","optional":true,"tag":"P","values":[{"tag":"time","type":"int","unit":"ms"}]}],"since":"1.0.0-beta","tag":"g04","title":"Dwell"},"G42":{"author":"ManuelMcLure","base":"G042","brief":"Move to a specific point in the leveling mesh","codes":["G42"],"examples":[{"code":["G42 I0 J0\t; front left corner","G42 I4 J4\t; center","G42 I4 J8\t; back center","G42 I8 J8\t; back right"],"pre":"Move to various points on a 9x9 mesh"}],"experimental":false,"group":"calibration","long":"The `G42` command moves the nozzle to the location corresponding to a specific coordinate in the bed leveling mesh. It operates similarly to the `G0` and `G1` commands except that the provided coordinates are a mesh row and column instead of an absolute or relative position on the bed.\n\nThe `G42` command will determine the bed position that corresponds to the provided mesh row and column and move the nozzle to that position.\n","parameters":[{"description":"The column of the mesh coordinate","optional":true,"tag":"I","values":[{"tag":"pos","type":"float"}]},{"description":"The row of the mesh coordinate","optional":true,"tag":"J","values":[{"tag":"pos","type":"float"}]},{"description":"The maximum movement rate of the move between the start and end point. The feedrate set here applies to subsequent moves that omit this parameter.","optional":true,"tag":"F","values":[{"tag":"rate","type":"float"}]}],"requires":"HAS_MESH","since":"1.1.2","tag":"g42","title":"Move to mesh coordinate"},"G425":{"author":"mteixeira","base":"G425","brief":"Uses a calibration cube, washer or bolt for automatic calibration","codes":["G425"],"examples":[{"code":["T1                  ; Switch to second nozzle","G425 V              ; Showing positional report for T1","T0                  ; Switch to second nozzle","G425 V              ; Showing positional report for T0"],"pre":"Check the positional accuracy before calibration (requires `CALIBRATION_REPORTING`)"},{"code":["G425                ; Perform full calibration sequence","M425 F1 S0          ; Enable backlash compensation at 100%"],"pre":"Performs automatic calibration."},{"code":["T1                  ; Switch to second nozzle","G425 V              ; Validate by showing report for T1","T0                  ; Switch to second nozzle","G425 V              ; Validate by showing report for T0"],"pre":"Check the positional accuracy after calibration (requires `CALIBRATION_REPORTING`)"}],"experimental":true,"group":"calibration","long":["This command performs an automatic calibration of backlash, positional errors, and nozzle offset by touching the nozzle on the sides of a bed-mounted, electrically-conductive object (e.g., a cube, washer or bolt).","This command measures backlash but doesn't enable backlash correction. Use [`M425`](/docs/gcode/M425.html) to enable backlash correction."],"notes":["Requires `CALIBRATION_GCODE` and the following parameters:\n- `CALIBRATION_MEASUREMENT_RESOLUTION` determines the increments taken in mm when performing measurements\n- `CALIBRATION_FEEDRATE_SLOW`, `CALIBRATION_FEEDRATE_FAST` and `CALIBRATION_FEEDRATE_TRAVEL` determine the speed of motion during the calibration.\n- `CALIBRATION_NOZZLE_TIP_HEIGHT` and `CALIBRATION_NOZZLE_OUTER_DIAMETER` refer to the conical part of the nozzle tip\n- `CALIBRATION_REPORTING` enables `G425 V` for reporting of measurements\n- `CALIBRATION_OBJECT_CENTER` and `CALIBRATION_OBJECT_DIMENSIONS` define the true location and dimensions of a cube/bolt/washer mounted on the bed.\n- `CALIBRATION_MEASURE_RIGHT`, `CALIBRATION_MEASURE_FRONT`, `CALIBRATION_MEASURE_LEFT` and `CALIBRATION_MEASURE_BACK` define the usable touch points. Comment out any sides which are unreachable by the probe. For best results, all four sides should be reachable.\n- `CALIBRATION_PIN`, `CALIBRATION_PIN_INVERTING`, `CALIBRATION_PIN_PULLDOWN` and `CALIBRATION_PIN_PULLUP` configure the pin used for calibration. For example, if the nozzle is grounded, the calibation cube would be connected to a digital input pin with a pull-up enabled.\n"],"parameters":[{"description":"Perform calibration of backlash only.","optional":true,"tag":"B"},{"description":"Perform calibration of toolhead only.","optional":true,"tag":"T","values":[{"tag":"index","type":"int"}]},{"description":"Probe cube and print position, error, backlash and hotend offset. (Requires `CALIBRATION_REPORTING`)","optional":true,"tag":"V"},{"description":"Uncertainty, how far to start probe away from the cube (mm)","optional":true,"tag":"U","values":[{"tag":"linear","type":"float"}]}],"requires":"CALIBRATION_GCODE","tag":"g0425","title":"Perform auto-calibration"},"G5":{"author":"thinkyhead","base":"G005","brief":"Cubic B-spline with XYZE destination and IJPQ offsets","codes":["G5"],"examples":[{"code":["G0 X0 Y0","G5 I0 J3 P0 Q-3 X1 Y1"],"pre":["For example, to program a curvy \"N\" shape:"]},{"code":["G5 P0 Q-3 X2 Y2"],"pre":["A second curvy \"N\" that attaches smoothly to this one can now be made without specifying `I` and `J`:"]}],"experimental":true,"group":"planner","long":"`G5` creates a cubic B-spline in the XY plane with the X and Y axes only. `P` and `Q` parameters are required. `I` and `J` are required for the first `G5` command in a series. For subsequent `G5` commands, either both `I` and `J` must be specified, or neither. If `I` and `J` are unspecified, the starting direction of the cubic will automatically match the ending direction of the previous cubic (as if `I` and `J` are the negation of the previous `P` and `Q`).\n\nSee [This interactive demo](https://www.geogebra.org/m/WPHQ9rUt) to understand how Bézier control points work.\n","notes":["It is an error if an axis other than `X` or `Y` is specified."],"parameters":[{"description":"A coordinate on the X axis","optional":false,"tag":"X","values":[{"tag":"pos","type":"float"}]},{"description":"A coordinate on the Y axis","optional":false,"tag":true,"values":[{"tag":"pos","type":"float"}]},{"description":"The length of filament to feed into the extruder between the start and end point","optional":true,"tag":"E","values":[{"tag":"pos","type":"float"}]},{"description":"The maximum feedrate of the move between the start and end point (in current units per second). This value applies to all subsequent moves.","optional":true,"tag":"F","values":[{"tag":"rate","type":"float"}]},{"description":"X incremental offset from start point to first control point","optional":false,"tag":"I","values":[{"tag":"pos","type":"float"}]},{"description":"Y incremental offset from start point to first control point","optional":false,"tag":"J","values":[{"tag":"pos","type":"float"}]},{"description":"X incremental offset from end point to second control point","optional":false,"tag":"P","values":[{"tag":"pos","type":"float"}]},{"description":"Y incremental offset from end point to second control point","optional":false,"tag":"Q","values":[{"tag":"pos","type":"float"}]}],"since":"1.1.0","tag":"g05","title":"Bézier cubic spline"},"G90":{"author":"thinkyhead","base":"G090","brief":"Use absolute positions.","codes":["G90"],"experimental":false,"group":"units","long":["In absolute mode all coordinates given in G-code are interpreted as positions in the logical coordinate space. This includes the extruder position unless overridden by [`M83`](/docs/gcode/M083.html)."],"notes":["Absolute positioning is the default."],"since":"1.0.0-beta","tag":"g90","title":"Absolute Positioning"},"G91":{"author":"thinkyhead","base":"G091","brief":"Use relative positions.","codes":["G91"],"experimental":false,"group":"units","long":["Set relative position mode. In this mode all coordinates are interpreted as relative to the last position. This includes the extruder position unless overridden by [`M82`](/docs/gcode/M082.html)."],"since":"1.0.0-beta","tag":"g91","title":"Relative Positioning"},"G92":{"author":"thinkyhead","base":"G092","brief":"Set the current position of one or more axes.","codes":["G92"],"examples":[{"code":["G92 X10 E90"],"pre":["Specify that the nozzle's current X position is 10 and the current extruder position is 90."]},{"code":["G92 X0 Y0 Z0"],"pre":["Specify that the nozzle's current XYZ position is 0, 0, 0."]}],"experimental":false,"group":"planner","long":["Set the current position to the values specified. In Marlin 1.1.0 and up, the software endstops are adjusted to preserve the physical movement limits. Thus you could use `G92` to set the middle of the bed to 0,0 and then run .gcode that was sliced for a Deltabot."],"notes":["In earlier versions of Marlin `G92` doesn't update the software endstops, so it was unsupported to set coordinates outside these boundaries. In Marlin 1.1.0 and up, the physical boundaries are maintained. This means you can no longer use `G92` to move below the bed, for example."],"parameters":[{"description":"New X axis position","optional":true,"tag":"X","values":[{"tag":"pos","type":"float"}]},{"description":"New Y axis position","optional":true,"tag":true,"values":[{"tag":"pos","type":"float"}]},{"description":"New Z axis position","optional":true,"tag":"Z","values":[{"tag":"pos","type":"float"}]},{"description":"New extruder position","optional":true,"tag":"E","values":[{"tag":"pos","type":"float"}]}],"since":"1.0.0-beta","tag":"g92","title":"Set Position"},"M0":{"author":"thinkyhead","base":"M000-M001","brief":"Stop and wait for user.","codes":["M0","M1"],"examples":[{"code":["M0"],"pre":"Stop and wait"},{"code":["M0 Click to continue"],"pre":"Display a message, stop, and wait"}],"experimental":false,"group":"planner","long":["The `M0` and `M1` commands pause after the last movement and wait for the user to continue."],"notes":["If both `S` and `P` are included, `S` takes precedence.","Without an LCD controller or `EMERGENCY_PARSER` this command is ignored.","With `EMERGENCY_PARSER` enabled the `M108` command can be used to continue."],"parameters":[{"description":"Expire time, in seconds","optional":true,"tag":"S","values":[{"tag":"sec","type":"int"}]},{"description":"Expire time, in milliseconds","optional":true,"tag":"P","values":[{"tag":"ms","type":"int"}]},{"description":"An optional message to display on the LCD","optional":true,"tag":"string"}],"since":"1.0.0-beta","tag":"m0000","title":"Unconditional stop"},"M100":{"author":"thinkyhead","base":"M100","brief":"Description Here","codes":["M100"],"examples":null,"experimental":false,"group":"debug","long":["Use `M100` for development purposes to observe how much memory (particularly stack) is being used by code. Proper AVR code should avoid use of `new`, `malloc`, etc., and instead use either pre-allocated static variables or stack."],"notes":["Requires `M100_FREE_MEMORY_WATCHER`."],"parameters":[{"description":"Dump the free memory block from `__brkval` to the stack pointer.","optional":true,"tag":"D"},{"description":"Return the number of free bytes in the memory pool along with other vital statistics that define the memory pool.","optional":true,"tag":"F"},{"description":"Initialize the free memory pool so it can be watched and print vital statistics that define the free memory pool.","optional":true,"tag":"I"},{"description":"Corrupt 'n' locations in the free memory pool and report the locations of the corruption. This is useful to check the correctness of the `M100 D` and `M100 F` commands.","optional":true,"tag":"C","values":[{"tag":false,"type":"int"}]}],"requires":"M100_FREE_MEMORY_WATCHER","tag":"m0100","title":"Free Memory"},"M104":{"author":"thinkyhead","base":"M104","brief":"Set a new target hot end temperature.","codes":["M104"],"examples":[{"code":"M104 S185","pre":"Set target temperature for the active hotend"},{"code":"M104 T1 S205","pre":"Set target temperature for E1"},{"code":"M104 F S180 B190","pre":"`AUTOTEMP`: Set autotemp range"},{"code":"M104","pre":"`AUTOTEMP`: Disable autotemp"}],"experimental":false,"group":"thermal","long":["Set a new target hot end temperature and continue without waiting. The firmware will continue to try to reach and hold the temperature in the background.","Use [`M109`](/docs/gcode/M109.html) to wait for the hot end to reach the target temperature."],"notes":"- With `PRINTJOB_TIMER_AUTOSTART` this command will stop the print job timer if the temperature is set at or below half of `EXTRUDE_MINTEMP`.\n","parameters":[{"description":"Target temperature.\u003cbr/\u003e`AUTOTEMP`: the min auto-temperature.","optional":true,"tag":"S","values":[{"tag":"temp","type":"float"}]},{"description":"`AUTOTEMP`: Autotemp flag. Omit to disable autotemp.","optional":true,"tag":"F","values":[{"tag":"flag","type":"bool"}]},{"description":"`AUTOTEMP`: The max auto-temperature.","optional":true,"tag":"B","values":[{"tag":"temp","type":"float"}]},{"description":"Hotend index. If omitted, the currently active hotend will be used.","optional":true,"tag":"T","values":[{"tag":"index","type":"int"}]}],"tag":"m0104","title":"Set Hotend Temperature"},"M105":{"author":"thinkyhead","base":"M105","brief":"Send a temperature report to the host.","codes":["M105"],"examples":[{"code":"M105","pre":"Get a temperature report"}],"experimental":false,"group":"thermal","long":["Request a temperature report to be sent to the host at some point in the future."],"notes":["Some hosts may hide the reply from `M105`.","A better way for hosts to get regular temperature updates is to use `M155` (requires `AUTO_REPORT_TEMPERATURES` and `EXTENDED_CAPABILITIES_REPORT`). Hosts then no longer need to run an extra process or use up slots in the command buffer to receive temperatures."],"parameters":[{"description":"Hotend index","optional":true,"tag":"T","values":[{"tag":"index","type":"int"}]}],"tag":"m0105","title":"Report Temperatures"},"M106":{"author":"thinkyhead","base":"M106","brief":"Turn on the fan and set its speed","codes":["M106"],"example":[{"code":"M106 S200","pre":"Turn on the fan at 200/255 DC"}],"experimental":false,"group":"thermal","long":"Turn on one of the fans and set its speed. If no fan index is given, the print cooling fan is selected. The fan speed applies to the next block added to the planner, so it will not take effect until previous moves in the planner are done. Under manual control with an idle machine, `M106` will change the fan speed immediately.","notes":["`M106` with no speed sets the fan to full speed.","Turn off fans with [`M107`](/docs/gcode/M107.html)."],"parameters":[{"description":"Speed, from 0 to 255. S255 provides 100% duty cycle; S128 produces 50%.","optional":true,"tag":"S","values":[{"tag":"speed","type":"byte"}]},{"description":"Fan index","optional":true,"tag":"P","values":[{"tag":"index","type":"int"}]},{"description":"Secondary speed. Added in Marlin 1.1.7. (Requires `EXTRA_FAN_SPEED`)\n- '`M106 P\u003cfan\u003e T3-255` sets a secondary speed for `\u003cfan\u003e`.'\n- '`M106 P\u003cfan\u003e T2` uses the set secondary speed.'\n- '`M106 P\u003cfan\u003e T1` restores the previous fan speed.'\n","optional":true,"tag":"T","values":[{"tag":"secondary","type":"int"}]}],"requires":"EXTRA_FAN_SPEED","tag":"m0106","title":"Set Fan Speed"},"M107":{"author":"thinkyhead","base":"M107","brief":"Turn off a fan","codes":["M107"],"examples":null,"experimental":false,"group":"thermal","long":"Turn off one of the fans. If no fan index is given, the print cooling fan.","notes":"Turn on fans with [`M106`](/docs/gcode/M106.html).","parameters":[{"description":"Fan index","optional":true,"tag":"P","values":[{"tag":"index","type":"int"}]}],"tag":"m0107","title":"Fan Off"},"M108":{"author":"thinkyhead","base":"M108","brief":"Break out of the current waiting loop","codes":["M108"],"example":[{"code":["M0 You're up, mate ; in your G-code file","M108               ; as your \"Continue\" button"],"pre":"Use `M108` as a \"Continue\" button in your host software."}],"experimental":false,"group":"control","long":["The `M108` command requires `EMERGENCY_PARSER` for full effectiveness. (Otherwise a full queue blocks the parser.)\n\nSome G-code commands cause Marlin to go into a closed loop, waiting indefinitely for a certain state or event. For example, `M109` waits for the target temperature to be reached, and `M0` waits for an LCD click.\n\n- In the case of `M109`, the `M108` command stops waiting for the target temperature and continues processing G-code. This may result in \"cold extrude\" messages. For a full stop use `M112`.\n- In the case of `M0` the `M108` command acts like the LCD button, breaking out of `M0` and continuing to process the G-code queue.\n"],"notes":["With both `EMERGENCY_PARSER` and `HOST_KEEPALIVE_FEATURE` enabled, hosts will be able to prompt for continuation or cancellation, confirming with `M108` and cancelling with `M112`.\n"],"parameters":null,"tag":"m0108","title":"Break and Continue"},"M109":{"author":"thinkyhead","base":"M109","brief":"Wait for the hot end to reach its target.","codes":["M109"],"examples":[{"code":"M109 S180","pre":"Set target temperature and wait (if heating up)"},{"code":"M109 R120","pre":"Set target temperature, wait even if cooling"},{"code":"M109 T1 R205","pre":"Set target temperature for E1 and wait (if heating up)"},{"code":"M109 F S180 B190","pre":"`AUTOTEMP`: Set autotemp range, wait for temp"},{"code":"M109","pre":"`AUTOTEMP`: Disable autotemp, wait for temp"}],"experimental":false,"group":"thermal","long":["This command optionally sets a new target hot end temperature and waits for the target temperature to be reached before proceeding. If the temperature is set with `S` then `M109` waits *only when heating*. If the temperature is set with `R` then `M109` will also wait for the temperature to go down."],"notes":["With `PRINTJOB_TIMER_AUTOSTART` this command will start the print job if heating, and stop the print job timer if the temperature is set at or below half of `EXTRUDE_MINTEMP`.","This command (and [`M190`](/docs/gcode/M190.html)) can block new commands from the host, preventing remote shutdown. However, if `EMERGENCY_PARSER` is enabled, a host can send `M108` to break out of the wait loop.","To set the hot end temperature and proceed without waiting, use [`M104`](/docs/gcode/M104.html)."],"parameters":[{"description":"Target temperature (wait only when heating). Also `AUTOTEMP`: The min auto-temperature.","optional":true,"tag":"S","values":[{"tag":"temp","type":"float"}]},{"description":"Target temperature (wait for cooling or heating).","optional":true,"tag":"R","values":[{"tag":"temp","type":"float"}]},{"description":"Autotemp flag. Omit to disable autotemp.","optional":true,"tag":"F","values":[{"tag":"flag","type":"bool"}]},{"description":"With `AUTOTEMP`, the max auto-temperature.","optional":true,"tag":"B","values":[{"tag":"temp","type":"float"}]},{"description":"Hotend index. If omitted, the currently active hotend will be used.","optional":true,"tag":"T","values":[{"tag":"index","type":"int"}]}],"tag":"m0109","title":"Wait for Hotend Temperature"},"M110":{"author":"thinkyhead","base":"M110","brief":"Set the current line number.","codes":["M110"],"examples":null,"experimental":false,"group":"hosts","long":"Hosts can use `M110` to set the current line number in a print job. Each line number sent by a host must be one higher than the previous line number, or the firmware will ignore the line and send an error requesting a resend of the missing line. This is one technique Marlin uses to keep in sync with hosts.","notes":["All these are valid: `N100 M110`, `M110 N100`, `N101 M110 N100`."],"parameters":[{"description":"Line number","optional":false,"tag":false,"values":[{"tag":"line","type":"int"}]}],"tag":"m0110","title":"Set Line Number"},"M111":{"author":"thinkyhead","base":"M111","brief":"Report and optionally set the debug flags.","codes":["M111"],"examples":[{"code":"M111 S38 ; LEVELING, ERRORS, INFO","pre":"Enable extra messages"},{"code":"M111 S8","pre":"Enable dry-run mode"},{"code":"M111 S247 ; 255 - 8","pre":"Enable everything except dry-run mode"},{"code":"M111 S0","pre":"Disable previously set extra debugging output."}],"experimental":false,"group":"hosts","long":"Marlin has several debug bits that can be set, in combination, to help configure, troubleshoot, and debug the firmware. Add up the debug bits you need:\n\nMask|Name|Description\n1|ECHO|Echo all commands sent to the parser.\n2|INFO|Print extra informational messages.\n4|ERRORS|Print extra error messages.\n8|DRYRUN|Don't extrude, don't save leveling data, etc.\n16|COMMUNICATION|Not currently used.\n32|LEVELING|Detailed messages for homing, probing, and leveling. (Requires `DEBUG_LEVELING_FEATURE`.)\n64|Reserved|Reserved for future usage\n128|Reserved|Reserved for future usage\n","notes":null,"parameters":[{"description":"Debug flag bits","optional":true,"tag":"S","values":[{"tag":"flags","type":"byte"}]}],"tag":"m0111","title":"Debug Level"},"M112":{"author":"thinkyhead","base":"M112","brief":"Shut everything down and halt the machine.","codes":["M112"],"examples":[{"code":"M112","pre":"Shut down now!"}],"experimental":false,"group":"safety","long":"Used for emergency stopping, `M112` shuts down the machine, turns off all the steppers and heaters, and if possible, turns off the power supply. A reset is required to return to operational mode.","notes":"`M112` is the fastest way to shut down the machine using a host, but it may need to wait for a space to open up in the command queue. Enable `EMERGENCY_PARSER` for an instantaneous `M112` command.","parameters":null,"tag":"m0112","title":"Emergency Stop"},"M113":{"author":"thinkyhead","base":"M113","brief":"Get or set the host keepalive interval.","codes":["M113"],"examples":null,"experimental":false,"group":"hosts","long":"During some lengthy processes, such as `G29`, Marlin may appear to the host to have \"gone away.\" The \"host keepalive\" feature will send messages to the host when Marlin is busy or waiting for user response so the host won't try to reconnect.","notes":"Requires `HOST_KEEPALIVE_FEATURE`.","parameters":[{"description":"Keepalive interval (0-60)","optional":true,"tag":"S","values":[{"tag":"seconds","type":"int"}]}],"requires":"HOST_KEEPALIVE_FEATURE","tag":"m0113","title":"Host Keepalive"},"M114":{"author":"thinkyhead","base":"M114","brief":"Report the current tool position to the host.","codes":["M114"],"examples":[{"code":"M114","pre":"Get the current position"}],"experimental":false,"group":"hosts","long":"Get the current position of the active nozzle. Includes stepper values.\nIf `M114_DETAIL` is enabled the `D` parameter will provide more details such as leveling information and kinematics.\n","notes":"Hosts should respond to the output of `M114` by updating their current position.","parameters":[{"description":"Detailed information (requires `M114_DETAIL`)","optional":true,"tag":"D","values":[{"type":"bool"},{"default":0}]}],"tag":"m0114","title":"Get Current Position"},"M115":{"author":"thinkyhead","base":"M115","brief":"Print the firmware info and capabilities.","codes":["M115"],"examples":null,"experimental":false,"group":"hosts","long":"This command causes Marlin to output a string like this:\n\n```\nFIRMWARE_NAME:Marlin 1.1.0 (Github) SOURCE_CODE_URL:https://github.com/MarlinFirmware/Marlin PROTOCOL_VERSION:1.0 MACHINE_TYPE:RepRap EXTRUDER_COUNT:1 UUID:cede2a2f-41a2-4748-9b12-c55c62f367ff\n```\n\nWhen `EXTENDED_CAPABILITIES_REPORT` is enabled, Marlin also reports its capabilities:\n\n```\nCap:EEPROM:1\nCap:AUTOREPORT_TEMP:1\nCap:PROGRESS:0\nCap:AUTOLEVEL:1\nCap:Z_PROBE:1\nCap:SOFTWARE_POWER:0\nCap:TOGGLE_LIGHTS:0\nCap:EMERGENCY_PARSER:1\n```\n\nHosts use this information to improve interoperability, so it's a good feature to enable.\n","notes":null,"parameters":null,"tag":"m0115","title":"Firmware Info"},"M117":{"author":"thinkyhead","base":"M117","brief":"Set the message line on the LCD.","codes":["M117"],"examples":[{"code":"M117 Yello World!","pre":"Set the message to \"Yello World!\""}],"experimental":false,"group":"lcd","long":"Set the status line message on the LCD.","notes":["Requires an LCD controller.","The message should appear immediately, but it will depend on LCD settings."],"parameters":[{"description":"LCD status message","optional":true,"tag":"string"}],"requires":"ULTRA_LCD","tag":"m0117","title":"Set LCD Message"},"M118":{"author":"thinkyhead","base":"M118","brief":"Send text to serial","codes":["M118"],"examples":[{"code":"M118 E1 Yello World!","pre":"Echo \"Yello World!\" in the console"},{"code":"M118 A1 action:cancel","pre":"Tell [OctoPrint](http://docs.octoprint.org/en/master/features/action_commands.html) to cancel the print job"}],"experimental":false,"group":"hosts","long":"Send a message to the connected host for display in the host console or to perform a host action.","notes":"The `E` and `A` parameters must precede the message.","parameters":[{"description":"Message string. If omitted, a blank line will be sent.","optional":true,"tag":"string"},{"description":"Prepend `// ` to denote a comment or action command. Hosts like OctoPrint can interpret such commands to perform special actions. See your host's documentation.","optional":true,"tag":"A1"},{"description":"Prepend `echo:` to the message. Some hosts will display echo messages differently when preceded by `echo:`.","optional":true,"tag":"E1"}],"tag":"m0118","title":"Serial print"},"M119":{"author":"thinkyhead","base":"M119","brief":"Report endstop and probe states to the host.","codes":["M119"],"example":[{"code":"\u003e M119\nReporting endstop status\nx_min: open\ny_min: open\nz_min: TRIGGERED\nz_probe: open\nfilament: open","pre":"Get all endstop states"}],"experimental":false,"group":"debug","long":["Use this command to get the current state of all endstops, useful for setup and troubleshooting. Endstops are reported as either \"`open`\" or \"`TRIGGERED`\".","The state of the Z probe and filament runout sensors are also reported with this command."],"notes":["The `BLTOUCH` probe only sends a brief pulse, so \"`TRIGGERED`\" indicates the probe is in error state.","Similarly, Trinamic's Sensorless Homing only sends a short pulse, so for these \"`TRIGGERED`\" is unusual."],"parameters":null,"tag":"m0119","title":"Endstop States"},"M120":{"author":"thinkyhead","base":"M120","brief":"Enable endstops and keep them enabled when not homing.","codes":["M120"],"examples":[{"code":"M120","pre":"Enable endstops"}],"experimental":false,"group":"control","long":"Enable endstops.","notes":"After this command endstops will be kept enabled when not homing. This may have side-effects if using `ABORT_ON_ENDSTOP_HIT_FEATURE_ENABLED`.","parameters":null,"tag":"m0120","title":"Enable Endstops"},"M121":{"author":"thinkyhead","base":"M121","brief":"Disable endstops and keep them enabled when not homing.","codes":["M121"],"examples":[{"code":"M121","pre":"Disable endstops"}],"experimental":false,"group":"control","long":"Disable endstops.","notes":"After this command endstops will be kept disabled when not homing. This may have side-effects if using `ABORT_ON_ENDSTOP_HIT_FEATURE_ENABLED`.","parameters":null,"tag":"m0121","title":"Disable Endstops"},"M122":{"author":"mbuc","base":"M122","brief":"Get TMC Debug Info","codes":["M122"],"examples":[{"code":"\u003e M122\nX\tY\nEnabled\t\tfalse\tfalse\nSet current\t850\t850\nRMS current\t826\t826\nMAX current\t1165\t1165\nRun current\t26/31\t26/31\nHold current\t13/31\t13/31\nCS actual\t\t13/31\t13/31\nPWM scale\t41\t41\nvsense\t\t1=.18\t1=.18\nstealthChop\ttrue\ttrue\nmsteps\t\t16\t16\ntstep\t\t1048575\t1048575\npwm\nthreshold\t\t0\t0\n[mm/s]\t\t-\t-\nOT prewarn\tfalse\tfalse\nOT prewarn has\nbeen triggered\tfalse\tfalse\noff time\t\t5\t5\nblank time\t24\t24\nhysterisis\n-end\t\t2\t2\n-start\t\t3\t3\nStallguard thrs\t0\t0\nDRVSTATUS\tX\tY\nstallguard\nsg_result\t\t0\t0\nfsactive\nstst\t\tX\tX\nolb\nola\ns2gb\ns2ga\notpw\not\n'Driver registers:'\n  X = 0x80:0D:00:00\n  Y = 0x80:0D:00:00","pre":"Get all TMC2130 and TMC2208 states"}],"experimental":false,"group":"debug","long":["Do a communication check for configured TMC drivers.","With no parameters, this command returns the current settings for all installed Trinamic TMC2130 and TMC2208 stepper motor drivers. The `S[0|1]` parameter enables/disables continuous debugging output."],"notes":["`TMC_DEBUG` is no longer needed in Marlin 2.0.x, but enabling it produces an extended report.","Responses of all `LOW` (`00:00:00:00`) or all `HIGH` (`FF:FF:FF:FF`) are signs of a communication problem.\u003cbr/\u003e See [TMC Troubleshooting](docs/hardware/tmc_drivers.html) for further information."],"parameters":[{"description":"Target X driver(s) only.","optional":true,"tag":"X"},{"description":"Target Y driver(s) only.","optional":true,"tag":true},{"description":"Target Z driver(s) only.","optional":true,"tag":"Z"},{"description":"Target E driver(s) only.","optional":true,"tag":"E"},{"description":"Report raw register data. Refer to the datasheet to decypher.","optional":true,"tag":"V"},{"description":"Flag to enable/disable continuous debug reporting.","optional":true,"tag":"S","type":"bool"}],"requires":"TMC2130,TMC2208","since":"1.1.7","tag":"m0122","title":"TMC Debugging"},"M125":{"author":"thinkyhead","base":"M125","brief":"Save current position and move to filament change position.","codes":["M125"],"examples":[{"code":"M125 L20 ; park and retract","pre":"Retract 2cm of filament and park the nozzle"}],"experimental":false,"group":"nozzle","long":"Save the current nozzle position and move to the configured park position.","notes":"Requires `PARK_HEAD_ON_PAUSE`.","parameters":[{"description":"Retract length (otherwise `FILAMENT_CHANGE_RETRACT_LENGTH`)","optional":true,"tag":"L","values":[{"tag":"linear","type":"float"}]},{"description":"X position to park at (otherwise `FILAMENT_CHANGE_X_POS`)","optional":true,"tag":"X","values":[{"tag":"linear","type":"float"}]},{"description":"Y position to park at (otherwise `FILAMENT_CHANGE_Y_POS`)","optional":true,"tag":true,"values":[{"tag":"linear","type":"float"}]},{"description":"Z raise before park (otherwise `FILAMENT_CHANGE_Z_ADD`)","optional":true,"tag":"Z","values":[{"tag":"linear","type":"float"}]}],"requires":"PARK_HEAD_ON_PAUSE","tag":"m0125","title":"Park Head"},"M126":{"author":"thinkyhead","base":"M126","brief":"Open the valve for Baricuda 1.","codes":["M126"],"examples":[{"code":"M126 ; open valve 1"}],"experimental":false,"group":"baricuda","long":"Open the valve for Baricuda paste extruder 1.","notes":"Requires `BARICUDA`.","parameters":[{"description":"Valve pressure","optional":true,"tag":"S","values":[{"tag":"pressure","type":"byte"}]}],"requires":"BARICUDA","tag":"m0126","title":"Baricuda 1 Open"},"M127":{"author":"thinkyhead","base":"M127","brief":"Close the valve for Baricuda 1.","codes":["M127"],"examples":[{"code":"M127 ; close valve 1"}],"experimental":false,"group":"baricuda","long":"Close the valve for Baricuda paste extruder 1.","notes":"Requires `BARICUDA`.","parameters":null,"requires":"BARICUDA","tag":"m0127","title":"Baricuda 1 Close"},"M128":{"author":"thinkyhead","base":"M128","brief":"Open the valve for Baricuda 2.","codes":["M128"],"examples":[{"code":"M128 ; open valve 2"}],"experimental":false,"group":"baricuda","long":"Open the valve for Baricuda paste extruder 2.","notes":"Requires `BARICUDA`.","parameters":[{"description":"Valve pressure","optional":true,"tag":"S","values":[{"tag":"pressure","type":"byte"}]}],"requires":"BARICUDA","tag":"m0128","title":"Baricuda 2 Open"},"M129":{"author":"thinkyhead","base":"M129","brief":"Close the valve for Baricuda 2.","codes":["M129"],"examples":[{"code":"M129 ; close valve 2"}],"experimental":false,"group":"baricuda","long":"Close the valve for Baricuda paste extruder 2.","notes":"Requires `BARICUDA`.","parameters":null,"requires":"BARICUDA","tag":"m0129","title":"Baricuda 2 Close"},"M140":{"author":"thinkyhead","base":"M140","brief":"Set a new target bed temperature.","codes":["M140"],"examples":[{"code":"M140 S80","pre":"Simple set target temperature"}],"experimental":false,"group":"thermal","long":["Set a new target heated bed temperature and continue without waiting. The firmware will continue to try to reach and hold the temperature in the background.","Use [`M190`](/docs/gcode/M190.html) to wait for the bed to reach the target temperature."],"notes":null,"parameters":[{"description":"Target temperature.\u003cbr/\u003e`AUTOTEMP`: the min auto-temperature.","optional":true,"tag":"S","values":[{"tag":"temp","type":"float"}]}],"tag":"m0140","title":"Set Bed Temperature"},"M145":{"author":"thinkyhead","base":"M145","brief":"Set material presets in the LCD menu.","codes":["M145"],"examples":[{"code":"M145 S0 H190 B70 F50","pre":"Set heatup presets for material 1"}],"experimental":false,"group":"lcd","long":"Set the preheating presets for materials in the LCD menu.","notes":["Requires an LCD controller.","View the current settings with `M503`.","If `EEPROM_SETTINGS` is enabled, these settings are saved with `M500`, loaded with `M501`, and reset with `M502`."],"parameters":[{"description":"Material index","optional":true,"tag":"S","values":[{"tag":"index","type":"int"}]},{"description":"Hotend temperature","optional":true,"tag":"H","values":[{"tag":"temp","type":"int"}]},{"description":"Bed temperature","optional":true,"tag":"B","values":[{"tag":"temp","type":"int"}]},{"description":"Fan speed","optional":true,"tag":"F","values":[{"tag":"speed","type":"byte"}]}],"requires":"NEWPANEL","tag":"m0145","title":"Set Material Preset"},"M149":{"author":"thinkyhead","base":"M149","brief":"Set temperature units to Celsius, Fahrenheit, or Kelvin.","codes":["M149"],"examples":null,"experimental":false,"group":"units","long":"Set temperature units to Celsius, Fahrenheit, or Kelvin. Celsius is the default.","notes":null,"parameters":[{"description":"Celsius","optional":true,"tag":"C"},{"description":"Fahrenheit","optional":true,"tag":"F"},{"description":"Kelvin","optional":true,"tag":"K"}],"tag":"m0149","title":"Set Temperature Units"},"M150":{"author":"thinkyhead","base":"M150","brief":"Set the color of the RGB(W) LED, backlight, or LED strip.","codes":["M150"],"examples":null,"experimental":false,"group":"lcd","long":"If you have an RGB(W) light, either as part of a controller or installed separately, the `M150` command can be used to set its color.","notes":"Requires `BLINKM`, `RGB_LED`, `RGBW_LED`, `NEOPIXEL_LED` or `PCA9632`.","parameters":[{"description":"Red component from 0 to 255","optional":true,"tag":"R","values":[{"tag":"intensity","type":"byte"}]},{"description":"Green component from 0 to 255","optional":true,"tag":"U","values":[{"tag":"intensity","type":"byte"}]},{"description":"Blue component from 0 to 255","optional":true,"tag":"B","values":[{"tag":"intensity","type":"byte"}]},{"description":"White component from 0 to 255 (`RGBW_LED` or `NEOPIXEL_LED` only)","optional":true,"tag":"W","values":[{"tag":"intensity","type":"byte"}]},{"description":"Brightness from 0 to 255 (`NEOPIXEL_LED` only)","optional":true,"tag":"P","values":[{"tag":"intensity","type":"byte"}]}],"requires":"BLINKM|RGB_LED|RGBW_LED|NEOPIXEL_LED|PCA9632","tag":"m0150","title":"Set RGB(W) Color"},"M155":{"author":"thinkyhead","base":"M155","brief":"Auto-report temperatures to host periodically.","codes":["M155"],"examples":[{"code":"M155 S4","pre":"Report temperatures every 4 seconds"},{"code":"M155 S0","pre":"Stop reporting temperatures"}],"experimental":false,"group":"hosts","long":"It can be useful for host software to track temperatures, display and graph them over time, but polling with `M105` is less than optimal. With `M155` hosts simply set an interval and Marlin will keep sending data automatically. This method is preferred over polling with `M105`.","notes":["Requires `AUTO_REPORT_TEMPERATURES` in `Configuration_adv.h`.","Also enable `EXTENDED_CAPABILITIES_REPORT` to notify hosts about this capability."],"parameters":[{"description":"Interval in seconds between auto-reports. `S0` to disable.","optional":true,"tag":"S","values":[{"tag":"seconds","type":"int"}]}],"requires":"AUTO_REPORT_TEMPERATURES,EXTENDED_CAPABILITIES_REPORT","tag":"m0155","title":"Temperature Auto-Report"},"M163":{"author":"thinkyhead","base":"M163","brief":"Set a single mix factor for a mixing extruder.","codes":["M163"],"examples":[{"code":["M163 S0 P0.6","M163 S1 P0.4","M164 S5"],"pre":"Save a 60/40 mix as tool index 5:"},{"code":["M163 S0 P3","M163 S1 P5","M164 S4"],"pre":"Save a 3/5 mix as tool index 4:"}],"experimental":false,"group":"mixing","long":"Set a single mix factor (in proportion to the sum total of all mix factors). The mix must be committed to a virtual tool by `M164` before it takes effect.","notes":"Requires `MIXING_EXTRUDER`.","parameters":[{"description":"Component index","optional":true,"tag":"S","values":[{"tag":"index","type":"int"}]},{"description":"Mix factor","optional":true,"tag":"P","values":[{"tag":"factor","type":"float"}]}],"requires":"MIXING_EXTRUDER","tag":"m0163","title":"Set Mix Factor"},"M164":{"author":"thinkyhead","base":"M164","brief":"Save the current mix as a virtual tool.","codes":["M164"],"examples":[{"code":["M163 S0 P0.6","M163 S1 P0.4","M164 S5"],"pre":"Save a 60/40 mix as tool index 5:"},{"code":["M163 S0 P3","M163 S1 P5","M164 S4"],"pre":"Save a 3/5 mix as tool index 4:"}],"experimental":false,"group":"mixing","long":null,"notes":"Requires `MIXING_EXTRUDER` and `MIXING_VIRTUAL_TOOLS`.","parameters":[{"description":"Tool index (active virtual tool if omitted)","optional":false,"tag":"S","values":[{"tag":"index","type":"int"}]}],"requires":"MIXING_EXTRUDER,MIXING_VIRTUAL_TOOLS","tag":"m0164","title":"Save Mix"},"M165":{"author":"thinkyhead","base":"M165","brief":"Set all mix factors for the mixing extruder.","codes":["M165"],"examples":[{"code":"M165 A0.2 B0.4 C0.3 D0.1","pre":"Set a colorful mix"}],"experimental":false,"group":"mixing","long":"Set the mix for the active virtual extruder all at once. Any factors left out are set to 0.0. This is based on a reference implementation by Pìa Taubert.","notes":"Requires `MIXING_EXTRUDER` and `DIRECT_MIXING_IN_G1`.","parameters":[{"description":"Mix factor 1","optional":true,"tag":"A","values":[{"tag":"factor","type":"float"}]},{"description":"Mix factor 2","optional":true,"tag":"B","values":[{"tag":"factor","type":"float"}]},{"description":"Mix factor 3","optional":true,"tag":"C","values":[{"tag":"factor","type":"float"}]},{"description":"Mix factor 4","optional":true,"tag":"D","values":[{"tag":"factor","type":"float"}]},{"description":"Mix factor 5","optional":true,"tag":"H","values":[{"tag":"factor","type":"float"}]},{"description":"Mix factor 6","optional":true,"tag":"I","values":[{"tag":"factor","type":"float"}]}],"requires":"MIXING_EXTRUDER,DIRECT_MIXING_IN_G1","tag":"m0165","title":"Set Mix"},"M166":{"author":"thinkyhead","base":"M166","brief":"Set a Gradient Mix","codes":["M166"],"examples":[{"code":"M166 A0 Z250 I0 J1 S1","post":"In this example no tool index is assigned to the Gradient. So the Gradient is enabled using `M166 S1` and disabled with `M166 S0`.","pre":"Gradient for a tall vase"},{"code":["M166 A0 Z250 I0 J1 T3","T3"],"post":"In this example the Gradient has been given a tool alias of 3. So the Gradient is selected with `T3`, and all other `Tn` commands will select a static mix.","pre":"Gradient as a Virtual Tool"},{"code":["M166 T","T0"],"pre":"To use the static mix stored in T0…"}],"experimental":false,"group":"mixing","long":"Use `M166` to set a gradient that will be automatically updated as the Z position changes during a print. The gradient smoothly transitions from one virtual tool to another between the given starting and ending Z heights. Below the starting height the starting virtual tool fully applies, and above the ending height the ending virtual tool fully applies.","notes":"Requires `MIXING_EXTRUDER` and `GRADIENT_MIX`.","parameters":[{"description":"Starting Z Height. (Use `Z` to set the Ending Z Height.)","optional":false,"tag":"A","values":[{"tag":"linear","type":"float"}]},{"description":"Ending Z Height. (Use `A` to set the Starting Z Height.)","optional":false,"tag":"Z","values":[{"tag":"linear","type":"float"}]},{"description":"Starting Virtual Tool. The Gradient begins with this tool-mix. Below the Starting Z Height the Starting Virtual Tool fully applies.","optional":false,"tag":"I","values":[{"tag":"index","type":"int"}]},{"description":"Ending Virtual Tool. The Gradient transitions to this tool-mix as Z approaches the Ending Z Height. Above the Ending Z Height the Ending Virtual Tool fully applies.","optional":false,"tag":"J","values":[{"tag":"index","type":"int"}]},{"description":"Enable / disable the gradient in manual mode. When using the tool index alias, tool-change commands determine whether or not the gradient is enabled.","optional":true,"tag":"S","values":[{"tag":"enable","type":"bool"}]},{"description":"A tool index to reassign to the gradient. If no index is given, cancel the tool assignment.","optional":true,"tag":"T","values":[{"tag":"index","type":"int"}]}],"requires":"MIXING_EXTRUDER,GRADIENT_MIX","since":"2.0.0","tag":"m0166","title":"Gradient Mix"},"M17":{"author":"thinkyhead","base":"M017","brief":"Power on all steppers","codes":["M17"],"examples":[{"code":"M17","pre":"Enable power on all stepper motors"}],"experimental":false,"group":"control","long":"Enable power on all stepper motors.","notes":null,"parameters":null,"tag":"m0017","title":"Enable Steppers"},"M18":{"author":"thinkyhead","base":"M018","brief":"Disable steppers (same as M84).","codes":["M18","M84"],"examples":[{"code":"M18 S60","pre":"Set the stepper inactivity timeout to 1 minute"},{"code":"M18","pre":"Disable all steppers immediately"},{"code":"M18 Z E","pre":"Disable Z and E steppers immediately"}],"experimental":false,"group":"control","long":"This command can be used to set the stepper inactivity timeout (`S`) or to disable one or more steppers (`X`,`Y`,`Z`,`E`).\n\nIf a timeout is given with `S`, this command just sets the stepper inactivity timeout.\n\nIf no steppers are specified, this command disables all steppers immediately.\n\nIf one or more axes are specified, this command disables the specified steppers immediately.\n","notes":null,"parameters":[{"description":"Inactivity Timeout. If none specified, disable now.","optional":true,"tag":"S","values":[{"tag":"seconds","type":"int"}]},{"description":"X Disable","optional":true,"tag":"X","values":[{"tag":"flag","type":"bool"}]},{"description":"Y Disable","optional":true,"tag":true,"values":[{"tag":"flag","type":"bool"}]},{"description":"Z Disable","optional":true,"tag":"Z","values":[{"tag":"flag","type":"bool"}]},{"description":"E Disable","optional":true,"tag":"E","values":[{"tag":"flag","type":"bool"}]}],"tag":"m0018","title":"Disable steppers"},"M190":{"author":"thinkyhead","base":"M190","brief":"Wait for the bed to reach target temperature.","codes":["M190"],"examples":[{"code":["M190 S80"],"pre":["Set target bed temperature and wait (if heating)"]},{"code":["M190 R40"],"pre":["Set target bed temperature, wait even if cooling"]}],"experimental":false,"group":"thermal","long":["This command optionally sets a new target bed temperature and waits for the target temperature to be reached before proceeding. If the temperature is set with `S` then it waits *only when heating*."],"notes":["This command (and [`M109`](/docs/gcode/M109.html)) can block new commands from the host. To break out of wait for temperature using `M108` from the host, enable `EMERGENCY_PARSER`.","Use [`M140`](/docs/gcode/M140.html) to set the bed temperature and proceed without waiting."],"parameters":[{"description":"Target temperature (wait only when heating). Also `AUTOTEMP`: The min auto-temperature.","optional":true,"tag":"S","values":[{"tag":"temp","type":"float"}]},{"description":"Target temperature (wait for cooling or heating).","optional":true,"tag":"R","values":[{"tag":"temp","type":"float"}]}],"tag":"m0190","title":"Wait for Bed Temperature"},"M20":{"author":"thinkyhead","base":"M020","brief":"List the contents of the SD Card.","codes":["M20"],"examples":null,"experimental":false,"group":"sdcard","long":"List the entire contents of the SD card to serial output in the more compact DOS 8.3 format.\n\nMarlin 1.1.0 includes file sizes in the output.\n","notes":["Requires [`SDSUPPORT`](/docs/configuration/configuration.html#sd-card)"],"parameters":null,"requires":"SDSUPPORT","tag":"m0020","title":"List SD Card"},"M200":{"author":"thinkyhead","base":"M200","brief":"Set the diameter for volumetric extrusion.","codes":["M200"],"examples":[{"code":"M200 D2.85","pre":"A common diameter close to 3mm:"},{"code":["M200 D0","M200 D  ; also works"],"pre":"Turn off volumetric extrusion"}],"experimental":false,"group":"planner","long":["Set the filament's current diameter and enable volumetric extrusion.","In volumetric extrusion mode the E axis specifies cubic mm instead of linear mm, and the firmware calculates how much length to extrude for the given volume based on the filament diameter."],"notes":null,"parameters":[{"description":"Filament diameter","optional":true,"tag":"D","values":[{"tag":"diameter","type":"float"}]},{"description":"Extruder index. If omitted, the currently active extruder will be used.","optional":true,"tag":"T","values":[{"tag":"index","type":"int"}]}],"tag":"m0200","title":"Set Filament Diameter"},"M201":{"author":"thinkyhead","base":"M201","brief":"Set maximum acceleration for print moves one or more axes.","codes":["M201"],"examples":[{"code":"M201 X50 Y50","pre":"Set max acceleration lower so it sounds like a robot:"}],"experimental":false,"group":"planner","long":"Set the max acceleration for one or more axes (in current units-per-second squared).","notes":["View the current setting with `M503`.","If `EEPROM_SETTINGS` is enabled, these are saved with `M500`, loaded with `M501`, and reset with `M502`."],"parameters":[{"description":"X axis max acceleration","optional":true,"tag":"X","values":[{"tag":"accel","type":"float"}]},{"description":"Y axis max acceleration","optional":true,"tag":true,"values":[{"tag":"accel","type":"float"}]},{"description":"Z axis max acceleration","optional":true,"tag":"Z","values":[{"tag":"accel","type":"float"}]},{"description":"E axis max acceleration","optional":true,"tag":"E","values":[{"tag":"accel","type":"float"}]},{"description":"Target extruder (Requires `DISTINCT_E_FACTORS`)","optional":true,"tag":"T","values":[{"tag":"index","type":"int"}]}],"tag":"m0201","title":"Set Print Max Acceleration"},"M203":{"author":"thinkyhead","base":"M203","brief":"Set maximum feedrate for one or more axes.","codes":["M203"],"examples":[{"code":"M203 X100 Y100","pre":"Set max feedrate for XY to 100mm/s:"}],"experimental":false,"group":"planner","long":"Set the max feedrate for one or more axes (in current units-per-second).","notes":["View the current setting with `M503`.","If `EEPROM_SETTINGS` is enabled, these are saved with `M500`, loaded with `M501`, and reset with `M502`."],"parameters":[{"description":"X axis max feedrate","optional":true,"tag":"X","values":[{"tag":"units/s","type":"float"}]},{"description":"Y axis max feedrate","optional":true,"tag":true,"values":[{"tag":"units/s","type":"float"}]},{"description":"Z axis max feedrate","optional":true,"tag":"Z","values":[{"tag":"units/s","type":"float"}]},{"description":"E axis max feedrate","optional":true,"tag":"E","values":[{"tag":"units/s","type":"float"}]},{"description":"Target extruder (Requires `DISTINCT_E_FACTORS`)","optional":true,"tag":"T","values":[{"tag":"index","type":"int"}]}],"tag":"m0203","title":"Set Max Feedrate"},"M204":{"author":"thinkyhead","base":"M204","brief":"Set the starting acceleration for moves by type.","codes":["M204"],"examples":null,"experimental":false,"group":"planner","long":"Set the preferred starting acceleration for moves of different types.","notes":["View the current setting with `M503`.","If `EEPROM_SETTINGS` is enabled, these are saved with `M500`, loaded with `M501`, and reset with `M502`."],"parameters":[{"description":"Printing acceleration. Used for moves that include extrusion (i.e., which employ the current tool).","optional":true,"tag":"P","values":[{"tag":"accel","type":"float"}]},{"description":"Retract acceleration. Used for extruder retraction moves.","optional":true,"tag":"R","values":[{"tag":"accel","type":"float"}]},{"description":"Travel acceleration. Used for moves that include no extrusion.","optional":true,"tag":"T","values":[{"tag":"accel","type":"float"}]}],"tag":"m0204","title":"Set Starting Acceleration"},"M205":{"author":"thinkyhead","base":"M205","brief":"Set some advanced settings related to movement.","codes":["M205"],"examples":[{"code":"M205 T40 ; Travel feedrate = 40mm/s","pre":"Set some advanced settings."}],"experimental":false,"group":"planner","long":"Set various motion settings. See parameters for details.","notes":["View the current setting with `M503`.","If `EEPROM_SETTINGS` is enabled, these are saved with `M500`, loaded with `M501`, and reset with `M502`."],"parameters":[{"description":"X max jerk (units/s)","optional":true,"tag":"X","values":[{"tag":"jerk","type":"float"}]},{"description":"Y max jerk (units/s)","optional":true,"tag":true,"values":[{"tag":"jerk","type":"float"}]},{"description":"Z max jerk (units/s)","optional":true,"tag":"Z","values":[{"tag":"jerk","type":"float"}]},{"description":"E max jerk (units/s)","optional":true,"tag":"E","values":[{"tag":"jerk","type":"float"}]},{"description":"Minimum segment time (µs)","optional":true,"tag":"B","values":[{"tag":"µs","type":"int"}]},{"description":"Minimum feedrate for print moves (units/s)","optional":true,"tag":"S","values":[{"tag":"units/s","type":"float"}]},{"description":"Minimum feedrate for travel moves (units/s)","optional":true,"tag":"T","values":[{"tag":"units/s","type":"float"}]},{"description":"Junction deviation (requires `JUNCTION_DEVIATION`)","optional":true,"tag":"J","values":[{"tag":"deviation","type":"float"}]}],"tag":"m0205","title":"Set Advanced Settings"},"M206":{"author":"thinkyhead","base":"M206","brief":"Description Here","codes":["M206"],"examples":[{"code":"M206 Z-0.2","pre":"Raise Z up a little bit on the first layer:"},{"code":"M206 X10","pre":"Shift the print area 10mm to the left:"}],"experimental":false,"group":"planner","long":"Use `M206` to apply a persistent offset to the native home position and coordinate space. This effectively shifts the coordinate space in the negative direction. See examples below.\n\n- The current position is adjusted to align to the new home offset values.\n- The home offset is persistent — added to the current position until changed.\n- Some uses include fine adjustment of Z position (without moving endstops) and shifting the coordinate space to print on a different part of the bed.\n","notes":"- This command isn't available on `DELTA`. (For delta use `M665 H`.)\n- This GCode can be disabled with `NO_WORKSPACE_OFFSETS` to optimize movement.\n- Changing the home offsets will not invalidate bed leveling or other saved data.\n- View the current offsets with `M503`.\n- If `EEPROM_SETTINGS` is enabled, the home offsets are saved with `M500`, loaded with `M501`, and reset with `M502`.\n- [`M428`](/docs/gcode/M428.html) sets home offsets so the current position aligns to the native home position.\n","parameters":[{"description":"SCARA Psi offset (Requires `MORGAN_SCARA`)","optional":true,"tag":"P","values":[{"tag":"offset","type":"float"}]},{"description":"SCARA Theta offset (Requires `MORGAN_SCARA`)","optional":true,"tag":"T","values":[{"tag":"offset","type":"float"}]},{"description":"X home offset","optional":true,"tag":"X","values":[{"tag":"offset","type":"float"}]},{"description":"Y home offset","optional":true,"tag":true,"values":[{"tag":"offset","type":"float"}]},{"description":"Z home offset","optional":true,"tag":"Z","values":[{"tag":"offset","type":"float"}]}],"requires":"HAS_HOME_OFFSET","tag":"m0206","title":"Set Home Offsets"},"M207":{"author":"thinkyhead","base":"M207","brief":"Set options for firmware-based retraction.","codes":["M207"],"examples":null,"experimental":false,"group":"planner","long":"Set lengths, feedrate, and Z lift for firmware-based retraction. See parameters below.","notes":["Requires `FWRETRACT`.","See related codes [`G10`](/docs/gcode/G010.html), [`G11`](/docs/gcode/G010.html), [`M208`](/docs/gcode/M208.html), and [`M209`](/docs/gcode/M209.html)."],"parameters":[{"description":"Retract length","optional":true,"tag":"S","values":[{"tag":"length","type":"float"}]},{"description":"Retract swap length (multi-extruder)","optional":true,"tag":"W","values":[{"tag":"length","type":"float"}]},{"description":"Retract feedrate (units/min)","optional":true,"tag":"F","values":[{"tag":"feedrate","type":"float"}]},{"description":"Z lift on retraction","optional":true,"tag":"Z","values":[{"tag":"length","type":"float"}]}],"requires":"FWRETRACT","tag":"m0207","title":"Set Firmware Retraction"},"M208":{"author":"thinkyhead","base":"M208","brief":"Firmware-retraction recover settings.","codes":["M208"],"examples":[{"code":"M208 S0.2 F600","pre":"Set recover extra length to 0.2mm and recover feedrate to 10mm/s"},{"code":["M207 S2.0  ; 2.0mm retract","M208 S0.5  ; 2.0mm + 0.5mm recover"],"pre":"Set a retract length of 2mm and *total* recover length of 2.5mm"}],"experimental":false,"group":"planner","long":["Use `M208` to set the feedrates and additional lengths for firmware-based retract recovery. The lengths set by `M208` are applied *in addition* to the lengths set by `M207` when un-retracting (aka \"recovering\") the filament. The new values will apply to all subsequent `G11` commands.","The \"swap\" values apply to firmware-based recover moves after a tool-change."],"notes":["Requires `FWRETRACT`.","See related codes [`G10`](/docs/gcode/G010.html), [`G11`](/docs/gcode/G010.html), [`M207`](/docs/gcode/M207.html), and [`M209`](/docs/gcode/M209.html)."],"parameters":[{"description":"Additional recover length. Can be negative to reduce recover length.","optional":true,"tag":"S","values":[{"tag":"length","type":"float"}]},{"description":"Additional recover swap length. Can be negative to reduce the length.","optional":true,"tag":"W","values":[{"tag":"length","type":"float"}]},{"description":"Recover feedrate (units/min)","optional":true,"tag":"F","values":[{"tag":"feedrate","type":"float"}]},{"description":"Swap recover feedrate (units/min)","optional":true,"tag":"R","values":[{"tag":"feedrate","type":"float"}]}],"requires":"FWRETRACT","tag":"m0208","title":"Firmware Recover"},"M209":{"author":"thinkyhead","base":"M209","brief":"Enable / disable auto-retraction.","codes":["M209"],"examples":null,"experimental":false,"group":"planner","long":["Enable or disable automatic retraction. This option is meant to help slicers that don't support `G10`/`G11`. But it can be used to override retraction in any GCode.","When auto-retract is enabled, all reversed E-only moves are treated as retraction. (Recover moves are also automatically overridden.) When disabled, E retraction derives from G-code."],"notes":["Requires `FWRETRACT`.","Most slicers today can generate `G10`/`G11`. But this option is useful for older G-code.","Though not currently very popular, both volumetric extrusion and firmware-based retraction (and/or `M209`) make G-code more immune to changes from one machine to another, and permit changing the hardware without needing to re-slice.","See related codes [`G10`](/docs/gcode/G010.html), [`G11`](/docs/gcode/G010.html), [`M207`](/docs/gcode/M207.html), and [`M208`](/docs/gcode/M208.html)."],"parameters":[{"description":"Set Auto-Retract on/off","optional":false,"tag":"S","values":[{"tag":"flag","type":"bool"}]}],"requires":"FWRETRACT","tag":"m0209","title":"Set Auto Retract"},"M21":{"author":"thinkyhead","base":"M021","brief":"Attempt to detect an SD card in the slot.","codes":["M21"],"examples":null,"experimental":false,"group":"sdcard","long":"Use this command if the SD card isn't detected automatically.","notes":"Requires [`SDSUPPORT`](/docs/configuration/configuration.html#sd-card)","parameters":null,"requires":"SDSUPPORT","tag":"m0021","title":"Init SD card"},"M211":{"author":"thinkyhead","base":"M211","brief":"Set and/or get the software endstops state","codes":["M211"],"examples":null,"experimental":false,"group":"planner","long":["Optionally enable/disable software endstops, then report the current state.","With software endstops enabled, moves will be clipped to the physical boundaries from `[XYZ]_MIN_POS` to `[XYZ]_MAX_POS`."],"notes":["Requires either `MIN_SOFTWARE_ENDSTOPS` or `MAX_SOFTWARE_ENDSTOPS` for the enable option."],"parameters":[{"description":"Software endstops state","optional":true,"tag":"S","values":[{"tag":"flag","type":"bool"}]}],"requires":"(MIN|MAX)_SOFTWARE_ENDSTOPS","tag":"m0211","title":"Software Endstops"},"M217":{"author":"thinkyhead","base":"M217","brief":"Set length and speed for filament swapping","codes":["M217"],"examples":null,"experimental":false,"group":"calibration","long":["When changing tools on some setups, one filament may be retracted before the other is primed. This command sets the length and feedrates used for the filament swap retract and prime.","If no parameters are given this command reports the current filament swap parameters."],"notes":["These values are stored in EEPROM."],"parameters":[{"description":"Swap length","optional":true,"tag":"S","values":[{"tag":"linear","type":"float"}]},{"description":"Retract feedrate","optional":true,"tag":"R","values":[{"tag":"feedrate","type":"int"}]},{"description":"Prime feedrate","optional":true,"tag":"P","values":[{"tag":"feedrate","type":"int"}]},{"description":"Park X position. Requires `SINGLENOZZLE_SWAP_PARK`.","optional":true,"tag":"X","values":[{"tag":"linear","type":"float"}]},{"description":"Park Y position. Requires `SINGLENOZZLE_SWAP_PARK`.","optional":true,"tag":true,"values":[{"tag":"linear","type":"float"}]},{"description":"Z Raise.","optional":true,"tag":"Z","values":[{"tag":"feedrate","type":"int"}]}],"requires":"EXTRUDERS \u003e 1","since":"2.0.0","tag":"m0217","title":"Filament swap parameters"},"M218":{"author":"thinkyhead","base":"M218","brief":"Set the offset of a hotend (from hotend 0).","codes":["M218"],"examples":null,"experimental":false,"group":"calibration","long":["To keep nozzles aligned to the work area between tool-changes, the firmware needs to know how they relate to each other."],"notes":"- Requires 2 or more nozzles.\n- The default hotend offsets are set with `HOTEND_OFFSET_[XYZ]`.\n- Z hotend offset only available with `DUAL_X_CARRIAGE` or `SWITCHING_NOZZLE`.\n- View current hotend offsets with `M503`.\n- If `EEPROM_SETTINGS` is enabled, these offsets are saved with `M500`, loaded with `M501`, and reset with `M502`.\n","parameters":[{"description":"Hotend index. Active extruder by default.","optional":true,"tag":"T","values":[{"tag":"index","type":"int"}]},{"description":"Hotend X offset","optional":true,"tag":"X","values":[{"tag":"offset","type":"float"}]},{"description":"Hotend Y offset","optional":true,"tag":true,"values":[{"tag":"offset","type":"float"}]},{"description":"Hotend Z offset. Requires `DUAL_X_CARRIAGE` or `SWITCHING_NOZZLE`.","optional":true,"tag":"Z","values":[{"tag":"offset","type":"float"}]}],"requires":"EXTRUDERS\u003e1","tag":"m0218","title":"Set Hotend Offset"},"M22":{"author":"thinkyhead","base":"M022","brief":"Simulate ejection of the SD card","codes":["M22"],"examples":null,"experimental":false,"group":"sdcard","long":"If Marlin gets confused about the state of the SD card, this command can be used to simulate an ejection of the SD card.\n\nRe-insert the SD card or use `M21` to enable the SD card following `M22`.\n","notes":["Requires [`SDSUPPORT`](/docs/configuration/configuration.html#sd-card)"],"parameters":null,"requires":"SDSUPPORT","tag":"m0022","title":"Release SD card"},"M220":{"author":"thinkyhead","base":"M220","brief":"Set the global feedrate percentage.","codes":["M220"],"examples":null,"experimental":false,"group":"planner","long":"Set the feedrate percentage, which applies to all G-code-based moves in all (X, Y, Z, and E) axes.","notes":null,"parameters":[{"description":"Feedrate percentage","optional":false,"tag":"S","values":[{"tag":"percent","type":"int"}]}],"tag":"m0220","title":"Set Feedrate Percentage"},"M221":{"author":"thinkyhead","base":"M221","brief":"Set the flow percentage, which applies to all E moves.","codes":["M221"],"examples":[{"code":"M221 S150","pre":"Set the flow rate to 150%."}],"experimental":false,"group":"planner","long":"Set the flow percentage, which applies to all E moves added to the planner.","notes":null,"parameters":[{"description":"Feedrate percentage","optional":false,"tag":"S","values":[{"tag":"percent","type":"int"}]},{"description":"Target extruder (requires multi-extruder). Default is the active extruder.","optional":true,"tag":"T","values":[{"tag":"index","type":"int"}]}],"tag":"m0221","title":"Set Flow Percentage"},"M226":{"author":"thinkyhead","base":"M226","brief":"Wait for a pin to have a given state.","codes":["M226"],"examples":null,"experimental":false,"group":"control","long":"Wait for a pin to have a certain value or state.","notes":null,"parameters":[{"description":"Pin number","optional":false,"tag":"P","values":[{"tag":"pin","type":"byte"}]},{"description":"State 0 or 1. Default -1 for inverted.","optional":true,"tag":"S","values":[{"tag":"state","type":"byte"}]}],"tag":"m0226","title":"Wait for Pin State"},"M23":{"author":"thinkyhead","base":"M023","brief":"Select an SD file to be executed","codes":["M23"],"examples":[{"code":["M23 /musicg~1/shav~1.gco","M24"],"pre":"Select a file and start it"}],"experimental":false,"group":"sdcard","long":null,"notes":["Requires [`SDSUPPORT`](/docs/configuration/configuration.html#sd-card)"],"parameters":[{"description":"The filename of the file to open.","optional":false,"tag":"filename"}],"requires":"SDSUPPORT","tag":"m0023","title":"Select SD file"},"M24":{"author":"thinkyhead","base":"M024","brief":"Start or resume a file selected with `M23`","codes":["M24"],"examples":null,"experimental":false,"group":"sdcard","long":"Start an SD print or resume the paused SD print. If `PARK_HEAD_ON_PAUSE` is enabled, unpark the nozzle.\n\nIf `POWER_LOSS_RECOVERY` is enabled `M24` accepts parameters which allow resuming the print from a specific point in the file. These parameters are usually only used in this scenario.\n","notes":["Requires [`SDSUPPORT`](/docs/configuration/configuration.html#sd-card)","Since Marlin 2.0.0, SD printing can be aborted with `M524`."],"parameters":[{"description":"Position in file to resume from (requires `POWER_LOSS_RECOVERY`)","optional":true,"tag":"S","values":[{"tag":"pos","type":"long"}]},{"description":"Elapsed time since start of print (requires `POWER_LOSS_RECOVERY`)","optional":true,"tag":"T","values":[{"tag":"time","type":"long"}]}],"requires":"SDSUPPORT","tag":"m0024","title":"Start or Resume SD print"},"M240":{"author":"thinkyhead","base":"M240","brief":"Trigger a camera shutter","codes":["M240"],"examples":null,"experimental":false,"group":"extras","long":"Trigger a camera shutter using a digital pin or by bumping a physical switch.","notes":["`CHDK_PIN` or `PHOTOGRAPH_PIN` is required prior to Marlin 2.0.0.","To use the `CHDK_PIN` or `PHOTOGRAPH_PIN` option with a digital camera see [this article](http://www.doc-diy.net/photo/rc-1_hacked/).","To use an endstop or contact switch as a shutter switch for your smartphone's camera, see [this video](https://www.youtube.com/watch?v=i5g3ziK5wpI)."],"parameters":[{"description":"Offset to the X return position. (Requires `PHOTO_POSITION`)","optional":true,"tag":"A","values":[{"tag":"offset","type":"float"}]},{"description":"Offset to the Y return position. (Requires `PHOTO_POSITION`)","optional":true,"tag":"B","values":[{"tag":"offset","type":"float"}]},{"description":"Duration to hold down the shutter switch. (Requires `PHOTO_SWITCH_POSITION` and `PHOTO_SWITCH_MS`)","optional":true,"tag":"D","values":[{"tag":"ms","type":"int"}]},{"description":"Feedrate for the main photo moves. If omitted, the homing feedrate will be used. (Requires `PHOTO_POSITION`)","optional":true,"tag":"F","values":[{"tag":"feedrate","type":"float"}]},{"description":"Shutter switch X position. If omitted, the photo move X position applies. (Requires `PHOTO_SWITCH_POSITION`)","optional":true,"tag":"I","values":[{"tag":"pos","type":"float"}]},{"description":"Shutter switch Y position. If omitted, the photo move Y position applies. (Requires `PHOTO_SWITCH_POSITION`)","optional":true,"tag":"J","values":[{"tag":"pos","type":"float"}]},{"description":"Delay after pressing the shutter switch. (Requires `PHOTO_SWITCH_POSITION` and `PHOTO_SWITCH_MS`)","optional":true,"tag":"P","values":[{"tag":"ms","type":"int"}]},{"description":"Retract/recover length. (Requires `PHOTO_POSITION`)","optional":true,"tag":"R","values":[{"tag":"length","type":"float"}]},{"description":"Retract/recover feedrate. (Requires `PHOTO_POSITION`)","optional":true,"tag":"S","values":[{"tag":"feedrate","type":"float"}]},{"description":"Main photo move X position. (Requires `PHOTO_POSITION`)","optional":true,"tag":"X","values":[{"tag":"pos","type":"float"}]},{"description":"Main photo move Y position. (Requires `PHOTO_POSITION`)","optional":true,"tag":true,"values":[{"tag":"pos","type":"float"}]},{"description":"Main photo move Z raise. (Requires `PHOTO_POSITION`)","optional":true,"tag":"Z","values":[{"tag":"length","type":"float"}]}],"requires":"PHOTO_GCODE","tag":"m0240","title":"Trigger Camera","videos":["i5g3ziK5wpI"]},"M25":{"author":"thinkyhead","base":"M025","brief":"Pause printing from the SD card","codes":["M25"],"examples":null,"experimental":false,"group":"sdcard","long":"Pause the SD print in progress. If `PARK_HEAD_ON_PAUSE` is enabled, park the nozzle.","notes":["Requires [`SDSUPPORT`](/docs/configuration/configuration.html#sd-card)"],"parameters":null,"requires":"SDSUPPORT","tag":"m0025","title":"Pause SD print"},"M250":{"author":"thinkyhead","base":"M250","brief":"Set and/or get the LCD contrast.","codes":["M250"],"examples":null,"experimental":false,"group":"lcd","long":"Set and/or get the LCD contrast. The value is constrained based on the LCD.","notes":"Requires an LCD controller with software-controlled contrast.","parameters":[{"description":"Contrast value","optional":true,"tag":"C","values":[{"tag":"contrast","type":"int"}]}],"requires":"HAS_LCD_CONTRAST","tag":"m0250","title":"LCD Contrast"},"M26":{"author":"thinkyhead","base":"M026","brief":"Set the SD read position","codes":["M26"],"examples":null,"experimental":false,"group":"sdcard","long":"Set the next read position in the open SD file.","notes":["Requires [`SDSUPPORT`](/docs/configuration/configuration.html#sd-card)"],"parameters":[{"description":"Next file read position to set","optional":true,"tag":"S","values":[{"tag":"pos","type":"long"}]}],"requires":"SDSUPPORT","tag":"m0026","title":"Set SD position"},"M260":{"author":"thinkyhead","base":"M260","brief":"Send data to the I2C bus.","codes":["M260"],"examples":[{"code":"M260 A99  ; Target slave address\nM260 B77  ; M\nM260 B97  ; a\nM260 B114 ; r\nM260 B108 ; l\nM260 B105 ; i\nM260 B110 ; n\nM260 S1   ; Send the current buffer\n","pre":"Send \"Marlin\" to the slave device with address 0x63 (99)"},{"code":"M261 A99 B5","pre":"Request 6 bytes from slave device with address 0x63 (99)"},{"code":"i2c-reply: from:99 bytes:5 data:hello"}],"experimental":false,"group":"i2c","long":"Utility to send data over the I2C bus.","notes":"Requires `EXPERIMENTAL_I2CBUS`.","parameters":[{"description":"The bus address to send to","optional":true,"tag":"A","values":[{"tag":"addr","type":"byte"}]},{"description":"The byte to add to the buffer","optional":true,"tag":"B","values":[{"tag":"byte","type":"byte"}]},{"description":"Reset and rewind the I2C buffer","optional":true,"tag":"R","values":[{"tag":"flag","type":"bool"}]},{"description":"Send flag. Flush the buffer to the bus.","optional":true,"tag":"S","values":[{"tag":"flag","type":"bool"}]}],"requires":"EXPERIMENTAL_I2CBUS","tag":"m0260","title":"I2C Send"},"M261":{"author":"thinkyhead","base":"M261","brief":"Request and echo bytes from the I2C bus.","codes":["M261"],"examples":null,"experimental":false,"group":"i2c","long":"Request bytes from the I2C bus and echo them to the host. To find out how to do more useful things with I2C see the I2C master / slave article.","notes":"Requires `EXPERIMENTAL_I2CBUS`.","parameters":[{"description":"The bus address to request bytes from","optional":false,"tag":"A","values":[{"tag":"addr","type":"byte"}]},{"description":"The number of bytes to request","optional":false,"tag":"B","values":[{"tag":"count","type":"byte"}]}],"requires":"EXPERIMENTAL_I2CBUS","tag":"m0261","title":"I2C Request"},"M27":{"author":"thinkyhead,TheSFReader","base":"M027","brief":"Print SD progress to serial","codes":["M27"],"examples":[{"code":"M27 S4","pre":"Report current SD status"},{"code":"M27 S4","pre":"Report SD status every 4 seconds"},{"code":"M27 S0","pre":"Stop reporting SD status"},{"code":"M27 C","pre":"Report currently open filename"}],"experimental":false,"group":"sdcard","long":["With no parameter, report the current SD read position in the form \"`SD printing byte 123/12345`.\" If no file is open the response is \"`Not SD printing`.\"","With 'S\u003cseconds\u003e', set the SD status auto-report interval. (Requires `AUTO_REPORT_SD_STATUS`)","With 'C', get the currently open file's name (and long filename if possible). Print \"`(no file)`\" if no file is open."],"notes":["Requires [`SDSUPPORT`](/docs/configuration/configuration.html#sd-card)"],"parameters":[{"description":"Interval between auto-reports. `S0` to disable.","optional":true,"tag":"S","values":[{"tag":"seconds","type":"int"}]},{"description":"Report the filename and long filename of the current file.","optional":true,"tag":"C"}],"requires":"SDSUPPORT","tag":"m0027","title":"Report SD print status"},"M28":{"author":"thinkyhead","base":"M028","brief":"Start writing to a file on the SD card","codes":["M28"],"example":[{"code":"M28 file.txt","pre":"Start writing to file.txt"}],"experimental":false,"group":"sdcard","long":"This command starts a file write. All commands received by Marlin are written to the file and are not executed until `M29` closes the file.","notes":["Requires [`SDSUPPORT`](/docs/configuration/configuration.html#sd-card)","To write commands to a file while also printing, use [`M928`](/docs/gcode/M928.html)"],"parameters":[{"description":"File name to write","optional":false,"tag":"filename"}],"requires":"SDSUPPORT","tag":"m0028","title":"Start SD write"},"M280":{"author":"thinkyhead","base":"M280","brief":"Set or get a servo position.","codes":["M280"],"examples":null,"experimental":false,"group":"servos","long":"Set or get the position of a servo.","notes":"Requires `NUM_SERVOS` of 1 or more.","parameters":[{"description":"Servo index to set or get","optional":false,"tag":"P","values":[{"tag":"index","type":"int"}]},{"description":"Servo position to set. Omit to read the current position.","optional":false,"tag":"S","values":[{"tag":"pos","type":"int"}]}],"requires":"NUM_SERVOS\u003e0","tag":"m0280","title":"Servo Position"},"M29":{"author":"thinkyhead","base":"M029","brief":"Stop writing the file, end logging.","codes":["M29"],"examples":null,"experimental":false,"group":"sdcard","long":"Stop writing to a file that was begun with `M28` or `M928`. Logging is disabled.","notes":["Requires [`SDSUPPORT`](/docs/configuration/configuration.html#sd-card)"],"parameters":null,"related":["M28","M928"],"requires":"SDSUPPORT","tag":"m0029","title":"Stop SD write"},"M290":{"author":"thinkyhead","base":"M290","brief":"Babystep one or more axes","codes":["M290"],"example":[{"code":["M290 Z0.25 ; move up 0.25mm on the Z axis"],"pre":"Babystep the Z axis by 0.25mm (in mm units mode)"}],"experimental":false,"group":"calibration","long":["Apply babysteps to one or more axes using current units. Offsets applied with `M290` aren't added to the current coordinates, but are intended for making small adjustments, especially in the Z axis, at the start of a print.","Note that when `BABYSTEP_ZPROBE_OFFSET` is enabled, `M290` also modifies the Probe Z Offset (with no immediate effects). The new Z offset applies to successive probing operations, and can be saved with `M500`. This behavior is means to coincide with the LCD Menu replacing \"Z Babystepping\" with \"Babystep Z Probe Offset.\" To avoid this side-effect, use `M290 P0` or leave `BABYSTEP_ZPROBE_OFFSET` disabled."],"notes":"Requires `BABYSTEP_XY` for babystepping on the XY axes.","parameters":[{"description":"A distance on the X axis","optional":true,"tag":"X","values":[{"tag":"pos","type":"float"}]},{"description":"A distance on the Y axis","optional":true,"tag":true,"values":[{"tag":"pos","type":"float"}]},{"description":"A distance on the Z axis","optional":true,"tag":"Z","values":[{"tag":"pos","type":"float"}]},{"description":"Alias for Z","optional":true,"tag":"S","values":[{"tag":"pos","type":"float"}]},{"description":"Use `P0` to leave the Probe Z Offset unaffected. (Requires `BABYSTEP_ZPROBE_OFFSET`)","optional":true,"tag":"P","values":[{"type":"bool"}]}],"requires":"BABYSTEPPING","since":"1.1.7","tag":"m0290","title":"Babystep"},"M3":{"author":"thinkyhead","base":"M003","brief":"Set the spindle CW speed or laser power","codes":["M3"],"examples":[{"code":"M3 S128","pre":"Set spindle rotation clockwise at 50%"},{"code":"M3","pre":"Turn on the laser at full power"}],"experimental":false,"group":"control","long":"Wait for moves to complete, then set the spindle speed (clockwise) or laser power.","notes":null,"parameters":[{"description":"Spindle speed or laser power","optional":true,"tag":"S","values":[{"tag":"power","type":"byte"}]}],"requires":"SPINDLE_LASER_ENABLE","since":"1.1.2","tag":"m0003","title":"Spindle CW / Laser On"},"M30":{"author":"thinkyhead","base":"M030","brief":"Delete a specified file from SD.","codes":["M30"],"example":[{"code":"M30 /path/to/file.gco","pre":"Delete the file \"/path/to/file.gco\""}],"experimental":false,"group":"sdcard","long":null,"notes":["Requires [`SDSUPPORT`](/docs/configuration/configuration.html#sd-card)"],"parameters":[{"description":"The filename of the file to delete.","optional":false,"tag":"filename"}],"tag":"m0030","title":"Delete SD file"},"M300":{"author":"thinkyhead","base":"M300","brief":"Play a single tone, buzz, or beep.","codes":["M300"],"examples":[{"code":"M300 S440 P200\nM300 S660 P250\nM300 S880 P300","pre":"Play a tune."}],"experimental":false,"group":"lcd","long":"Add a tone to the tone queue.","notes":["Requires `SPEAKER` to play tones (not just beeps).","In Marlin 1.0.2, playing tones block the command queue. Marlin 1.1.0 uses a tone queue and background tone player to keep the command buffer from being blocked by playing tones."],"parameters":[{"description":"Duration (1s)","optional":true,"tag":"P","values":[{"tag":"ms","type":"int"}]},{"description":"Frequency (260Hz)","optional":true,"tag":"S","values":[{"tag":"Hz","type":"int"}]}],"requires":"SPEAKER","tag":"m0300","title":"Play Tone"},"M301":{"author":"thinkyhead","base":"M301","brief":"Set PID values for a hotend.","codes":["M301"],"examples":null,"experimental":false,"group":"thermal","long":"Set the values that control the PID loop for a hotend.","notes":["Requires `PIDTEMP`.","View current PID values with `M503`.","If `EEPROM_SETTINGS` is enabled, all hotend PID values are saved with `M500`, loaded with `M501`, and reset with `M502`."],"parameters":[{"description":"Extruder index to set. Default 0.","optional":true,"tag":"E","values":[{"tag":"index","type":"int"}]},{"description":"Proportional value","optional":true,"tag":"P","values":[{"tag":"value","type":"float"}]},{"description":"Integral value","optional":true,"tag":"I","values":[{"tag":"value","type":"float"}]},{"description":"Derivative value","optional":true,"tag":"D","values":[{"tag":"value","type":"float"}]},{"description":"C term (requires `PID_EXTRUSION_SCALING`)","optional":true,"tag":"C","values":[{"tag":"value","type":"float"}]},{"description":"Extrusion scaling queue length (requires `PID_EXTRUSION_SCALING`)","optional":true,"tag":"L","values":[{"tag":"value","type":"float"}]}],"requires":"PIDTEMP","tag":"m0301","title":"Set Hotend PID"},"M302":{"author":"thinkyhead","base":"M302","brief":"Set minimum extrusion temperature, allow cold extrusion.","codes":["M302"],"examples":[{"code":"M302         ; report current cold extrusion state\nM302 P0      ; enable cold extrusion checking\nM302 P1      ; disable cold extrusion checking\nM302 S0      ; always allow extrusion (disable checking)\nM302 S170    ; only allow extrusion above 170\nM302 S170 P1 ; set min extrude temp to 170 but leave disabled","pre":"Some common uses..."}],"experimental":false,"group":"thermal","long":"Set the minimum extrusion temperature, potentially allowing E movement at temperatures below the melting point of the material.","notes":"Requires `PREVENT_COLD_EXTRUSION`.","parameters":[{"description":"Minimum temperature for safe extrusion","optional":true,"tag":"S","values":[{"tag":"temp","type":"float"}]},{"description":"Flag to allow extrusion at any temperature","optional":true,"tag":"P","values":[{"tag":"flag","type":"bool"}]}],"requires":"PREVENT_COLD_EXTRUSION","tag":"m0302","title":"Cold Extrude"},"M303":{"author":"thinkyhead","base":"M303","brief":"Auto-tune the PID system to find stable values.","codes":["M303"],"example":null,"experimental":false,"group":"thermal","long":"This command initiates a process of heating and cooling to determine the proper PID values for the specified hotend or the heated bed.","notes":["Requires `PIDTEMP` or `PIDTEMPBED`.","View current PID values with `M503`.","If `EEPROM_SETTINGS` is enabled, all PID values are saved with `M500`, loaded with `M501`, and reset with `M502`."],"parameters":[{"description":"Hotend index (-1 for heated bed). Default 0.","optional":true,"tag":"E","values":[{"tag":"index","type":"int"}]},{"description":"Cycles. At least 3 cycles are required. Default 5.","optional":false,"tag":"C","values":[{"tag":"count","type":"int"}]},{"description":"Target temperature","optional":false,"tag":"S","values":[{"tag":"temp","type":"float"}]},{"description":"Use PID result. (Otherwise just print it out.)","optional":false,"tag":"U","values":[{"tag":"flag","type":"bool"}]}],"requires":"PIDTEMP|PIDTEMPBED","tag":"m0303","title":"PID autotune"},"M304":{"author":"thinkyhead","base":"M304","brief":"Set PID values for the heated bed.","codes":["M304"],"examples":null,"experimental":false,"group":"thermal","long":"Set the values that control the PID loop for the heated bed.","notes":["Requires `PIDTEMPBED`.","View current bed PID values with `M503`.","If `EEPROM_SETTINGS` is enabled, bed PID values are saved with `M500`, loaded with `M501`, and reset with `M502`."],"parameters":[{"description":"Proportional value","optional":true,"tag":"P","values":[{"tag":"value","type":"float"}]},{"description":"Integral value","optional":true,"tag":"I","values":[{"tag":"value","type":"float"}]},{"description":"Derivative value","optional":true,"tag":"D","values":[{"tag":"value","type":"float"}]}],"requires":"PIDTEMPBED","tag":"m0304","title":"Set Bed PID"},"M31":{"author":"thinkyhead","base":"M031","brief":"Report the current print time.","codes":["M31"],"examples":null,"experimental":false,"group":"printjob","long":["This command reports the time elapsed since the start of the current print job to the host. When printing from SD card, the print job timer starts as soon as SD printing starts.\n\nIf `PRINTJOB_TIMER_AUTOSTART` is enabled then the first `M109` or `M190` command received from the host will also start the print job timer.\n\nFor manual control from the host, use `M75`, `M76`, and `M77` to start, pause, and stop the print job timer.\n"],"notes":null,"parameters":null,"related":["M75","M76","M77","M78"],"tag":"m0031","title":"Print time"},"M32":{"author":"thinkyhead","base":"M032","brief":"Begin an SD print from a file.","codes":["M32"],"examples":[{"code":"M32 S5022 !/boats/sailboat.gco","pre":"Select and start a file at offset 5022."},{"code":"M32 P !/models/lgbust.gco#","post":"The `#` suffix is needed when using `P` to \"stop buffer pre-reading\" so no commands after `M32` will go into the buffer until after it returns.","pre":"Select and start a file from within G-code."}],"experimental":true,"group":"sdcard","long":["The `M32` command exists to allow G-code to load other G-code files and run them as sub-programs. This can be useful to change the start / end gcode for a batch of files without having to edit them all.","For legacy reasons `M32` uses '`!`' (and '`#`') to delimit the filepath parameter. The filepath must be the last parameter."],"notes":["Requires [`SDSUPPORT`](/docs/configuration/configuration.html#sd-card)","This is a seldom-used beta feature that needs more testing and use-cases."],"parameters":[{"description":"Sub-Program flag","optional":true,"tag":"P","values":[{"tag":"flag","type":"bool"}]},{"description":"Starting file offset","optional":true,"tag":"S","values":[{"tag":"filepos","type":"int"}]}],"requires":"SDSUPPORT","tag":"m0032","title":"Select and Start"},"M33":{"author":"thinkyhead","base":"M033","brief":"Convert a short pathname to a long pathname.","codes":["M33"],"examples":[{"code":["M33 funstuff/mask.gco"],"pre":"Get the long path for a file"},{"code":["FunStuff/Mask.gcode"],"pre":"Output"}],"experimental":false,"group":"sdcard","long":null,"notes":["Requires [`SDSUPPORT`](/docs/configuration/configuration.html#sd-card) and `LONG_FILENAME_HOST_SUPPORT`"],"parameters":[{"description":"DOS 8.3 path to a file or folder","optional":false,"tag":"path"}],"requires":"SDSUPPORT, LONG_FILENAME_HOST_SUPPORT","since":"1.0.2","tag":"m0033","title":"Get Long Path"},"M34":{"author":"thinkyhead","base":"M034","brief":"Set SDCard file sorting options.","codes":["M34"],"examples":null,"experimental":false,"group":"sdcard","long":["Marlin now contains support for SDCard alphabetical file sorting in the LCD menus. This feature uses free SRAM to create a sorting index for up to the first 256 files in the current folder, and (if you have _lots_ of SRAM) can optionally cache file listings for a more responsive UI. Buffering only occurs during file browsing. Otherwise the SRAM is freed."],"notes":["Requires [`SDSUPPORT`](/docs/configuration/configuration.html#sd-card) and `SDCARD_SORT_ALPHA`."],"parameters":[{"description":"Sorting on/off","optional":true,"tag":"S","values":[{"type":"bool"}]},{"description":"Folder Sorting","optional":true,"tag":"F","values":[{"description":"Folders before files","tag":-1},{"description":"No folder sorting","tag":0},{"description":"Folders after files","tag":1}]}],"requires":"SDSUPPORT,SDCARD_SORT_ALPHA","since":"1.1.0","tag":"m0034","title":"SDCard Sorting"},"M350":{"author":"thinkyhead","base":"M350","brief":"Set micro-stepping for drivers that support it","codes":["M350"],"examples":null,"experimental":false,"group":"control","long":"If your board has digital micro-stepping pins (`X_MS1`, `Y_MS1`, etc.), use this command to set the micro-steps.","notes":null,"parameters":[{"description":"Set micro-stepping for the 5th stepper driver.","optional":true,"tag":"B","values":[{"tag":1},{"tag":2},{"tag":4},{"tag":8},{"tag":16}]},{"description":"Set micro-stepping for all 5 stepper drivers.","optional":true,"tag":"S","values":[{"tag":1},{"tag":2},{"tag":4},{"tag":8},{"tag":16}]},{"description":"Set micro-stepping for the X stepper driver.","optional":true,"tag":"X","values":[{"tag":1},{"tag":2},{"tag":4},{"tag":8},{"tag":16}]},{"description":"Set micro-stepping for the Y stepper driver.","optional":true,"tag":true,"values":[{"tag":1},{"tag":2},{"tag":4},{"tag":8},{"tag":16}]},{"description":"Set micro-stepping for the Z stepper driver.","optional":true,"tag":"Z","values":[{"tag":1},{"tag":2},{"tag":4},{"tag":8},{"tag":16}]},{"description":"Set micro-stepping for the E0 stepper driver.","optional":true,"tag":"E","values":[{"tag":1},{"tag":2},{"tag":4},{"tag":8},{"tag":16}]}],"requires":"HAS_MICROSTEPS","tag":"m0350","title":"Set micro-stepping"},"M351":{"author":"thinkyhead","base":"M351","brief":"Directly set the micro-stepping pins","codes":["M351"],"examples":[{"code":"M351 S1 X1 E0","pre":"Set the `X_MS1` pin and clear the `E0_MS1` pin"}],"experimental":false,"group":"control","long":"If your board has digital micro-stepping pins (`X_MS1`, `Y_MS1`, etc.), use this command to set the micro-steps.","notes":null,"parameters":[{"description":"Select the pin to set for all specified axes.","optional":false,"tag":"S","values":[{"description":"Select pin MS1 for all axes being set.","tag":1},{"description":"Select pin MS2 for all axes being set.","tag":2}]},{"description":"Set the MS1/2 pin for the 5th stepper driver.","optional":true,"tag":"B","values":[{"tag":0},{"tag":1}]},{"description":"Set the MS1/2 pin for the X stepper driver.","optional":true,"tag":"X","values":[{"tag":0},{"tag":1}]},{"description":"Set the MS1/2 pin for the Y stepper driver.","optional":true,"tag":true,"values":[{"tag":0},{"tag":1}]},{"description":"Set the MS1/2 pin for the Z stepper driver.","optional":true,"tag":"Z","values":[{"tag":0},{"tag":1}]},{"description":"Set the MS1/2 pin for the E stepper driver.","optional":true,"tag":"E","values":[{"tag":0},{"tag":1}]}],"requires":"HAS_MICROSTEPS","tag":"m0351","title":"Set Microstep Pins"},"M355":{"author":"thinkyhead","base":"M355","brief":"Turn the case light on or off, set brightness","codes":["M355"],"example":[{"code":"M355 S1 P128","pre":"Turn the case light on at half brightness"}],"experimental":false,"group":"control","long":"Set the case light power state and/or brightness.","notes":"Requires a `CASE_LIGHT_PIN` to control the on/off or PWM state of the case light. The pin will need to be a 12V MOSFET pin with PWM control, or a signal pin connected to a MOSFET or relay to control the higher current required for the light.","parameters":[{"description":"Set the brightness factor from 0 to 255.","optional":true,"tag":"P","values":[{"type":"byte"}]},{"description":"Turn the case light on or off.","optional":true,"tag":"S","values":[{"type":"bool"}]}],"requires":"CASE_LIGHT_PIN","tag":"m0355","title":"Case Light Control"},"M360":{"author":"thinkyhead","base":"M360","brief":"Move to Theta A","codes":["M360"],"examples":null,"experimental":false,"group":"control","long":"Move the nozzle to SCARA calibration position Theta 0 (A0 B120) for calibration of \"zero degrees.\"","notes":null,"parameters":null,"requires":"MORGAN_SCARA","tag":"m0360","title":"SCARA Theta A"},"M361":{"author":"thinkyhead","base":"M361","brief":"Move to Theta-B","codes":["M361"],"examples":null,"experimental":false,"group":"control","long":"Move the nozzle to SCARA Theta-B calibration position Theta 90 (A90 B130) for calibration of \"90 degrees steps-per-degree.\"","notes":null,"parameters":null,"requires":"MORGAN_SCARA","tag":"m0361","title":"SCARA Theta-B"},"M362":{"author":"thinkyhead","base":"M362","brief":"Move to Psi-A","codes":["M362"],"examples":null,"experimental":false,"group":"control","long":"Move the nozzle to SCARA Psi-A calibration position Psi 0 (A60 B180) for calibration of \"zero degrees.\"","notes":null,"parameters":null,"requires":"MORGAN_SCARA","tag":"m0362","title":"SCARA Psi-A"},"M363":{"author":"thinkyhead","base":"M363","brief":"Move to Psi-B","codes":["M363"],"examples":null,"experimental":false,"group":"control","long":"Move the nozzle to SCARA Psi-B calibration position Psi 90 (A50 B90) for calibration of \"90 degrees steps-per-degree.\"","notes":null,"parameters":null,"requires":"MORGAN_SCARA","tag":"m0363","title":"SCARA Psi-B"},"M364":{"author":"thinkyhead","base":"M364","brief":"Move to Psi-C","codes":["M364"],"examples":null,"experimental":false,"group":"control","long":"Move the nozzle to SCARA Psi-C calibration position Theta-Psi 90 (A45 B135) for calibration of \"90 degrees to Theta.\"","notes":null,"parameters":null,"requires":"MORGAN_SCARA","tag":"m0364","title":"SCARA Psi-C"},"M380":{"author":"thinkyhead","base":"M380","brief":"Activate","codes":["M380"],"example":[{"code":["M381 ; Deactivate all solenoids","T0   ; Extruder 0","M380 ; Activate the E0 solenoid"]},{"code":"M381 S1 ; Activate solenoid 1"}],"experimental":false,"group":"none","long":"Activate the solenoid on the active extruder.","notes":null,"parameters":[{"description":"Solenoid index (Requires `MANUAL_SOLENOID_CONTROL`)","optional":true,"requires":"MANUAL_SOLENOID_CONTROL","since":"2.0.0","tag":"S","values":[{"tag":"index","type":"int"}]}],"requires":"EXT_SOLENOID","tag":"m0380","title":"Activate Solenoid"},"M381":{"author":"thinkyhead","base":"M381","brief":"Deactivate all extruder solenoids","codes":["M381"],"examples":[{"code":"M381 ; Deactivate all solenoids"},{"code":"M381 S1 ; Deactivate solenoid 1"}],"experimental":false,"group":"none","long":"Deactivate all solenoids on all extruders.","notes":null,"parameters":[{"description":"Solenoid index (Requires `MANUAL_SOLENOID_CONTROL`)","optional":true,"requires":"MANUAL_SOLENOID_CONTROL","since":"2.0.0","tag":"S","values":[{"tag":"index","type":"int"}]}],"requires":"EXT_SOLENOID","tag":"m0381","title":"Deactivate Solenoids"},"M4":{"author":"thinkyhead","base":"M004","brief":"Set the spindle CCW speed or laser power","codes":["M4"],"examples":[{"code":"M4 S128","pre":"Set spindle rotation counter-clockwise at 50%"},{"code":"M4","pre":"Turn on the laser at full power"}],"experimental":false,"group":"control","long":"Wait for moves to complete, then set the spindle speed (counter-clockwise) or laser power.","notes":null,"parameters":[{"description":"Spindle speed or laser power","optional":true,"tag":"S","values":[{"tag":"power","type":"byte"}]}],"requires":"SPINDLE_LASER_ENABLE","since":"1.1.2","tag":"m0004","title":"Spindle CCW / Laser On"},"M400":{"author":"thinkyhead","base":"M400","brief":"Wait for all moves to finish","codes":["M400"],"example":[{"code":["M400","M5    ; Without M400 this happens too soon"],"pre":"Wait for moves to finish before turning off the spindle"}],"experimental":false,"group":"planner","long":"This command causes all GCode processing to pause and wait in a loop until all moves in the planner are completed.","notes":null,"parameters":null,"tag":"m0400","title":"Finish Moves"},"M401":{"author":"thinkyhead","base":"M401","brief":"Deploy the bed probe","codes":["M401"],"examples":[{"code":"M401","pre":"Deploy the probe"}],"experimental":false,"group":"calibration","long":"Deploy the bed probe. The Z axis may raise up to make room for the probe to deploy.","notes":"Requires some kind of bed probe. This command has no visible effect for probes that don't move. They are just activated.","parameters":null,"requires":"HAS_BED_PROBE","tag":"m0401","title":"Deploy Probe"},"M402":{"author":"thinkyhead","base":"M402","brief":"Stow the bed probe","codes":["M402"],"examples":[{"code":"M402","pre":"Stow the probe"}],"experimental":false,"group":"calibration","long":"Stow the bed probe. The Z axis may raise up to make room for the probe to stow.","notes":"Requires some kind of bed probe. This command has no visible effect for probes that don't move. They are just deactivated.","parameters":null,"requires":"HAS_BED_PROBE","tag":"m0402","title":"Stow Probe"},"M403":{"author":"revilor","base":"M403","brief":"Set filament type for Multi-Material Unit 2.0","codes":["M403"],"examples":[{"code":"M403 E0 F1","pre":"Set slot 0 to flexible"},{"code":"M403 E3 F2","pre":"Set slot 3 to PVA"}],"group":"control","long":"Set the filament type for a Prusa MMU2 (or compatible) material slot.","notes":["Requires a Prusa Multi-Material Unit v2.0.","Requires [`PRUSA_MMU2`](/docs/configuration/configuration.html#mmu2)"],"parameters":[{"description":"The MMU2 slot [0..4] to set the material type for","optional":false,"tag":"E","values":[{"tag":"index","type":"int"}]},{"description":"The filament type.","optional":false,"tag":"F","values":[{"description":"Default (PLA, PETG, ...)","tag":0},{"description":"Flexible filament","tag":1},{"description":"PVA","tag":2}]}],"requires":"PRUSA_MMU2","tag":"m0403","title":"MMU2 Filament Type"},"M404":{"author":"thinkyhead","base":"M404","brief":"Set the nominal diameter for filament width sensor auto-flow","codes":["M404"],"examples":[{"code":"M404 W1.75","pre":"Set the diameter to 1.75mm"},{"code":["M404","\u003e Filament dia (nominal mm): 1.75"],"pre":"Get the current width"}],"experimental":false,"group":"control","long":"Report or set the nominal filament width, such as 1.75 or 3.00.\n\nThis value is used to determine the percentage difference when auto-adjusting flow in response to the measured filament width, and should match the value used for filament width in your slicer settings.\n","notes":"Requires `FILAMENT_WIDTH_SENSOR`.","parameters":[{"description":"The new nominal width value","optional":true,"tag":"W","values":[{"tag":"linear","type":"float"}]}],"requires":"FILAMENT_WIDTH_SENSOR","tag":"m0404","title":"Set Filament Diameter"},"M405":{"author":"thinkyhead","base":"M405","brief":"Enable filament width sensor flow control","codes":["M405"],"example":[{"code":"M405","pre":"Start measuring filament width, adjusting flow"}],"experimental":false,"group":"control","long":"Turn on the filament width sensor and start using it to do flow control. Initially, the filament between the sensor and the hot-end will be treated as the nominal width.","notes":"Requires `FILAMENT_WIDTH_SENSOR`.","parameters":[{"description":"Distance from measurement point to hot end. If not given, the previous value will be used. The default startup value is set by `MEASUREMENT_DELAY_CM`.","optional":true,"tag":"D","values":[{"type":"int","unit":"cm"}]}],"requires":"FILAMENT_WIDTH_SENSOR","tag":"m0405","title":"Filament Width Sensor On"},"M406":{"author":"thinkyhead","base":"M406","brief":"Disable filament width sensor flow control","codes":["M406"],"example":[{"code":"M406","pre":"Stop measuring filament width"}],"experimental":false,"group":"control","long":"Turn off the filament width sensor and stop using it to do flow control.","notes":"Requires `FILAMENT_WIDTH_SENSOR`.","parameters":null,"requires":"FILAMENT_WIDTH_SENSOR","tag":"m0406","title":"Filament Width Sensor Off"},"M407":{"author":"thinkyhead","base":"M407","brief":"Report the measured filament width","codes":["M407"],"example":[{"code":["M407","\u003e Filament dia (measured mm): 1.768"],"pre":"Get the current measured filament width"}],"experimental":false,"group":"control","long":"Report the current measured filament width to the host.","notes":"Requires `FILAMENT_WIDTH_SENSOR`.","parameters":null,"requires":"FILAMENT_WIDTH_SENSOR","tag":"m0407","title":"Filament Width"},"M410":{"author":"thinkyhead","base":"M410","brief":"Stop all steppers instantly","codes":["M410"],"example":[{"code":"M410","pre":"Stop all steppers now."}],"experimental":false,"group":"planner","long":"Stop all steppers instantly. Since there will be no deceleration, steppers are expected to be out of position after this command.","notes":["This command is intended only for emergency situations.","If `EMERGENCY_PARSER` is not enabled, this will be delayed."],"parameters":null,"tag":"m0410","title":"Quickstop"},"M412":{"author":"thinkyhead","base":"M412","brief":"Enable / disable filament runout detection","codes":["M412"],"examples":[{"code":"M412 S1","pre":"Enable filament runout detection"},{"code":"M412 S0","pre":"Disable filament runout detection"},{"code":"M412\nFilament runout ON","pre":"Report filament runout state"}],"experimental":false,"group":"control","long":"Enable or disable filament runout detection. When filament sensors are enabled, Marlin will respond to a filament runout by running the configured G-code (usually [`M600` Filament Change](/docs/gcode/M600.html)). When filament runout detection is disabled, Marlin will take no action for filament runout.","notes":["Requires `FILAMENT_RUNOUT_SENSOR`."],"parameters":[{"description":"Flag to enable or disable Filament Runout Detection. If omitted, the current enabled state will be reported.","optional":true,"tag":"S","values":[{"type":"bool"}]}],"requires":"FILAMENT_RUNOUT_SENSOR","since":"2.0.0","tag":"m0412","title":"Filament Runout"},"M413":{"author":"thinkyhead","base":"M413","brief":"Enable / disable power-loss recovery","codes":["M413"],"examples":[{"code":"M413 S1","pre":"Enable power-loss recovery"},{"code":"M413 S0","pre":"Disable power-loss recovery"},{"code":"M413\nPower-loss recovery ON","pre":"Report power-loss recovery state"}],"experimental":false,"group":"control","long":"Enable or disable the **Power-loss Recovery** feature. When this feature is enabled, the state of the current print job (SD card only) will be saved to a file on the SD card. If the machine crashes or a power outage occurs, the firmware will present an option to Resume the interrupted print job. In Marlin 2.0 the `POWER_LOSS_RECOVERY` option must be enabled.\n\nThis feature operates without a power-loss detection circuit by writing to the recovery file periodically (e.g., once per layer), or if a `POWER_LOSS_PIN` is configured then it will write the recovery info only when a power-loss is detected. The latter option is preferred, since constant writing to the SD card can shorten its life, and the print will be resumed where it was interrupted rather than repeating the last layer. (Future implementations may allow use of the EEPROM or the on-board SD card.)\n","notes":["Requires `POWER_LOSS_RECOVERY` and an LCD controller."],"parameters":[{"description":"Flag to enable or disable Power-loss Recovery. If omitted, the current enabled state will be reported.","optional":true,"tag":"S","values":[{"type":"bool"}]}],"requires":"POWER_LOSS_RECOVERY","since":"2.0.0","tag":"m0413","title":"Power-loss Recovery"},"M42":{"author":"thinkyhead","base":"M042","brief":"Set an analog or digital pin to a specified state.","codes":["M42"],"examples":null,"experimental":false,"group":"control","long":"For custom hardware not officially supported in Marlin, you can often just connect up an unused pin and use `M42` to control it.","notes":null,"parameters":[{"description":"A digital pin number (even for analog pins) to write to. (`LED_PIN` if omitted)","optional":true,"tag":"P","values":[{"type":"int"}]},{"description":"The state to set. PWM-able pins may be set from 0-255.","optional":false,"tag":"S","values":[{"type":"int"}]}],"tag":"m0042","title":"Set Pin State"},"M420":{"author":"thinkyhead","base":"M420","brief":"Get and/or set bed leveling state and fade height","codes":["M420"],"examples":null,"experimental":false,"group":"planner","long":["Get and/or set the enabled state of bed leveling compensation, plus Z fade height.","This command has been extended with `L` to load a mesh for Unified Bed Leveling."],"notes":["The \"current position\" may change in response to `M420 Sn`.","`G28` disables bed leveling. Follow with `M420 S` to turn leveling on, or use `RESTORE_LEVELING_AFTER_G28` to automatically keep leveling on after `G28`."],"parameters":[{"description":"Load mesh from EEPROM index (Requires `AUTO_BED_LEVELING_UBL` and `EEPROM_SETTINGS`)","optional":true,"tag":"L","values":[{"type":"int"}]},{"description":"Enabled state","optional":true,"tag":"S","values":[{"type":"bool"}]},{"description":"Verbose: Print the stored mesh / matrix data","optional":true,"tag":"V","values":[{"type":"bool"}]},{"description":"Format to print the mesh data","optional":true,"tag":"T","values":[{"description":"Human readable","tag":0},{"description":"CSV","tag":1},{"description":"Compact","tag":4}]},{"description":"Leveling fade Z height (Requires `ENABLE_LEVELING_FADE_HEIGHT`)","optional":true,"tag":"Z","values":[{"tag":"linear","type":"float"}]},{"description":"Center the mesh on the mean of the lowest and highest points","optional":true,"tag":"C","values":[{"type":"bool"}]}],"requires":"AUTO_BED_LEVELING_(3POINT|LINEAR|BILINEAR|UBL)|MESH_BED_LEVELING","tag":"m0420","title":"Bed Leveling State"},"M421":{"author":"thinkyhead","base":"M421","brief":"Set a single mesh Z height","codes":["M421"],"examples":[{"code":"M421 I2 J2 Z-0.05","pre":"Set the Z height in the middle of a 5x5 grid"},{"code":"M421 X100 Y100 Z-0.05","pre":"Set the same Z height using XY"},{"code":"M421 I2 J2 Q-0.01","pre":"Adjust the mesh point by -0.01"}],"experimental":false,"group":"planner","long":["This command is used to set a single Z value for a mesh point in the stored bed leveling data.","Allowed forms are `M421 In Jn Zn`, `M421 Xn Yn Zn` (`MESH_BED_LEVELING` only) or `M421 C Zn` (`AUTO_BED_LEVELING_UBL` only)."],"notes":null,"parameters":[{"description":"X index into the mesh array","optional":true,"tag":"I","values":[{"type":"int"}]},{"description":"Y index into the mesh array","optional":true,"tag":"J","values":[{"type":"int"}]},{"description":"X position (which should be very close to a grid line) (requires `MESH_BED_LEVELING`)","optional":true,"tag":"X","values":[{"tag":"linear","type":"float"}]},{"description":"Y position (which should be very close to a grid line) (requires `MESH_BED_LEVELING`)","optional":true,"tag":true,"values":[{"tag":"linear","type":"float"}]},{"description":"The new Z value to set","optional":true,"tag":"Z","values":[{"tag":"linear","type":"float"}]},{"description":"A value to add to the existing Z value","optional":true,"tag":"Q","values":[{"tag":"linear","type":"float"}]},{"description":"Set the mesh point closest to the current nozzle position (requires `AUTO_BED_LEVELING_UBL`)","optional":true,"tag":"C","values":[{"type":"bool"}]},{"description":"Set the mesh point to undefined (requires `AUTO_BED_LEVELING_UBL`)","optional":true,"tag":false,"values":[{"type":"bool"}]}],"requires":"AUTO_BED_LEVELING_(BILINEAR|UBL)|MESH_BED_LEVELING","tag":"m0421","title":"Set Mesh Value"},"M425":{"author":"mteixeira","base":"M425","brief":"Enable and tune backlash compensation","codes":["M425"],"examples":[{"code":["M425 X0.1 Y0.2 Z0.3 ; Set backlash to specific values for all axis","M425 F1             ; Enable backlash compensation at 100%"],"pre":"Manually configure backlash compensation"},{"code":["M425 F1 S3"],"pre":"Use smoothing for best print surface quality"},{"code":["M425 F1 S0"],"pre":"Use no smoothing for best dimensional accuracy"},{"code":["G425                ; Perform a full calibration","M425 F1             ; Use full measured value of backlash on X, Y and Z"],"post":"G425 automatically loads the measured backlash into the backlash distance, but will not enable backlash compensation.","pre":"Automatically measure X, Y, and Z backlash using `G425`"},{"code":["G29                 ; Perform probe and measure backlash on Z","M425 F1 Z           ; Use full measured value of backlash on Z"],"post":"`MEASURE_BACKLASH_WHEN_PROBING` measures backlash, but does not update the configured backlash distance. The measured value should be activated by using the `Z` argument without a value. This differs from the behavior of `G425`.","pre":"To automatically measure Z backlash when probing with `MEASURE_BACKLASH_WHEN_PROBING`:"},{"code":["M425"],"pre":"Report the current backlash configuration"}],"experimental":true,"group":"calibration","long":["Backlash compensation works by adding extra steps to one or more segments whenever a motor reverses direction.","By default, steps will be added to the first segment after a direction change, this gives the best dimensional accuracy but may cause marks to appear in the print. Smoothing spreads those extra steps multiple consecutive segments to prevent blemishes in the print, at the expense of dimensional accuracy.","Backlash compensation can be configured at both compile-time and run-time. Enable 'BACKLASH_GCODE' for run-time configuration, which enables `M425` as well as a \"Backlash\" menu in the LCD.","Backlash can be automatically measured on all axes with [`G425`](/docs/gcode/G425.html) or on Z only with [`G29`](/docs/gcode/G29.html) when `MEASURE_BACKLASH_WHEN_PROBING` is enabled."],"notes":"Requires `BACKLASH_COMPENSATION`, `BACKLASH_GCODE` and the following parameters:\n  - `BACKLASH_DISTANCE_MM` specifies the default backlash on the X, Y and Z axis.\n  - `BACKLASH_CORRECTION` specifies the default backlash correction (0.0 = 0%, 1.0 = 100%)\n  - `BACKLASH_SMOOTHING_MM` enables backlash smoothing over a specified distance.\n  - `BACKLASH_GCODE` enables `M425` for run-time tuning of backlash.\n  - `MEASURE_BACKLASH_WHEN_PROBING` turns on Z backlash measurement when probing ([`G29`](/docs/gcode/G29.html)).\n  - Use `BACKLASH_MEASUREMENT_LIMIT`, `BACKLASH_MEASUREMENT_RESOLUTION` and `BACKLASH_MEASUREMENT_FEEDRATE` configure `G29` measurement.\n","parameters":[{"description":"Enable or disables backlash correction, or sets an intermediate fade-out (0.0 = none to 1.0 = 100%)","optional":true,"tag":"F","values":[{"tag":"value","type":"float"}]},{"description":"Distance over which backlash correction is spread","optional":true,"tag":"S","values":[{"tag":"linear","type":"float"}]},{"description":"Set the backlash distance on X (mm; 0 to disable)","optional":true,"tag":"X","values":[{"tag":"linear","type":"float"}]},{"description":"Set the backlash distance on Y (mm; 0 to disable)","optional":true,"tag":true,"values":[{"tag":"linear","type":"float"}]},{"description":"Set the backlash distance on Z (mm; 0 to disable)","optional":true,"tag":"Z","values":[{"tag":"linear","type":"float"}]},{"description":"When `MEASURE_BACKLASH_WHEN_PROBING` is enabled, copies the measured backlash into the backlash distance.","optional":true,"tag":"Z"}],"requires":"BACKLASH_COMPENSATION,BACKLASH_GCODE","tag":"m0425","title":"Backlash compensation"},"M428":{"author":"thinkyhead","base":"M428","brief":"Set home offsets based on current position","codes":["M428"],"examples":[{"code":["G1 X10","M428"],"pre":"What was X=10 becomes X=0. So the X home offset becomes -10."}],"experimental":false,"group":"planner","long":"Use `M428` to set a persistent offset to the native home position and coordinate space by assigning the current position as the native home position. See the example below.\n\n- The current position must be within 2cm from 0 or an endstop.\n- The current position is set to the native home position.\n- Any previous position shift from `G92` is cleared.\n- The home offset is persistent — added to the current position until changed.\n- Some uses include fine adjustment of Z position (without moving endstops) and shifting the coordinate space to print on a different part of the bed.\n","notes":"- Only the Z offset can be altered on `DELTA`.\n- This GCode can be disabled with `NO_WORKSPACE_OFFSETS` to optimize movement.\n- Changing the home offsets will not invalidate bed leveling or other saved data.\n- If `EEPROM_SETTINGS` is enabled, the home offsets are saved with `M500`, loaded with `M501`, and reset with `M502`.\n- Use [`M206`](/docs/gcode/M206.html) to set the home offsets directly.\n","parameters":null,"requires":"HAS_HOME_OFFSET","tag":"m0428","title":"Home Offsets Here"},"M43":{"author":"thinkyhead","base":"M043","brief":"Get information about pins.","codes":["M43"],"examples":[{"code":"M43","pre":"Get a report on all pins"},{"code":"M43 I","pre":"Get a report on all pins, ignore pin protection list when displaying values"},{"code":"M43 P56 W","pre":"Watch pin 56 for changes"},{"code":"M43 E1","pre":"Start watching endstops"},{"code":"M43 T S3 L6 R5 W1000","pre":"Toggle pins 3-6 five times with 1 second low and 1 second high pulses but only if the pin isn't in the protected list."},{"code":"M43 S P2","pre":"Test probe controlled by servo index 2."}],"experimental":true,"group":"debug","long":["When setting up or debugging a machine it's useful to know how pins are assigned to functions by the firmware, and to be able to find pins for use with new functions. `M43` provides these tools. `M43` by itself reports all pin assignments. Use `P` to specify a single pin. Use `I` to report the values on pins that are protected. Use `W` to watch the specified pin, or all pins. Use the `E` option to monitor endstops. Use `S` option to test a BLTouch type servo probe. Use `T` option to toggle pins.","The `W` watch mode option continues looping, blocking all further commands, until the board is reset. If `EMERGENCY_PARSER` is enabled, `M108` may also be used to exit the watch loop without needing to reset the board.","See [`M43 T`](/docs/gcode/M043-T.html) for Pins Debugging toggle options."],"notes":["Requires `PINS_DEBUGGING`. This feature should be disabled for production use."],"parameters":[{"description":"Digital Pin Number","optional":true,"tag":"P","values":[{"tag":"pin","type":"int"}]},{"description":"Watch pins","optional":true,"tag":"W"},{"description":"Watch endstops","optional":true,"tag":"E","values":[{"type":"bool"}]},{"description":"Toggle pins - see `M43 T` for options","optional":true,"tag":"T","values":null},{"description":"Test BLTouch type servo probes. Use `P` to specify servo index (0-3). Defaults to 0 if `P` omitted","optional":true,"tag":"S","values":null},{"description":"Ignore protection when reporting values","optional":true,"tag":"I","values":null}],"requires":"PINS_DEBUGGING","tag":"m0043","title":"Debug Pins"},"M43 T":{"author":"thinkyhead","base":"M043-T","brief":"Get information about pins.","codes":["M43 T"],"examples":[{"code":"M43 T S3 L6 R5 W1000","pre":"Toggle pins 3-6 five times with 1 second low and 1 second high pulses but only if the pin isn't in the protected list."}],"experimental":true,"group":"debug","long":["The `M43 T` command toggles one or more pins."],"notes":["Requires `PINS_DEBUGGING`. This feature should be disabled for production use.","See [`M43`](/docs/gcode/M043.html) for other pins debug options."],"parameters":[{"description":"Start Pin number. If not given, will default to 0","optional":true,"tag":"S","values":[{"tag":"pin","type":"int"}]},{"description":"End Pin number. If not given, will default to last pin defined for this board","optional":true,"tag":"L","values":[{"tag":"pin","type":"int"}]},{"description":"Flag to ignore Marlin's pin protection. **Use with caution!!!!**","optional":true,"tag":"I","values":[{"type":"bool"}]},{"description":"Repeat pulses on each pin this number of times before continuing to next pin. If not given will default to 1.","optional":true,"tag":"R","values":[{"tag":"count","type":"int"}]},{"description":"Wait time (in milliseconds) transitions. If not given will default to 500.","optional":true,"tag":"W","values":[{"tag":"time","type":"int"}]}],"requires":"PINS_DEBUGGING","tag":"m0043b","title":"Toggle Pins"},"M48":{"author":"thinkyhead","base":"M048","brief":"Measure Z Probe repeatability.","codes":["M48"],"examples":null,"experimental":false,"group":"calibration","long":["Probes come in many flavors and as such have varying levels of accuracy, reliability, and repeatability, depending on several factors. This command tests the probe for accuracy and produces a standard deviation based on two or more probes of the same XY position."],"notes":["Requires `Z_MIN_PROBE_REPEATABILITY_TEST`."],"parameters":[{"description":"Engage for each probe","optional":true,"tag":"E","values":[{"tag":"engage","type":"bool"}]},{"description":"Number of legs to probe","optional":true,"tag":"L","values":[{"tag":"legs","type":"int"}]},{"description":"Number of probes to do","optional":true,"tag":"P","values":[{"tag":"count","type":"int"}]},{"description":"Star/Schizoid probe. By default this will do 7 points. Override with `L`.","optional":true,"tag":"S","values":[{"description":"Circular pattern","tag":0},{"description":"Star-like pattern","tag":1}]},{"description":"Verbose Level","optional":true,"tag":"V","values":[{"tag":"level","type":"int"}]},{"description":"X Position","optional":true,"tag":"X","values":[{"tag":"pos","type":"float"}]},{"description":"Y Position","optional":true,"tag":true,"values":[{"tag":"pos","type":"float"}]}],"requires":"Z_MIN_PROBE_REPEATABILITY_TEST","tag":"m0048","title":"Probe Accuracy Test"},"M5":{"author":"thinkyhead","base":"M005","brief":"Turn off spindle or laser","codes":["M5"],"examples":[{"code":"M5","pre":"Turn off the spindle or laser"}],"experimental":false,"group":"control","long":"Wait for moves to complete, then turn off the spindle / laser power and PWM.","notes":null,"parameters":null,"requires":"SPINDLE_LASER_ENABLE","since":"1.1.2","tag":"m0005","title":"Spindle / Laser Off"},"M500":{"author":"thinkyhead","base":"M500","brief":"Save settings to EEPROM.","codes":["M500"],"examples":[{"code":"M500","pre":"Save settings"}],"experimental":false,"group":"eeprom","long":"Save all configurable settings to EEPROM.","notes":["Requires `EEPROM_SETTINGS`.","Since Marlin 1.1.0 only changed bytes are written to prolong EEPROM life."],"parameters":null,"requires":"EEPROM_SETTINGS","tag":"m0500","title":"Save Settings"},"M501":{"author":"thinkyhead","base":"M501","brief":"Restore settings from EEPROM.","codes":["M501"],"examples":[{"code":"M501","pre":"Restore all settings."}],"experimental":false,"group":"eeprom","long":"Load all saved settings from EEPROM.","notes":"Requires `EEPROM_SETTINGS`.","parameters":null,"requires":"EEPROM_SETTINGS","tag":"m0501","title":"Restore Settings"},"M502":{"author":"thinkyhead","base":"M502","brief":"Restore all settings to factory defaults.","codes":["M502"],"examples":[{"code":["M502 ; reset!","M500 ; saved!!"],"pre":"Reset settings and save them to EEPROM"}],"experimental":false,"group":"eeprom","long":["Reset all configurable settings to their factory defaults.","To also reset settings in EEPROM, follow with [`M500`](/docs/gcode/M500.html)."],"notes":["This command can be used even if `EEPROM_SETTINGS` is disabled."],"parameters":null,"tag":"m0502","title":"Factory Reset"},"M503":{"author":"thinkyhead","base":"M503","brief":"Report all settings that may be saved to EEPROM.","codes":["M503"],"examples":null,"experimental":false,"group":"eeprom","long":"Print a concise report of all current settings (in SRAM) to the host console.","notes":"Does not require `EEPROM_SETTINGS`.","parameters":[{"description":"Detailed output flag. (`true` if omitted.)","optional":true,"tag":"S","values":[{"tag":"flag","type":"bool"}]}],"tag":"m0503","title":"Report Settings"},"M504":{"author":"ManuelMcLure","base":"M504","brief":"Validate the contents of the EEPROM.","codes":["M504"],"examples":[{"code":"M504","pre":"Validate EEPROM contents."}],"experimental":false,"group":"eeprom","long":"Validate the contents of the EEPROM.","notes":"Requires `EEPROM_SETTINGS`.","parameters":null,"requires":"EEPROM_SETTINGS","tag":"m0504","title":"Validate EEPROM contents"},"M524":{"author":"thinkyhead","base":"M524","brief":"Abort an SD print started with `M24`","codes":["M524"],"examples":[{"code":"M524","pre":"Abort an SD print"}],"experimental":false,"group":"sdcard","long":"Abort an SD print in progress and turn off all heaters.\n","notes":["Requires [`SDSUPPORT`](/docs/configuration/configuration.html#sd-card)"],"requires":"SDSUPPORT","since":"2.0.0","tag":"m0524","title":"Abort SD print"},"M540":{"author":"thinkyhead","base":"M540","brief":"Abort SD printing when an endstop is triggered.","codes":["M540"],"examples":null,"experimental":false,"group":"sdcard","long":"Set whether SD printing should abort in the event of any endstop being triggered. This provides a fast way to abort a print in the event of mechanical failure such as loose couplings, lost steps, diverted axes, binding, etc., which lead to axes being very far out of position.","notes":["Requires `SDSUPPORT` and `ABORT_ON_ENDSTOP_HIT_FEATURE_ENABLED`.","Use `ENDSTOPS_ALWAYS_ON_DEFAULT` or `M120` to ensure that endstops are enabled."],"parameters":[{"description":"Whether (1) or not (0) to abort SD printing on endstop hit.","optional":false,"tag":"S","values":[{"tag":"flag","type":"bool"}]}],"requires":"SDSUPPORT,ABORT_ON_ENDSTOP_HIT_FEATURE_ENABLED","tag":"m0540","title":"Endstops Abort SD"},"M569":{"author":"teemuatlut","base":"M569","brief":"Toggle stealthChop","codes":["M569"],"examples":[{"code":"M569 S1 Z E","pre":"Enable stealthChop on Z and E"},{"code":"M569 S0 X Y","pre":"Disable stealthChop (use spreadCycle) on X and Y"},{"code":"M569 S1 I1 X T1 E","pre":"Enable stealthChop on X2 and E1"},{"code":"M569","pre":"Report driver modes"}],"experimental":false,"group":"none","long":"Toggle between stealthChop and spreadCycle on supporting TMC drivers.","notes":["Requires at least one stealthChop capable TMC driver, such as TMC2130 or TMC2208."],"parameters":[{"description":"Stepping mode for the X stepper","optional":true,"tag":"X"},{"description":"Stepping mode for the Y stepper","optional":true,"tag":true},{"description":"Stepping mode for the Z stepper","optional":true,"tag":"Z"},{"description":"Stepping mode for the E0 stepper","optional":true,"tag":"E"},{"description":"Index for dual steppers. Use `I1` for X2, Y2, and/or Z2.","optional":true,"tag":"I","values":[{"type":"int","unit":"index"}]},{"description":"Index (tool) number for the E axis. If not specified, the E0 extruder.","optional":true,"tag":"T","values":[{"type":"int","unit":"index"}]}],"requires":"TMC2130, TMC2208","since":"2.0.0","tag":"m0569","title":"Set TMC stepping mode"},"M600":{"author":"clexpert, petrzjunior","base":"M600","brief":"Automatically change filament","codes":["M600"],"contrib":"thinkyhead","examples":[{"code":"M600 ; execute filament change","pre":"With no parameters `M600` uses the settings in `Configuration.h`."},{"code":"M600 X10 Y15 Z5 ; Do filament change at X:10, Y:15 and Z:+5 from current","pre":"To set the change position:"}],"experimental":false,"group":"filament","long":["The `M600` command initiates the filament change procedure. The basic procedure will move the print head away from the print, eject the filament, wait for new filament to be inserted and the user to confirm, load and prime the filament, and continue with the print. `M600` may be initiated automatically if a filament runout sensor is installed."],"notes":["Requires `ADVANCED_PAUSE_FEATURE`.","The settings for this command can be found in `Configuration.h`. At this time `M600` requires an LCD controller."],"parameters":[{"description":"Target extruder","optional":true,"tag":"T","values":[{"tag":"index","type":"int"}]},{"description":"Retract before moving to change position (negative, default `PAUSE_PARK_RETRACT_LENGTH`)","optional":true,"tag":"E","values":[{"tag":"pos","type":"float"}]},{"description":"Amount of retraction for unload (negative)","optional":true,"tag":"U","values":[{"tag":"pos","type":"float"}]},{"description":"Load length, longer for bowden (negative)","optional":true,"tag":"L","values":[{"tag":"pos","type":"float"}]},{"description":"X position for filament change","optional":true,"tag":"X","values":[{"tag":"pos","type":"float"}]},{"description":"Y position for filament change","optional":true,"tag":true,"values":[{"tag":"pos","type":"float"}]},{"description":"Z relative lift for filament change position","optional":true,"tag":"Z","values":[{"tag":"pos","type":"float"}]},{"description":"Number of beeps to alert user of filament change (default `FILAMENT_CHANGE_ALERT_BEEPS`)","optional":true,"tag":"B","values":[{"tag":"beeps","type":"int"}]}],"requires":"ADVANCED_PAUSE_FEATURE","since":"1.1.0","tag":"m0600","title":"Filament Change"},"M603":{"author":"ManuelMcLure","base":"M603","brief":"Configure automatic filament change parameters","codes":["M603"],"examples":[{"code":"M603 U120 L125","pre":"Configure load and unload lengths for automatic filament change"}],"experimental":false,"group":"filament","long":["The `M603` command configures automatic filament change parameters."],"notes":["Requires `ADVANCED_PAUSE_FEATURE`."],"parameters":[{"description":"Target extruder","optional":true,"tag":"T","values":[{"tag":"index","type":"int"}]},{"description":"Amount of retraction for unload (negative)","optional":true,"tag":"U","values":[{"tag":"pos","type":"float"}]},{"description":"Load length, longer for bowden (negative)","optional":true,"tag":"L","values":[{"tag":"pos","type":"float"}]}],"requires":"ADVANCED_PAUSE_FEATURE","since":"1.1.0","tag":"m0603","title":"Configure Filament Change"},"M605":{"author":"thinkyhead","base":"M605","brief":"Set the behavior mode for dual nozzles","codes":["M605"],"examples":null,"experimental":false,"group":"control","long":["This command behaves differently for `DUAL_X_CARRIAGE` vs. `DUAL_NOZZLE_DUPLICATION_MODE`","For `DUAL_NOZZLE_DUPLICATION_MODE` the `S2` parameter enables duplication mode. Any other value disables it.","For `DUAL_X_CARRIAGE`, this command sets the Dual X mode. See the description of `S` below."],"notes":null,"parameters":[{"description":"Select the pin to set for all specified axes.","optional":false,"tag":"S","values":[{"description":"Full control mode. Both carriages are free to move, constrained by safe distance. (Requires `DUAL_X_CARRIAGE`)","tag":0},{"description":"Auto-park mode. One carriage parks while the other moves. (Requires `DUAL_X_CARRIAGE`)","tag":1},{"description":"Duplication mode. Carriages and extruders move in unison.","tag":2}]},{"description":"X distance between dual X carriages.  (Requires `DUAL_X_CARRIAGE`)","optional":true,"tag":"X","values":[{"type":"float","unit":"linear"}]},{"description":"Temperature difference to apply to E1.  (Requires `DUAL_X_CARRIAGE`)","optional":true,"tag":"R","values":[{"type":"int","unit":"temp"}]}],"requires":"DUAL_NOZZLE_DUPLICATION_MODE|DUAL_X_CARRIAGE","tag":"m0605","title":"Dual Nozzle Mode"},"M665":{"author":"thinkyhead","base":"M665","brief":"Set delta geometry values","codes":["M665"],"examples":null,"experimental":false,"group":"none","long":["Delta machines are very fast and accurate when tuned. The first key is to make sure all your dimensions are set correctly. Even small errors in these values can lead to curved movements and failed prints. To ensure the best delta experience, use this command in conjunction with `G33` to get these dimensions set perfectly before beginning to print."],"notes":null,"parameters":[{"description":"Delta height","optional":true,"tag":"H","values":[{"tag":"linear","type":"float"}]},{"description":"Diagonal rod","optional":true,"tag":"L","values":[{"tag":"linear","type":"float"}]},{"description":"Delta radius","optional":true,"tag":"R","values":[{"tag":"linear","type":"float"}]},{"description":"Segments per second","optional":true,"tag":"S","values":[{"type":"float"}]},{"description":"Delta calibration radius","optional":true,"tag":"B","values":[{"tag":"linear","type":"float"}]},{"description":"Alpha (Tower 1) angle trim","optional":true,"tag":"X","values":[{"type":"float"}]},{"description":"Beta (Tower 2) angle trim","optional":true,"tag":true,"values":[{"type":"float"}]},{"description":"Gamma (Tower 3) angle trim","optional":true,"tag":"Z","values":[{"type":"float"}]}],"requires":"DELTA","tag":"m0665","title":"Delta Configuration"},"M666":{"author":"ManuelMcLure","base":"M666","brief":"Set Delta endstop adjustments","codes":["M666"],"examples":null,"experimental":false,"group":"calibration","long":"The `M666` command allows adjusting the endstops on a Delta printer.\n","parameters":[{"description":"Adjustment for the X actuator endstop","optional":true,"tag":"X","values":[{"tag":"adj","type":"float"}]},{"description":"Adjustment for the Y actuator endstop","optional":true,"tag":true,"values":[{"tag":"adj","type":"float"}]},{"description":"Adjustment for the Z actuator endstop","optional":true,"tag":"Z","values":[{"tag":"adj","type":"float"}]}],"requires":"DELTA","tag":"m0666a","title":"Set Delta endstop adjustments"},"M701":{"author":"revilor","base":"M701","brief":"Load filament","codes":["M701"],"examples":[{"code":"M701","pre":"Load filament into the active extruder"}],"experimental":false,"group":"control","long":"Load filament into the active extruder. By default this will use the configured `ADVANCED_PAUSE_FEATURE` settings.","notes":["Enabled using [`FILAMENT_LOAD_UNLOAD_GCODES`](/docs/configuration/configuration.html#advancedPause)"],"parameters":[{"description":"Optional extruder index. Current extruder if omitted.","optional":true,"tag":"T","values":[{"tag":"extruder","type":"int"}]},{"description":"Move the Z axis by this distance","optional":true,"tag":"Z","values":[{"tag":"distance","type":"float"}]},{"description":"Extrude distance for insertion (positive value) (manual reload)","optional":false,"tag":"L","values":[{"tag":"distance","type":"float"}]}],"requires":"NOZZLE_PARK_FEATURE,ADVANCED_PAUSE_FEATURE,FILAMENT_LOAD_UNLOAD_GCODES","tag":"m0701","title":"Load filament"},"M702":{"author":"revilor","base":"M702","brief":"Unload filament","codes":["M702"],"example":[{"code":"M702","pre":"Unload filament from current extruder"}],"experimental":false,"group":"control","long":"Unload filament. By default this command will use the configured `ADVANCED_PAUSE_FEATURE` settings.","notes":["Enabled using [`FILAMENT_LOAD_UNLOAD_GCODES`](/docs/configuration/configuration.html#advancedPause)"],"parameters":[{"description":"Optional extruder number. If omitted, current extruder (or ALL extruders with [`FILAMENT_UNLOAD_ALL_EXTRUDERS`](/docs/configuration/configuration.html#advancedPause)).","optional":true,"tag":"T","values":[{"tag":"extruder","type":"int"}]},{"description":"Move the Z axis by this distance","optional":true,"tag":"Z","values":[{"tag":"distance","type":"float"}]},{"description":"Retract distance for removal (manual reload)","optional":false,"tag":"U","values":[{"tag":"distance","type":"float"}]}],"requires":"NOZZLE_PARK_FEATURE,ADVANCED_PAUSE_FEATURE,FILAMENT_LOAD_UNLOAD_GCODES","tag":"m0702","title":"Unload filament"},"M7219":{"author":"thinkyhead","base":"M7219","brief":"Control Max7219 Segmented LEDs","codes":["M7219"],"examples":null,"experimental":false,"group":"debug","long":"Set the state of one or more Max7219 matrix displays or 7-segment digital displays.","notes":"Requires `MAX7219_DEBUG`.","parameters":[{"description":"Set the column specified by `C` to bit pattern `V`.","optional":true,"tag":"C","values":[{"tag":"column","type":"int"}]},{"description":"Set the row specified by `R` to bit pattern `V`.","optional":true,"tag":"R","values":[{"tag":"row","type":"int"}]},{"description":"Initialize (clear) all matrixes.","optional":true,"tag":"I"},{"description":"Fill the matrix by turning on all LEDs.","optional":true,"tag":"F"},{"description":"Print the LED array state for debugging.","optional":true,"tag":"P"},{"description":"Value to apply when using the `C`, `R`, or `X`/`Y` parameters.","optional":true,"tag":"V","values":[{"tag":"bits","type":"long"}]},{"description":"Set a matrix LED at the given `X` position to the `V` value. If no `V` is given, toggle the LED state.","optional":true,"tag":"X","values":[{"tag":"index","type":"int"}]},{"description":"Set a matrix LED at the given `Y` position to the `V` value. If no `V` is given, toggle the LED state.","optional":true,"tag":true,"values":[{"tag":"index","type":"int"}]}],"requires":"MAX7219_DEBUG","tag":"m7219","title":"MAX7219 Control","videos":["JXMEKXsmTpA"]},"M73":{"base":"M073","brief":"Set current print progress percentage for LCD.","codes":["M73"],"examples":[{"code":"M73 P25","pre":"Set print progress to 25%"}],"experimental":false,"group":"lcd","long":["Set current print progress percentage for LCD."],"parameters":[{"description":"Current print progress percentage","optional":false,"tag":"P","values":[{"tag":"percent","type":"int"}]}],"requires":"LCD_SET_PROGRESS_MANUALLY","since":"1.1.7","tag":"m0073","title":"Set Print Progress"},"M75":{"author":"thinkyhead","base":"M075","brief":"Start the print job timer.","codes":["M75"],"example":[{"code":"M75","pre":"Start the print job timer"}],"experimental":false,"group":"printjob","long":["Start the print job timer."],"notes":null,"parameters":null,"tag":"m0075","title":"Start Print Job Timer"},"M76":{"author":"thinkyhead","base":"M076","brief":"Pause the print job timer.","codes":["M76"],"example":[{"code":"M76","pre":"Pause the print job timer"}],"experimental":false,"group":"printjob","long":["Pause the print job timer."],"notes":null,"parameters":null,"tag":"m0076","title":"Pause Print Job"},"M77":{"author":"thinkyhead","base":"M077","brief":"Stop the print job timer.","codes":["M77"],"example":[{"code":"M77","pre":"Stop the print job timer"}],"experimental":false,"group":"printjob","long":["Stop the print job timer."],"notes":null,"parameters":null,"tag":"m0077","title":"Stop Print Job Timer"},"M78":{"author":"thinkyhead","base":"M078","brief":"Print statistics about print jobs.","codes":["M78"],"examples":null,"experimental":false,"group":"printjob","long":null,"notes":null,"parameters":null,"requires":"PRINTCOUNTER","tag":"m0078","title":"Print Job Stats"},"M80":{"author":"thinkyhead","base":"M080","brief":"Turn on the power supply.","codes":["M80"],"examples":null,"experimental":false,"group":"control","long":["Turn on the high-voltage power supply. Requires a board that's powered from USB or another 5V source."],"notes":["Requires `POWER_SUPPLY` and a digital pin connected to the PSU's enable pin."],"parameters":[{"description":"Report Power Supply state","optional":true,"tag":"S","values":null}],"requires":"POWER_SUPPLY\u003e0","tag":"m0080","title":"Power On"},"M81":{"author":"thinkyhead","base":"M081","brief":"Turn off the power supply.","codes":["M81"],"examples":null,"experimental":false,"group":"control","long":["Turn off the high-voltage power supply. If the board is not powered from another source, this may also shut down the electronics."],"notes":["Requires `POWER_SUPPLY` and a digital pin connected to the PSU's enable pin."],"parameters":null,"requires":"POWER_SUPPLY\u003e0","tag":"m0081","title":"Power Off"},"M82":{"author":"thinkyhead","base":"M082","brief":"Set E to absolute positioning.","codes":["M82"],"examples":null,"experimental":false,"group":"units","long":["This command is used to override `G91` and put the E axis into absolute mode independent of the other axes."],"notes":null,"parameters":null,"tag":"m0082","title":"E Absolute"},"M83":{"author":"thinkyhead","base":"M083","brief":"Set E to relative positioning.","codes":["M83"],"examples":null,"experimental":false,"group":"units","long":["This command is used to override `G90` and put the E axis into relative mode independent of the other axes."],"notes":null,"parameters":null,"tag":"m0083","title":"E Relative"},"M85":{"author":"thinkyhead","base":"M085","brief":"Set the inactivity timeout.","codes":["M85"],"examples":null,"experimental":false,"group":"control","long":["Use this command to set a maximum period of time for the machine to be inactive (with no moves). If the machine is idle for longer than the set period, the firmware will shut everything down and halt the machine."],"notes":null,"parameters":[{"description":"Max inactive seconds","optional":false,"tag":"S","values":[{"tag":"seconds","type":"int"}]}],"tag":"m0085","title":"Inactivity Shutdown"},"M851":{"author":"thinkyhead","base":"M851","brief":"Set the Z probe Z offset from nozzle","codes":["M851"],"examples":[{"code":"M851 Z-2.0","pre":"Set a reasonable offset for an inductive probe"},{"code":"M851 Z1.2","pre":"A probe that is triggered by the nozzle itself"}],"experimental":false,"group":"none","long":["Set the vertical distance from the nozzle to the Z probe trigger-point.","The easiest way to get the value is to:\n- Home the Z axis.\n- Raise Z and deploy the probe.\n- Move Z down slowly until the probe triggers.\n- Take the current Z value and negate it. (`5.2` =\u003e `-5.2`)\n- Set with `M851 Z-5.2` and `#define Z_PROBE_OFFSET_FROM_EXTRUDER -5.2`.\n"],"notes":"The default (factory) value is set by `Z_PROBE_OFFSET_FROM_EXTRUDER`.","parameters":[{"description":"Z probe Z offset","optional":false,"tag":"Z","values":[{"type":"float","unit":"linear"}]}],"requires":"HAS_BED_PROBE","tag":"m0851","title":"Z Probe Offset"},"M852":{"author":"HekTron802","base":"M852","brief":"Misalignment in the XYZ axes.","codes":["M852"],"experimental":true,"group":"calibration","long":["Bed Skew Compensation corrects for misalignment in the XY, XZ, and ZY axes through the use of correction factors."],"notes":["Correction factors have a range of -1 to 1.","See Bed Skew Compensation section in the configuration file for more information on calculating the correction factors."],"parameters":[{"description":"Skew correction factor for XY axis.","optional":true,"tag":"I","type":"float"},{"description":"Skew correction factor for XZ axis","optional":true,"tag":"J","type":"float"},{"description":"Skew correction factor for YZ axis","optional":true,"tag":"K","type":"float"},{"description":"Alias for `I` when only XY skew correction is enabled","optional":true,"tag":"S","type":"float"}],"tag":"m0852","title":"Bed Skew Compensation"},"M900":{"author":"thinkyhead","base":"M900","brief":"Get and set Linear Advance K value","codes":["M900"],"examples":[{"code":"M900","pre":"Fetch the K factor"},{"code":"M900 K0.18","pre":"Set the K factor"},{"code":["M900 T2 L0.9","M900 T2 S1"],"pre":"(`EXTRA_LIN_ADVANCE_K`) Set second K factor for T2, then activate it."}],"experimental":false,"group":"control","long":"Get and/or set the Linear Advance K factor.","notes":"See [Linear Advance](/docs/features/lin_advance.html) for details on how to determine the K factor.","parameters":[{"description":"Set the K factor for the specified extruder. Unchanged if omitted. Set this value higher for more flexible filament or a longer filament path.\n\nWith `EXTRA_LIN_ADVANCE_K` this sets the *primary* K factor. Note that this factor may be inactive and won't take effect until the next `M900 S0`.\n","optional":true,"tag":"K","values":[{"tag":"kfactor","type":"float"}]},{"description":"Set the second K factor for the specified extruder. Requires `EXTRA_LIN_ADVANCE_K`. Note that this factor may be inactive and won't take effect until the next `M900 S1`.","optional":true,"since":"2.0.0","tag":"L","values":[{"tag":"kfactor","type":"float"}]},{"description":"Select slot and -if changing slots- sideline the current value and reinstate the last-set or last-sidelined value.","optional":true,"since":"2.0.0","tag":"S","values":[{"tag":"slot","type":"int"}]},{"description":"Extruder to which `K`, `L`, and `S` will apply.","optional":true,"since":"2.0.0","tag":"T","values":[{"tag":"index","type":"int"}]}],"requires":"LIN_ADVANCE","tag":"m0900","title":"Linear Advance Factor"},"M906":{"author":"thinkyhead","base":"M906","brief":"Set the motor current (in milliamps)","codes":["M906"],"examples":[{"code":"M906 X5 Y5 Z5","pre":"Set the XYZ motor currents to 5mA"},{"code":"M906 T1 E10","pre":"Set the E1 motor current to 10mA"},{"code":"M906 I1 X5","pre":"Set the X2 motor current to 5mA"}],"experimental":false,"group":"none","long":"Set the current for a stepper motor in milliamps units.","notes":"Requires one or more TMC stepper drivers.","parameters":[{"description":"Current for the E0 stepper","optional":true,"tag":"E","values":[{"type":"int","unit":"mA"}]},{"description":"(\u003e=1.1.9) Index for dual steppers. Use `I1` for X2, Y2, and/or Z2.","optional":true,"tag":"I","values":[{"type":"int","unit":"index"}]},{"description":"(\u003e=1.1.9) Index (tool) number for the E axis. If not specified, the E0 extruder.","optional":true,"tag":"T","values":[{"type":"int","unit":"index"}]},{"description":"Current for the X stepper","optional":true,"tag":"X","values":[{"type":"int","unit":"mA"}]},{"description":"Current for the Y stepper","optional":true,"tag":true,"values":[{"type":"int","unit":"mA"}]},{"description":"Current for the Z stepper","optional":true,"tag":"Z","values":[{"type":"int","unit":"mA"}]}],"requires":"TMC2130,TMC2208,TMC2660","tag":"m0906","title":"TMC Motor Current"},"M907":{"author":"thinkyhead","base":"M907","brief":"Set motor current via digital trimpot","codes":["M907"],"examples":null,"experimental":false,"group":"control","long":"Set digital trimpot motor current using axis codes `X`, `Y`, `Z`, `E`, plus `B` and `S`. The unit used for current depends on the type of stepper driver.","notes":null,"parameters":[{"description":"Current for the E1 stepper (Requires `DIGIPOTSS_PIN` or `DIGIPOT_I2C`)","optional":true,"tag":"B","values":[{"tag":"current"}]},{"description":"Current for the E2 stepper (Requires `DIGIPOT_I2C`)","optional":true,"tag":"C","values":[{"tag":"current"}]},{"description":"Current for the E3 stepper (Requires `DIGIPOT_I2C`)","optional":true,"tag":"D","values":[{"tag":"current"}]},{"description":"Current for the E0 stepper","optional":true,"tag":"E","values":[{"tag":"current"}]},{"description":"Set this current on all steppers (Requires `DIGIPOTSS_PIN` or `DAC_STEPPER_CURRENT`)","optional":true,"tag":"S","values":[{"tag":"current"}]},{"description":"Current for the X stepper (and the Y stepper with `MOTOR_CURRENT_PWM_XY`)","optional":true,"tag":"X","values":[{"tag":"current"}]},{"description":"Current for the Y stepper (Use `X` with `MOTOR_CURRENT_PWM_XY`)","optional":true,"tag":true,"values":[{"tag":"current"}]},{"description":"Current for the Z stepper","optional":true,"tag":"Z","values":[{"tag":"current"}]}],"requires":"DIGIPOTSS_PIN|HAS_MOTOR_CURRENT_PWM|DIGIPOT_I2C|DAC_STEPPER_CURRENT","tag":"m0907","title":"Set Motor Current"},"M908":{"author":"thinkyhead","base":"M908","brief":"Set a digital trimpot directly","codes":["M908"],"examples":null,"experimental":false,"group":"control","long":"Set the digital trimpot current directly by address/channel/pin index. `DAC_STEPPER_CURRENT` pertains to the MCP4728.","notes":"Requires `DAC_STEPPER_CURRENT` or `DIGIPOTSS_PIN`.","parameters":[{"description":"Pin (i.e., Address, Channel)","optional":false,"tag":"P","values":[{"tag":"address","type":"int"}]},{"description":"Current value","optional":false,"tag":"S","values":[{"tag":"current","type":"int"}]}],"requires":"DAC_STEPPER_CURRENT|DIGIPOTSS_PIN","tag":"m0908","title":"Set Trimpot Pins"},"M909":{"author":"thinkyhead","base":"M909","brief":"Report DAC current values to host","codes":["M909"],"examples":[{"code":"M909"}],"experimental":false,"group":"control","long":"Print the DAC stepper current values in the format \"`% (Amps)`\".","notes":"Requires `DAC_STEPPER_CURRENT`.","parameters":null,"requires":"DAC_STEPPER_CURRENT","tag":"m0909","title":"DAC Print Values"},"M910":{"author":"thinkyhead","base":"M910","brief":"Commit digipot/DAC value to external EEPROM","codes":["M910"],"examples":null,"experimental":false,"group":"control","long":"Commit digipot/DAC value to external EEPROM via I2C.","notes":"Requires `DAC_STEPPER_CURRENT`.","parameters":null,"requires":"DAC_STEPPER_CURRENT","tag":"m0910","title":"Commit DAC to EEPROM"},"M911":{"author":"thinkyhead","base":"M911","brief":"Driver overtemperature pre-warn condition","codes":["M911"],"examples":null,"experimental":false,"group":"control","long":"Report the TMC stepper driver overtemperature pre-warn condition to the host.","notes":"Requires one or more TMC stepper drivers.","parameters":null,"requires":"TMC2130, TMC2208, TMC2660, MONITOR_DRIVER_STATUS","tag":"m0911","title":"TMC OT Pre-Warn Condition"},"M912":{"author":"thinkyhead","base":"M912","brief":"Clear overtemperature pre-warn condition flag","codes":["M912"],"examples":[{"code":"M912     ; clear all\nM912 X   ; clear X and X2\nM912 X1  ; clear X1 only\nM912 X2  ; clear X2 only\nM912 X E ; clear X, X2, and all E\nM912 E1  ; clear E1 only"}],"experimental":false,"group":"control","long":"Clear the stepper driver overtemperature pre-warn condition flag.","notes":"Requires one or more TMC stepper drivers.","parameters":[{"description":"Stepper number to set. If omitted, all specified axes.","optional":true,"since":"1.1.9","tag":"I","values":[{"description":"Both.","tag":0},{"description":"Base (X, Y, Z) steppers.","tag":1},{"description":"Second (X2, Y2, Z2) steppers.","tag":2}]},{"description":"Clear `X` and/or `X2` stepper driver Over Temperature Pre-warn flag.","optional":true,"tag":"X","type":"int"},{"description":"Clear `Y` and/or `Y2` stepper driver Over Temperature Pre-warn flag.","optional":true,"tag":true,"type":"int"},{"description":"Clear `Z` and/or `Z2` stepper driver Over Temperature Pre-warn flag.","optional":true,"tag":"Z","type":"int"},{"description":"Clear all or one `E` stepper driver Over Temperature Pre-warn flag.","optional":true,"tag":"E","type":"int","values":[{"description":"All E.","tag":"-"},{"description":"E index.","tag":"0-4"}]}],"requires":"TMC2130, TMC2208, TMC2660, MONITOR_DRIVER_STATUS","tag":"m0912","title":"Clear TMC OT Pre-Warn"},"M913":{"author":"mbuc","base":"M913","brief":"TMC driver switching to spreadCycle","codes":["M913"],"examples":[{"code":"M913 X100","post":"Both `X_HYBRID_THRESHOLD` and `X2_HYBRID_THRESHOLD` are set to 100.","pre":"In this case, assume that `X_IS_TRINAMIC` and `X2_IS_TRINAMIC` are both enabled in `Configuration_adv.h`. "},{"code":"M913 X100 Y120 E30","post":"`X_HYBRID_THRESHOLD` and `X2_HYBRID_THRESHOLD` are set to 100.  `Y_HYBRID_THRESHOLD` is set to 120.  `E0__HYBRID_THRESHOLD` and `E2_HYBRID_THRESHOLD` are both set to 30.  `E1_HYBRID_THRESHOLD` is not changed since the `E0_IS_TRINAMIC` flag is not set.","pre":"In this case, assume that `X_IS_TRINAMIC`, `X2_IS_TRINAMIC`, `Y_IS_TRINAMIC`, `E0_IS_TRINAMIC`, and `E2_IS_TRINAMIC` are enabled in `Configuration_adv.h`."}],"experimental":false,"group":"control","long":["When `HYBRID_THRESHOLD` is enabled, the TMC driver is switched from the quieter StealthChop to spreadCycle when the feed rate for a given stepper motor is over its `_HYBRID_THRESHOLD`.","### Individual Threshold Values\n- X_HYBRID_THRESHOLD\n- X2_HYBRID_THRESHOLD\n- Y_HYBRID_THRESHOLD\n- Y2_HYBRID_THRESHOLD\n- Z_HYBRID_THRESHOLD\n- Z2_HYBRID_THRESHOLD\n- E0_HYBRID_THRESHOLD\n- E1_HYBRID_THRESHOLD\n- E2_HYBRID_THRESHOLD\n- E3_HYBRID_THRESHOLD\n- E4_HYBRID_THRESHOLD\n"],"notes":["At least one parameter must be used.","Setting `X`, `Y`, `Z`, or `E` will set the hybrid threshold for all motors that fall under that category that have the `_IS_TRINAMIC` flag set.  See examples below."],"parameters":[{"description":"(\u003e=1.1.9) Index for dual steppers. Use `I1` for X2, Y2, and/or Z2.","optional":true,"tag":"I","values":[{"type":"int","unit":"index"}]},{"description":"(\u003e=1.1.9) Index (tool) number for the E axis. If not specified, the E0 extruder.","optional":true,"tag":"T","values":[{"type":"int","unit":"index"}]},{"description":"Set `X_HYBRID_THRESHOLD` and `X2_HYBRID_THRESHOLD` to the provided value.","optional":true,"tag":"X","type":"int"},{"description":"Set `Y_HYBRID_THRESHOLD` and `Y2_HYBRID_THRESHOLD` to the provided value.","optional":true,"tag":true,"type":"int"},{"description":"Set `Z_HYBRID_THRESHOLD` and `Z2_HYBRID_THRESHOLD` to the provided value.","optional":true,"tag":"Z","type":"int"},{"description":"Set `E0_HYBRID_THRESHOLD` and `E1_HYBRID_THRESHOLD` and `E2_HYBRID_THRESHOLD` and `E3_HYBRID_THRESHOLD` to the provided value.","optional":true,"tag":"E","type":"int"}],"requires":"HAVE_TMC2130 or HAVE_TMC2208,HYBRID_THRESHOLD","tag":"m0913","title":"Set Hybrid Threshold Speed"},"M914":{"author":"thinkyhead,mbuc","base":"M914","brief":"Set sensorless homing sensitivity","codes":["M914"],"examples":null,"experimental":false,"group":"control","long":"Some TMC stepper drivers can detect when they bump into something that causes them to stop moving. This feature is so sensitive that it can actually take the place of traditional endstops. Use this command to set the bump sensitivity for the X, Y, and Z stepper drivers.","notes":["Set `SENSORLESS_HOMING` in `Configuration_adv.h` to enable this feature.","This feature is currently only compatible with the TMC2130.","This works best with the `*_HOME_BUMP_MM` options set to 0.","Higher values = Lower sensitivity."],"parameters":[{"description":"(\u003e=1.1.9) Index for dual steppers. Use `I1` for X2, Y2, and/or Z2.","optional":true,"tag":"I","values":[{"type":"int","unit":"index"}]},{"description":"Sensitivity of the X stepper driver. A value from -64 to +63.","optional":true,"tag":"X","values":[{"type":"int"}]},{"description":"Sensitivity of the Y stepper driver. A value from -64 to +63.","optional":true,"tag":true,"values":[{"type":"int"}]},{"description":"Sensitivity of the Z stepper driver. A value from -64 to +63.","optional":true,"tag":"Z","values":[{"type":"int"}]}],"requires":"TMC2130,SENSORLESS_HOMING","tag":"m0914","title":"TMC Bump Sensitivity"},"M915":{"author":"thinkyhead","base":"M915","brief":"Align ends of the Z axis and test torque","codes":["M915"],"deprecated":"2.0.0","example":[{"code":["G21 ; Units to mm","M915 S300 Z5"],"pre":"Set a 300mA current and press the gantry against the top for 5 extra mm."}],"experimental":false,"group":"control","long":"The command aims to align the ends of the X gantry (for a Průša i3-style printer). Here's a [video demonstration](https://www.youtube.com/watch?v=JqH41K2vq0g\u0026t=300s).\n\nUsing the given current, Marlin will move the Z axis (at homing speed) to the top plus a given extra distance. _Since this intentionally stalls the Z steppers, you should use the minimum current required to move the axis._\n\nZ is then re-homed to correct the position.\n","notes":["This command is deprecated. Use `Z_STEPPER_AUTO_ALIGN` instead.","Requires `TMC_Z_CALIBRATION` and at least one TMC driver for Z axis.","If `Z_DUAL_STEPPER_DRIVERS` is used, both should be TMC drivers."],"parameters":[{"description":"Current value to use for the raise move. (Default: `CALIBRATION_CURRENT`)","optional":true,"tag":"S","values":[{"type":"int","unit":"mA"}]},{"description":"Extra distance past `Z_MAX_POS` to move the Z axis. (Default: `CALIBRATION_EXTRA_HEIGHT`)","optional":true,"tag":"Z","values":[{"type":"float","unit":"linear"}]}],"requires":"TMC2130,TMC_Z_CALIBRATION","tag":"m0915","title":"TMC Z axis calibration"},"M92":{"author":"thinkyhead","base":"M092","brief":"Set the number of steps-per-mm or steps-per-inch.","codes":["M92"],"example":[{"code":"M92 E688.4","pre":"Set E steps for a new extruder"}],"experimental":false,"group":"planner","long":["Use `M92` to set the steps-per-unit for one or more axes. This setting affects how many steps will be done for each unit of movement. Units will be in steps/mm unless *inch* mode is set with [`G20`](/docs/gcode/G020.html) (which requires `INCH_MODE_SUPPORT`)."],"notes":["Get the current steps-per-unit settings with `M503`.\n\nWith `EEPROM_SETTINGS` enabled:\n\n- This setting for all axes is saved with `M500` and loaded with `M501`.\n- `M502` resets steps-per-unit for all axes to the values from `DEFAULT_AXIS_STEPS_PER_UNIT`.\n"],"parameters":[{"description":"X steps per unit","optional":true,"tag":"X","values":[{"tag":"steps","type":"float"}]},{"description":"Y steps per unit","optional":true,"tag":true,"values":[{"tag":"steps","type":"float"}]},{"description":"Z steps per unit","optional":true,"tag":"Z","values":[{"tag":"steps","type":"float"}]},{"description":"E steps per unit","optional":true,"tag":"E","values":[{"tag":"steps","type":"float"}]},{"description":"Target extruder (Requires `DISTINCT_E_FACTORS`)","optional":true,"tag":"T","values":[{"tag":"index","type":"int"}]}],"tag":"m0092","title":"Set Axis Steps-per-unit"},"M928":{"author":"thinkyhead","base":"M928","brief":"Log serial input to an SD file","codes":["M928"],"examples":[{"code":"M928 log.txt","pre":"Start logging to log.txt"}],"experimental":false,"group":"sdcard","long":"Use this command to start logging all console and host input to an SD file while still operating the machine.","notes":"Stop logging with `M29`.","parameters":[{"description":"File name of log file","optional":false,"tag":"filename"}],"related":["M29"],"tag":"m0928","title":"Start SD Logging"},"M999":{"author":"thinkyhead","base":"M999","brief":"Return the machine to Running state","codes":["M999"],"examples":[{"code":"M999","pre":"Restart the machine"}],"experimental":false,"group":"control","long":"If a **STOP** occurs you can use `M999` to restart the \"stopped\" machine after resolving the issue.\n\nMarlin will call **STOP** if any error occurs that would make continuing the current process problematic. For example, if the probe fails to deploy, it will abort probing and STOP. Note that this disables all heaters.\n","notes":null,"parameters":[{"description":"Resume without flushing the command buffer. The default behaviour is to flush the serial buffer and request a resend to the host starting on the last `N` line received.","tag":"S","values":[{"type":"bool"}]}],"tag":"m0999","title":"STOP Restart"}}